export declare const KEYBORG_FOCUSIN = "keyborg:focusin";
export interface KeyborgFocusInEventDetails {
    relatedTarget?: HTMLElement;
    isFocusedProgrammatically?: boolean;
}
export interface KeyborgFocusInEvent extends Event {
    details: KeyborgFocusInEventDetails;
}
/**
 * Guarantees that the native `focus` will be used
 */
export declare function nativeFocus(element: HTMLElement): void;
/**
 * Overrides the native `focus` and setups the keyborg focus event
 */
export declare function setupFocusEvent(win: Window): void;
/**
 * Removes keyborg event listeners and custom focus override
 * @param win The window that stores keyborg focus events
 */
export declare function disposeFocusEvent(win: Window): void;
/**
 * @param win The window that stores keyborg focus events
 * @returns The last element focused with element.focus()
 */
export declare function getLastFocusedProgrammatically(win: Window): HTMLElement | null | undefined;
