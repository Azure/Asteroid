/*!
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import * as Types from "./Types";
export declare class FocusableAPI implements Types.FocusableAPI {
    private _tabster;
    private _win;
    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow);
    dispose(): void;
    private _getBody;
    getProps(element: HTMLElement): Types.FocusableProps;
    isFocusable(el: HTMLElement, includeProgrammaticallyFocusable?: boolean, noVisibleCheck?: boolean, noAccessibleCheck?: boolean): boolean;
    isVisible(el: HTMLElement): boolean;
    isAccessible(el: HTMLElement): boolean;
    private _isDisabled;
    private _isHidden;
    findFirst(options: Types.FindFirstProps): HTMLElement | null | undefined;
    findLast(options: Types.FindFirstProps): HTMLElement | null | undefined;
    findNext(options: Types.FindNextProps): HTMLElement | null | undefined;
    findPrev(options: Types.FindNextProps): HTMLElement | null | undefined;
    findDefault(options: Types.FindDefaultProps): HTMLElement | null;
    findAll(options: Types.FindAllProps): HTMLElement[];
    findElement(options: Types.FindFocusableProps): HTMLElement | null | undefined;
    private _findElements;
    private _acceptElement;
}
