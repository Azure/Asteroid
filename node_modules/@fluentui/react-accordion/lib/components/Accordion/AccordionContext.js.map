{"version":3,"sources":["packages/react-components/react-accordion/src/components/Accordion/AccordionContext.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,EAAyC,kBAAzC,QAAmE,kCAAnE;AAIA,OAAO,MAAM,gBAAgB,gBAAmC,aAAa,CAC3E,SAD2E,CAAtE;AAIP,MAAM,4BAA4B,GAA0B;EAC1D,SAAS,EAAE,EAD+C;EAE1D,WAAW,EAAE,KAF6C;;EAG1D,aAAa,GAAA;IACX;EACD;;AALyD,CAA5D;AAQA,OAAO,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,QAA3C;AACP,OAAO,MAAM,4BAA4B,GAAO,QAAJ,IAC1C,kBAAkB,CAAC,gBAAD,EAAmB,CAAC,GAAG,GAAG,4BAAP,KAAwC,QAAQ,CAAC,GAAD,CAAnE,CADb","sourcesContent":["import { createContext, ContextSelector, useContextSelector } from '@fluentui/react-context-selector';\nimport type { Context } from '@fluentui/react-context-selector';\nimport type { AccordionContextValue } from './Accordion.types';\n\nexport const AccordionContext: Context<AccordionContextValue> = createContext<AccordionContextValue | undefined>(\n  undefined,\n) as Context<AccordionContextValue>;\n\nconst accordionContextDefaultValue: AccordionContextValue = {\n  openItems: [],\n  collapsible: false,\n  requestToggle() {\n    /* noop */\n  },\n};\n\nexport const AccordionProvider = AccordionContext.Provider;\nexport const useAccordionContext_unstable = <T>(selector: ContextSelector<AccordionContextValue, T>): T =>\n  useContextSelector(AccordionContext, (ctx = accordionContextDefaultValue) => selector(ctx));\n"],"sourceRoot":"../src/"}