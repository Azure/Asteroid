{"version":3,"file":"useAccordionItem.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-accordion/src/components/AccordionItem/useAccordionItem.ts"],"names":[],"mappings":";;;;IAMA;;;;OAIG;IACI,IAAM,yBAAyB,GAAG,UACvC,KAAyB,EACzB,GAA2B;QAEnB,IAAA,KAAK,GAAuB,KAAK,MAA5B,EAAE,KAAqB,KAAK,SAAV,EAAhB,QAAQ,mBAAG,KAAK,KAAA,CAAW;QAE1C,IAAM,aAAa,GAAG,+CAA4B,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,aAAa,EAAjB,CAAiB,CAAC,CAAC;QAC7E,IAAM,IAAI,GAAG,+CAA4B,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAAC;QAChF,IAAM,sBAAsB,GAAG,KAAK,CAAC,WAAW,CAAC,UAAC,EAAwB,IAAK,OAAA,aAAa,CAAC,EAAE,EAAE,EAAE,KAAK,OAAA,EAAE,CAAC,EAA5B,CAA4B,EAAE;YAC3G,aAAa;YACb,KAAK;SACN,CAAC,CAAC;QAEH,OAAO;YACL,IAAI,MAAA;YACJ,QAAQ,UAAA;YACR,aAAa,EAAE,sBAAsB;YACrC,UAAU,EAAE;gBACV,IAAI,EAAE,KAAK;aACZ;YACD,IAAI,EAAE,uCAAqB,CAAC,KAAK,qBAC/B,GAAG,EAAE,GAAG,IACL,KAAK,EACR;SACH,CAAC;IACJ,CAAC,CAAC;IAzBW,QAAA,yBAAyB,6BAyBpC","sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useAccordionContext_unstable } from '../Accordion/AccordionContext';\nimport type { AccordionItemProps, AccordionItemState } from './AccordionItem.types';\nimport type { AccordionToggleEvent } from '../Accordion/Accordion.types';\n\n/**\n * Returns the props and state required to render the component\n * @param props - AccordionItem properties\n * @param ref - reference to root HTMLElement of AccordionItem\n */\nexport const useAccordionItem_unstable = (\n  props: AccordionItemProps,\n  ref: React.Ref<HTMLElement>,\n): AccordionItemState => {\n  const { value, disabled = false } = props;\n\n  const requestToggle = useAccordionContext_unstable(ctx => ctx.requestToggle);\n  const open = useAccordionContext_unstable(ctx => ctx.openItems.includes(value));\n  const onAccordionHeaderClick = React.useCallback((ev: AccordionToggleEvent) => requestToggle(ev, { value }), [\n    requestToggle,\n    value,\n  ]);\n\n  return {\n    open,\n    disabled,\n    onHeaderClick: onAccordionHeaderClick,\n    components: {\n      root: 'div',\n    },\n    root: getNativeElementProps('div', {\n      ref: ref,\n      ...props,\n    }),\n  };\n};\n"]}