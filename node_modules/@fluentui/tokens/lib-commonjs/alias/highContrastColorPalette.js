"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.colorPaletteTokens = void 0;

const colors_1 = /*#__PURE__*/require("../global/colors");

const sharedColorNames_1 = /*#__PURE__*/require("../sharedColorNames");

const statusColorPaletteTokens = /*#__PURE__*/sharedColorNames_1.statusSharedColorNames.reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background1`]: colors_1.hcCanvas,
    [`colorPalette${color}Background2`]: colors_1.hcCanvas,
    [`colorPalette${color}Background3`]: colors_1.hcCanvasText,
    [`colorPalette${color}Foreground1`]: colors_1.hcCanvasText,
    [`colorPalette${color}Foreground2`]: colors_1.hcCanvasText,
    [`colorPalette${color}Foreground3`]: colors_1.hcCanvasText,
    [`colorPalette${color}BorderActive`]: colors_1.hcHighlight,
    [`colorPalette${color}Border1`]: colors_1.hcCanvasText,
    [`colorPalette${color}Border2`]: colors_1.hcCanvasText
  };
  return Object.assign(acc, sharedColorTokens);
}, {}); // one-off patches

statusColorPaletteTokens.colorPaletteRedForegroundInverted = colors_1.hcCanvasText;
statusColorPaletteTokens.colorPaletteGreenForegroundInverted = colors_1.hcCanvasText;
statusColorPaletteTokens.colorPaletteYellowForegroundInverted = colors_1.hcCanvasText;
const personaColorPaletteTokens = /*#__PURE__*/sharedColorNames_1.personaSharedColorNames.reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background2`]: colors_1.hcCanvas,
    [`colorPalette${color}Foreground2`]: colors_1.hcCanvasText,
    [`colorPalette${color}BorderActive`]: colors_1.hcHighlight
  };
  return Object.assign(acc, sharedColorTokens);
}, {});
exports.colorPaletteTokens = { ...statusColorPaletteTokens,
  ...personaColorPaletteTokens
};
//# sourceMappingURL=highContrastColorPalette.js.map