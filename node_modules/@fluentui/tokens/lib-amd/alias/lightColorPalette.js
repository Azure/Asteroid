define(["require", "exports", "tslib", "../global/colorPalette", "../sharedColorNames"], function (require, exports, tslib_1, colorPalette_1, sharedColorNames_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.colorPaletteTokens = void 0;
    var statusColorPaletteTokens = sharedColorNames_1.statusSharedColorNames.reduce(function (acc, sharedColor) {
        var _a;
        var color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
        var sharedColorTokens = (_a = {},
            _a["colorPalette" + color + "Background1"] = colorPalette_1.statusSharedColors[sharedColor].tint60,
            _a["colorPalette" + color + "Background2"] = colorPalette_1.statusSharedColors[sharedColor].tint40,
            _a["colorPalette" + color + "Background3"] = colorPalette_1.statusSharedColors[sharedColor].primary,
            _a["colorPalette" + color + "Foreground1"] = colorPalette_1.statusSharedColors[sharedColor].shade10,
            _a["colorPalette" + color + "Foreground2"] = colorPalette_1.statusSharedColors[sharedColor].shade30,
            _a["colorPalette" + color + "Foreground3"] = colorPalette_1.statusSharedColors[sharedColor].primary,
            _a["colorPalette" + color + "BorderActive"] = colorPalette_1.statusSharedColors[sharedColor].primary,
            _a["colorPalette" + color + "Border1"] = colorPalette_1.statusSharedColors[sharedColor].tint40,
            _a["colorPalette" + color + "Border2"] = colorPalette_1.statusSharedColors[sharedColor].primary,
            _a);
        return Object.assign(acc, sharedColorTokens);
    }, {});
    // one-off patch for yellow
    statusColorPaletteTokens.colorPaletteYellowForeground1 = colorPalette_1.statusSharedColors.yellow.shade30;
    statusColorPaletteTokens.colorPaletteRedForegroundInverted = colorPalette_1.statusSharedColors.red.tint20;
    statusColorPaletteTokens.colorPaletteGreenForegroundInverted = colorPalette_1.statusSharedColors.green.tint20;
    statusColorPaletteTokens.colorPaletteYellowForegroundInverted = colorPalette_1.statusSharedColors.yellow.tint40;
    var personaColorPaletteTokens = sharedColorNames_1.personaSharedColorNames.reduce(function (acc, sharedColor) {
        var _a;
        var color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
        var sharedColorTokens = (_a = {},
            _a["colorPalette" + color + "Background2"] = colorPalette_1.personaSharedColors[sharedColor].tint40,
            _a["colorPalette" + color + "Foreground2"] = colorPalette_1.personaSharedColors[sharedColor].shade30,
            _a["colorPalette" + color + "BorderActive"] = colorPalette_1.personaSharedColors[sharedColor].primary,
            _a);
        return Object.assign(acc, sharedColorTokens);
    }, {});
    exports.colorPaletteTokens = tslib_1.__assign(tslib_1.__assign({}, statusColorPaletteTokens), personaColorPaletteTokens);
});
//# sourceMappingURL=lightColorPalette.js.map