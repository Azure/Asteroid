define(["require", "exports", "react", "@fluentui/react-shared-contexts", "../focus/focusWithinPolyfill"], function (require, exports, React, react_shared_contexts_1, focusWithinPolyfill_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useFocusWithin = void 0;
    /**
     * A ponyfill that allows `:focus-within` to support visibility based on keyboard/mouse navigation
     * like `:focus-visible` https://github.com/WICG/focus-visible/issues/151
     * @returns ref to the element that uses `:focus-within` styles
     */
    function useFocusWithin() {
        var targetDocument = react_shared_contexts_1.useFluent_unstable().targetDocument;
        var elementRef = React.useRef(null);
        React.useEffect(function () {
            if ((targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) && elementRef.current) {
                return focusWithinPolyfill_1.applyFocusWithinPolyfill(elementRef.current, targetDocument.defaultView);
            }
        }, [elementRef, targetDocument]);
        return elementRef;
    }
    exports.useFocusWithin = useFocusWithin;
});
//# sourceMappingURL=useFocusWithin.js.map