define(["require", "exports", "tabster", "./useTabsterAttributes", "./useTabster"], function (require, exports, tabster_1, useTabsterAttributes_1, useTabster_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useFocusableGroup = void 0;
    /**
     * A hook that returns the necessary tabster attributes to support groupping.
     * @param options - Options to configure keyboard navigation
     */
    var useFocusableGroup = function (options) {
        var tabster = useTabster_1.useTabster();
        if (tabster) {
            tabster_1.getGroupper(tabster);
        }
        return useTabsterAttributes_1.useTabsterAttributes({
            groupper: {
                tabbability: getTabbability(options === null || options === void 0 ? void 0 : options.tabBehavior),
            },
        });
    };
    exports.useFocusableGroup = useFocusableGroup;
    var getTabbability = function (tabBehavior) {
        switch (tabBehavior) {
            case 'unlimited':
                return tabster_1.Types.GroupperTabbabilities.Unlimited;
            case 'limited':
                return tabster_1.Types.GroupperTabbabilities.Limited;
            case 'limited-trap-focus':
                return tabster_1.Types.GroupperTabbabilities.LimitedTrapFocus;
            default:
                return undefined;
        }
    };
});
//# sourceMappingURL=useFocusableGroup.js.map