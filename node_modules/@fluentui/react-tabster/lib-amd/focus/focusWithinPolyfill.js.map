{"version":3,"file":"focusWithinPolyfill.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-tabster/src/focus/focusWithinPolyfill.ts"],"names":[],"mappings":";;;;IAUA;;;;OAIG;IACH,SAAgB,wBAAwB,CAAC,OAAoB,EAAE,GAAW;QACxE,IAAM,OAAO,GAAG,uBAAa,CAAC,GAAG,CAAC,CAAC;QAEnC,0EAA0E;QAC1E,OAAO,CAAC,SAAS,CAAC,UAAA,wBAAwB;YACxC,IAAI,CAAC,wBAAwB,EAAE;gBAC7B,sBAAsB,CAAC,OAAO,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;QAEH,kFAAkF;QAClF,8CAA8C;QAC9C,IAAM,eAAe,GAAG,UAAC,CAAsB;YAC7C,IAAI,OAAO,CAAC,wBAAwB,EAAE,IAAI,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;gBACjE,+EAA+E;gBAC/E,qBAAqB,CAAC,OAAO,CAAC,CAAC;aAChC;QACH,CAAC,CAAC;QAEF,gFAAgF;QAChF,IAAM,YAAY,GAAG,UAAC,CAAa;YACjC,IAAI,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE;gBAC9F,sBAAsB,CAAC,OAAO,CAAC,CAAC;aACjC;QACH,CAAC,CAAC;QAEF,OAAO,CAAC,gBAAgB,CAAC,yBAAe,EAAE,eAAmC,CAAC,CAAC;QAC/E,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAEnD,kBAAkB;QAClB,OAAO;YACL,OAAO,CAAC,mBAAmB,CAAC,yBAAe,EAAE,eAAmC,CAAC,CAAC;YAClF,OAAO,CAAC,mBAAmB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;YACtD,wBAAc,CAAC,OAAO,CAAC,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC;IAnCD,4DAmCC;IAED,SAAS,qBAAqB,CAAC,EAAe;QAC5C,EAAE,CAAC,YAAY,CAAC,6BAAiB,EAAE,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,SAAS,sBAAsB,CAAC,EAAe;QAC7C,EAAE,CAAC,eAAe,CAAC,6BAAiB,CAAC,CAAC;IACxC,CAAC;IAED,SAAS,aAAa,CAAC,MAA0B;QAC/C,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,KAAK,CAAC;SACd;QACD,OAAO,OAAO,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,WAAW,IAAI,MAAM,IAAI,UAAU,IAAI,MAAM,CAAC,CAAC;IACxG,CAAC","sourcesContent":["import { KEYBORG_FOCUSIN, KeyborgFocusInEvent, createKeyborg, disposeKeyborg } from 'keyborg';\nimport { FOCUS_WITHIN_ATTR } from './constants';\n\n/**\n * Because `addEventListener` type override falls back to 2nd definition (evt name is unknown string literal)\n * evt is being typed as a base class of MouseEvent -> `Event`.\n * This type is used to override `listener` calls to make TS happy\n */\ntype ListenerOverride = (evt: Event) => void;\n\n/**\n * A ponyfill that allows `:focus-within` to support visibility based on keyboard/mouse navigation\n * like `:focus-visible` https://github.com/WICG/focus-visible/issues/151\n * @returns ref to the element that uses `:focus-within` styles\n */\nexport function applyFocusWithinPolyfill(element: HTMLElement, win: Window): () => void {\n  const keyborg = createKeyborg(win);\n\n  // When navigation mode changes to mouse, remove the focus-within selector\n  keyborg.subscribe(isNavigatingWithKeyboard => {\n    if (!isNavigatingWithKeyboard) {\n      removeFocusWithinClass(element);\n    }\n  });\n\n  // Keyborg's focusin event is delegated so it's only registered once on the window\n  // and contains metadata about the focus event\n  const keyborgListener = (e: KeyborgFocusInEvent) => {\n    if (keyborg.isNavigatingWithKeyboard() && isHTMLElement(e.target)) {\n      // Griffel can't create chained global styles so use the parent element for now\n      applyFocusWithinClass(element);\n    }\n  };\n\n  // Make sure that when focus leaves the scope, the focus within class is removed\n  const blurListener = (e: FocusEvent) => {\n    if (!e.relatedTarget || (isHTMLElement(e.relatedTarget) && !element.contains(e.relatedTarget))) {\n      removeFocusWithinClass(element);\n    }\n  };\n\n  element.addEventListener(KEYBORG_FOCUSIN, keyborgListener as ListenerOverride);\n  element.addEventListener('focusout', blurListener);\n\n  // Return disposer\n  return () => {\n    element.removeEventListener(KEYBORG_FOCUSIN, keyborgListener as ListenerOverride);\n    element.removeEventListener('focusout', blurListener);\n    disposeKeyborg(keyborg);\n  };\n}\n\nfunction applyFocusWithinClass(el: HTMLElement) {\n  el.setAttribute(FOCUS_WITHIN_ATTR, '');\n}\n\nfunction removeFocusWithinClass(el: HTMLElement) {\n  el.removeAttribute(FOCUS_WITHIN_ATTR);\n}\n\nfunction isHTMLElement(target: EventTarget | null): target is HTMLElement {\n  if (!target) {\n    return false;\n  }\n  return Boolean(target && typeof target === 'object' && 'classList' in target && 'contains' in target);\n}\n"]}