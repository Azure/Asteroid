{"version":3,"file":"toggleScrollListener.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-positioning/src/utils/toggleScrollListener.ts"],"names":[],"mappings":";;;;IAGA;;;;;OAKG;IACH,SAAgB,oBAAoB,CAClC,IAAoD,EACpD,IAAoD,EACpD,OAAsB;QAEtB,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,OAAO;SACR;QAED,IAAI,IAAI,YAAY,WAAW,EAAE;YAC/B,IAAM,gBAAgB,GAAG,iCAAe,CAAC,IAAI,CAAC,CAAC;YAC/C,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SACzD;QACD,IAAI,IAAI,YAAY,WAAW,EAAE;YAC/B,IAAM,YAAY,GAAG,iCAAe,CAAC,IAAI,CAAC,CAAC;YAC3C,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SAClD;IACH,CAAC;IAjBD,oDAiBC","sourcesContent":["import type { PositioningVirtualElement } from '../types';\nimport { getScrollParent } from './getScrollParent';\n\n/**\n * Toggles event listeners for scroll parent.\n * Cleans up the event listeners for the previous element and adds them for the new scroll parent.\n * @param next Next element\n * @param prev Previous element\n */\nexport function toggleScrollListener(\n  next: HTMLElement | PositioningVirtualElement | null,\n  prev: HTMLElement | PositioningVirtualElement | null,\n  handler: EventListener,\n) {\n  if (next === prev) {\n    return;\n  }\n\n  if (prev instanceof HTMLElement) {\n    const prevScrollParent = getScrollParent(prev);\n    prevScrollParent.removeEventListener('scroll', handler);\n  }\n  if (next instanceof HTMLElement) {\n    const scrollParent = getScrollParent(next);\n    scrollParent.addEventListener('scroll', handler);\n  }\n}\n"]}