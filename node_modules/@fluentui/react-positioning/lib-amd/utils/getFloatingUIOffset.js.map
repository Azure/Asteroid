{"version":3,"file":"getFloatingUIOffset.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-positioning/src/utils/getFloatingUIOffset.ts"],"names":[],"mappings":";;;;IAkCA;;;;OAIG;IACH,SAAgB,mBAAmB,CACjC,SAA6B;QAE7B,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,SAAS,CAAC;SAClB;QAED,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YAClE,OAAO,SAAS,CAAC;SAClB;QAED,OAAO,UAAC,EAA6C;gBAA3C,aAA8B,EAArB,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAI,SAAS,eAAA;YAC3C,IAAA,KAA0B,iDAAuB,CAAC,SAAS,CAAC,EAA1D,QAAQ,cAAA,EAAE,SAAS,eAAuC,CAAC;YACnE,OAAO,SAAS,CAAC,EAAE,cAAc,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,UAAA,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;QAC7F,CAAC,CAAC;IACJ,CAAC;IAfD,kDAeC","sourcesContent":["import type { Offset } from '../types';\nimport type { MiddlewareArguments } from '@floating-ui/dom';\nimport { fromFloatingUIPlacement } from './fromFloatingUIPlacement';\n/**\n * Type taken from Floating UI since they are not exported\n */\nexport type FloatingUIOffsetValue =\n  | number\n  | {\n      /**\n       * The axis that runs along the side of the floating element.\n       * @default 0\n       */\n      mainAxis?: number;\n      /**\n       * The axis that runs along the alignment of the floating element.\n       * @default 0\n       */\n      crossAxis?: number;\n      /**\n       * When set to a number, overrides the `crossAxis` value for aligned\n       * (non-centered/base) placements and works logically. A positive number\n       * will move the floating element in the direction of the opposite edge\n       * to the one that is aligned, while a negative number the reverse.\n       * @default null\n       */\n      alignmentAxis?: number | null;\n    };\n\n/**\n * Type taken from Floating UI since they are not exported\n */\nexport type FloatingUIOffsetFunction = (args: MiddlewareArguments) => FloatingUIOffsetValue;\n\n/**\n * Shim to transform offset values from this library to Floating UI\n * @param rawOffset Offset from this library\n * @returns An offset value compatible with Floating UI\n */\nexport function getFloatingUIOffset(\n  rawOffset: Offset | undefined,\n): FloatingUIOffsetValue | FloatingUIOffsetFunction | undefined {\n  if (!rawOffset) {\n    return rawOffset;\n  }\n\n  if (typeof rawOffset === 'number' || typeof rawOffset === 'object') {\n    return rawOffset;\n  }\n\n  return ({ rects: { floating, reference }, placement }) => {\n    const { position, alignment } = fromFloatingUIPlacement(placement);\n    return rawOffset({ positionedRect: floating, targetRect: reference, position, alignment });\n  };\n}\n"]}