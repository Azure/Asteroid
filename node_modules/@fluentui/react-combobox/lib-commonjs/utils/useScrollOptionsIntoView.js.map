{"version":3,"sources":["packages/react-components/react-combobox/src/utils/useScrollOptionsIntoView.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,KAAA,gBAAA,OAAA,CAAA,OAAA,CAAA;;AACA,MAAA,iBAAA,gBAAA,OAAA,CAAA,2BAAA,CAAA;;AAGA,SAAgB,wBAAhB,CAAyC,KAAzC,EAA4D;EAC1D,MAAM;IAAE;EAAF,IAAmB,KAAzB;EACA,MAAM,kBAAkB,GAAG,KAAK,CAAC,MAAN,CAA6B,IAA7B,CAA3B;EAEA,KAAK,CAAC,SAAN,CAAgB,MAAK;IACnB,IAAI,kBAAkB,CAAC,OAAnB,IAA8B,YAA9B,IAA8C,iBAAA,CAAA,SAAA,EAAlD,EAA+D;MAC7D,MAAM,mBAAmB,GAAG,kBAAkB,CAAC,OAAnB,CAA2B,aAA3B,CAAyC,IAAI,YAAY,CAAC,EAAE,EAA5D,CAA5B;;MAEA,IAAI,CAAC,mBAAL,EAA0B;QACxB;MACD;;MAED,MAAM;QAAE,YAAF;QAAgB;MAAhB,IAA8B,mBAApC;MACA,MAAM;QAAE,YAAY,EAAE,kBAAhB;QAAoC;MAApC,IAAkD,kBAAkB,CAAC,OAA3E;MAEA,MAAM,OAAO,GAAG,SAAS,GAAG,SAA5B;MACA,MAAM,OAAO,GAAG,SAAS,GAAG,YAAZ,GAA2B,SAAS,GAAG,kBAAvD,CAX6D,CAa7D;MACA;;MACA,MAAM,MAAM,GAAG,CAAf;;MAEA,IAAI,OAAJ,EAAa;QACX,kBAAkB,CAAC,OAAnB,CAA2B,QAA3B,CAAoC,CAApC,EAAuC,SAAS,GAAG,MAAnD;MACD,CAFD,MAEO,IAAI,OAAJ,EAAa;QAClB,kBAAkB,CAAC,OAAnB,CAA2B,QAA3B,CAAoC,CAApC,EAAuC,SAAS,GAAG,kBAAZ,GAAiC,YAAjC,GAAgD,MAAvF;MACD;IACF;EACF,CAxBD,EAwBG,CAAC,YAAD,CAxBH;EA0BA,OAAO,kBAAP;AACD;;AA/BD,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourcesContent":["import * as React from 'react';\nimport { canUseDOM } from '@fluentui/react-utilities';\nimport { ListboxState } from '../Listbox';\n\nexport function useScrollOptionsIntoView(state: ListboxState): React.Ref<HTMLDivElement> {\n  const { activeOption } = state;\n  const scrollContainerRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    if (scrollContainerRef.current && activeOption && canUseDOM()) {\n      const activeOptionElement = scrollContainerRef.current.querySelector(`#${activeOption.id}`) as HTMLElement;\n\n      if (!activeOptionElement) {\n        return;\n      }\n\n      const { offsetHeight, offsetTop } = activeOptionElement;\n      const { offsetHeight: parentOffsetHeight, scrollTop } = scrollContainerRef.current;\n\n      const isAbove = offsetTop < scrollTop;\n      const isBelow = offsetTop + offsetHeight > scrollTop + parentOffsetHeight;\n\n      // add a small buffer for general visual nicety\n      // it looks slightly better if the option has some space from the top/bottom while arrowing\n      const buffer = 2;\n\n      if (isAbove) {\n        scrollContainerRef.current.scrollTo(0, offsetTop - buffer);\n      } else if (isBelow) {\n        scrollContainerRef.current.scrollTo(0, offsetTop - parentOffsetHeight + offsetHeight + buffer);\n      }\n    }\n  }, [activeOption]);\n\n  return scrollContainerRef;\n}\n"],"sourceRoot":"../src/"}