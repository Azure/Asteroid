import * as React_2 from 'react';
import type { Theme } from '@fluentui/react-theme';

/**
 * @internal
 */
export declare const Provider_unstable: React_2.Provider<ProviderContextValue_unstable>;

export declare type ProviderContextValue_unstable = {
    /** Sets the direction of text & generated styles. */
    dir: 'ltr' | 'rtl';
    /** Provides the document, can be undefined during SSR render. */
    targetDocument?: Document;
};

export declare type ThemeClassNameContextValue_unstable = string;

export declare const ThemeClassNameProvider_unstable: React_2.Provider<string>;

/**
 * @internal
 */
export declare const ThemeContext_unstable: React_2.Context<ThemeContextValue_unstable>;

export declare type ThemeContextValue_unstable = Theme | Partial<Theme> | undefined;

/**
 * @internal
 */
export declare const ThemeProvider_unstable: React_2.Provider<ThemeContextValue_unstable>;

/**
 * The context provided by TooltipProvider
 */
export declare type TooltipVisibilityContextValue_unstable = {
    /**
     * When a tooltip is shown, it sets itself as the visibleTooltip.
     * The next tooltip to become visible can use it to hide the previous tooltip immediately.
     */
    visibleTooltip?: {
        hide: () => void;
    };
};

/**
 * @internal
 */
export declare const TooltipVisibilityProvider_unstable: React_2.Provider<TooltipVisibilityContextValue_unstable>;

export declare function useFluent_unstable(): ProviderContextValue_unstable;

/**
 * @returns CSS class that applies css variables
 */
export declare function useThemeClassName_unstable(): ThemeClassNameContextValue_unstable;

export declare function useTooltipVisibility_unstable(): TooltipVisibilityContextValue_unstable;

export { }
