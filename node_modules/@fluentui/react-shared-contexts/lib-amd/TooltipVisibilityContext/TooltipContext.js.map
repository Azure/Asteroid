{"version":3,"file":"TooltipContext.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-shared-contexts/src/TooltipVisibilityContext/TooltipContext.ts"],"names":[],"mappings":";;;;IAeA;;;OAGG;IACH,IAAM,wBAAwB,GAAG,KAAK,CAAC,aAAa,CAClD,SAAS,CACsC,CAAC;IAElD,IAAM,oCAAoC,GAAkC,EAAE,CAAC;IAE/E;;OAEG;IACU,QAAA,yBAAyB,GAAG,wBAAwB,CAAC,QAAQ,CAAC;IAE3E,SAAgB,oBAAoB;;QAClC,OAAO,MAAA,KAAK,CAAC,UAAU,CAAC,wBAAwB,CAAC,mCAAI,oCAAoC,CAAC;IAC5F,CAAC;IAFD,oDAEC","sourcesContent":["import * as React from 'react';\n\n/**\n * The context provided by TooltipProvider\n */\nexport type TooltipVisibilityContextValue = {\n  /**\n   * When a tooltip is shown, it sets itself as the visibleTooltip.\n   * The next tooltip to become visible can use it to hide the previous tooltip immediately.\n   */\n  visibleTooltip?: {\n    hide: () => void;\n  };\n};\n\n/**\n * @internal\n * Context shared by all of the tooltips in the app\n */\nconst TooltipVisibilityContext = React.createContext<TooltipVisibilityContextValue | undefined>(\n  undefined,\n) as React.Context<TooltipVisibilityContextValue>;\n\nconst tooltipVisibilityContextDefaultValue: TooltipVisibilityContextValue = {};\n\n/**\n * @internal\n */\nexport const TooltipVisibilityProvider = TooltipVisibilityContext.Provider;\n\nexport function useTooltipVisibility(): TooltipVisibilityContextValue {\n  return React.useContext(TooltipVisibilityContext) ?? tooltipVisibilityContextDefaultValue;\n}\n"]}