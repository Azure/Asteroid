{"version":3,"file":"ThemeClassNameContext.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-shared-contexts/src/ThemeClassNameContext/ThemeClassNameContext.ts"],"names":[],"mappings":";;;;IAIA;;;;;OAKG;IACH,IAAM,qBAAqB,GAAG,KAAK,CAAC,aAAa,CAC/C,SAAS,CACmC,CAAC;IAE/C,IAAM,gCAAgC,GAAG,EAAE,CAAC;IAE/B,QAAA,sBAAsB,GAAG,qBAAqB,CAAC,QAAQ,CAAC;IAErE;;OAEG;IACH,SAAgB,iBAAiB;;QAC/B,OAAO,MAAA,KAAK,CAAC,UAAU,CAAC,qBAAqB,CAAC,mCAAI,gCAAgC,CAAC;IACrF,CAAC;IAFD,8CAEC","sourcesContent":["import * as React from 'react';\n\nexport type ThemeClassNameContextValue = string;\n\n/**\n * @internal\n * Used to provide a CSS class that applies theme css variables\n *\n * Useful for elements in the React tree (can read context) but not in the DOM Tree. E.g. Portals\n */\nconst ThemeClassNameContext = React.createContext<ThemeClassNameContextValue | undefined>(\n  undefined,\n) as React.Context<ThemeClassNameContextValue>;\n\nconst themeClassNameContextDefaultVaue = '';\n\nexport const ThemeClassNameProvider = ThemeClassNameContext.Provider;\n\n/**\n * @returns CSS class that applies css variables\n */\nexport function useThemeClassName(): ThemeClassNameContextValue {\n  return React.useContext(ThemeClassNameContext) ?? themeClassNameContextDefaultVaue;\n}\n"]}