define(["require", "exports", "tslib", "@griffel/react", "@fluentui/react-theme"], function (require, exports, tslib_1, react_1, react_theme_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useDividerStyles_unstable = exports.dividerClassNames = void 0;
    exports.dividerClassNames = {
        root: 'fui-Divider',
        wrapper: 'fui-Divider__wrapper',
    };
    var contentSpacing = '12px';
    var insetSpacing = '12px';
    var maxStartEndLength = '8px';
    var minStartEndLength = '8px;';
    var useBaseStyles = react_1.makeStyles({
        // Base styles
        base: {
            alignItems: 'center',
            boxSizing: 'border-box',
            display: 'flex',
            flexDirection: 'row',
            flexGrow: 1,
            position: 'relative',
            fontFamily: react_theme_1.tokens.fontFamilyBase,
            fontSize: react_theme_1.tokens.fontSizeBase200,
            fontWeight: react_theme_1.tokens.fontWeightRegular,
            lineHeight: react_theme_1.tokens.lineHeightBase200,
            textAlign: 'center',
            '::before': {
                boxSizing: 'border-box',
                display: 'flex',
                flexGrow: 1,
            },
            '::after': {
                boxSizing: 'border-box',
                display: 'flex',
                flexGrow: 1,
            },
        },
        // Childless styles
        childless: {
            '::before': {
                marginBottom: 0,
                marginRight: 0,
            },
            '::after': {
                marginLeft: 0,
                marginTop: 0,
            },
        },
        // Alignment variations
        start: {
            '::after': {
                content: '""',
            },
        },
        center: {
            '::before': {
                content: '""',
            },
            '::after': {
                content: '""',
            },
        },
        end: {
            '::before': {
                content: '""',
            },
        },
        // Appearance variations
        brand: {
            color: react_theme_1.tokens.colorBrandForeground1,
            '::before': tslib_1.__assign({}, react_1.shorthands.borderColor(react_theme_1.tokens.colorBrandStroke1)),
            '::after': tslib_1.__assign({}, react_1.shorthands.borderColor(react_theme_1.tokens.colorBrandStroke1)),
        },
        default: {
            color: react_theme_1.tokens.colorNeutralForeground2,
            '::before': tslib_1.__assign({}, react_1.shorthands.borderColor(react_theme_1.tokens.colorNeutralStroke2)),
            '::after': tslib_1.__assign({}, react_1.shorthands.borderColor(react_theme_1.tokens.colorNeutralStroke2)),
        },
        subtle: {
            color: react_theme_1.tokens.colorNeutralForeground2,
            '::before': tslib_1.__assign({}, react_1.shorthands.borderColor(react_theme_1.tokens.colorNeutralStroke3)),
            '::after': tslib_1.__assign({}, react_1.shorthands.borderColor(react_theme_1.tokens.colorNeutralStroke3)),
        },
        strong: {
            color: react_theme_1.tokens.colorNeutralForeground2,
            '::before': tslib_1.__assign({}, react_1.shorthands.borderColor(react_theme_1.tokens.colorNeutralStroke1)),
            '::after': tslib_1.__assign({}, react_1.shorthands.borderColor(react_theme_1.tokens.colorNeutralStroke1)),
        },
    });
    var useHorizontalStyles = react_1.makeStyles({
        // Base styles
        base: {
            width: '100%',
            '::before': {
                borderTopStyle: 'solid',
                borderTopWidth: react_theme_1.tokens.strokeWidthThin,
                minWidth: minStartEndLength,
            },
            '::after': {
                borderTopStyle: 'solid',
                borderTopWidth: react_theme_1.tokens.strokeWidthThin,
                minWidth: minStartEndLength,
            },
        },
        // Inset styles
        inset: {
            paddingLeft: insetSpacing,
            paddingRight: insetSpacing,
        },
        // Alignment variations
        start: {
            '::before': {
                content: '""',
                marginRight: contentSpacing,
                maxWidth: maxStartEndLength,
            },
            '::after': {
                marginLeft: contentSpacing,
            },
        },
        center: {
            '::before': {
                marginRight: contentSpacing,
            },
            '::after': {
                marginLeft: contentSpacing,
            },
        },
        end: {
            '::before': {
                marginRight: contentSpacing,
            },
            '::after': {
                content: '""',
                marginLeft: contentSpacing,
                maxWidth: maxStartEndLength,
            },
        },
    });
    var useVerticalStyles = react_1.makeStyles({
        // Base styles
        base: {
            flexDirection: 'column',
            minHeight: '20px',
            '::before': {
                borderRightStyle: 'solid',
                borderRightWidth: react_theme_1.tokens.strokeWidthThin,
                minHeight: minStartEndLength,
            },
            '::after': {
                borderRightStyle: 'solid',
                borderRightWidth: react_theme_1.tokens.strokeWidthThin,
                minHeight: minStartEndLength,
            },
        },
        // Inset styles
        inset: {
            marginTop: insetSpacing,
            marginBottom: insetSpacing,
        },
        // With children styles
        withChildren: {
            minHeight: '84px',
        },
        // Alignment variations
        start: {
            '::before': {
                content: '""',
                marginBottom: contentSpacing,
                maxHeight: maxStartEndLength,
            },
            '::after': {
                marginTop: contentSpacing,
            },
        },
        center: {
            '::before': {
                marginBottom: contentSpacing,
            },
            '::after': {
                marginTop: contentSpacing,
            },
        },
        end: {
            '::before': {
                marginBottom: contentSpacing,
            },
            '::after': {
                content: '""',
                marginTop: contentSpacing,
                maxHeight: maxStartEndLength,
            },
        },
    });
    var useDividerStyles_unstable = function (state) {
        var baseStyles = useBaseStyles();
        var horizontalStyles = useHorizontalStyles();
        var verticalStyles = useVerticalStyles();
        var alignContent = state.alignContent, appearance = state.appearance, inset = state.inset, vertical = state.vertical;
        state.root.className = react_1.mergeClasses(exports.dividerClassNames.root, 
        // Base styles
        baseStyles.base, baseStyles[alignContent], appearance && baseStyles[appearance], 
        // Horizontal styles
        !vertical && horizontalStyles.base, !vertical && inset && horizontalStyles.inset, !vertical && horizontalStyles[alignContent], 
        // Vertical styles
        vertical && verticalStyles.base, vertical && inset && verticalStyles.inset, vertical && verticalStyles[alignContent], vertical && state.root.children !== undefined && verticalStyles.withChildren, 
        // Childless styles
        state.root.children === undefined && baseStyles.childless, 
        // User provided class name
        state.root.className);
        if (state.wrapper) {
            state.wrapper.className = react_1.mergeClasses(exports.dividerClassNames.wrapper, state.wrapper.className);
        }
        return state;
    };
    exports.useDividerStyles_unstable = useDividerStyles_unstable;
});
//# sourceMappingURL=useDividerStyles.js.map