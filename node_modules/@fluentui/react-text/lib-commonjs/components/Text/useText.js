"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useText_unstable = void 0;

const react_utilities_1 = /*#__PURE__*/require("@fluentui/react-utilities");
/**
 * Create the state required to render Text.
 *
 * The returned state can be modified with hooks such as useTextStyles_unstable,
 * before being passed to renderText_unstable.
 *
 * @param props - props from this instance of Text
 * @param ref - reference to root HTMLElement of Text
 */


const useText_unstable = (props, ref) => {
  var _a;

  const {
    wrap,
    truncate,
    block,
    italic,
    underline,
    strikethrough,
    size,
    font,
    weight,
    align
  } = props;
  const as = (_a = props.as) !== null && _a !== void 0 ? _a : 'span';
  const state = {
    align: align !== null && align !== void 0 ? align : 'start',
    block: block !== null && block !== void 0 ? block : false,
    font: font !== null && font !== void 0 ? font : 'base',
    italic: italic !== null && italic !== void 0 ? italic : false,
    size: size !== null && size !== void 0 ? size : 300,
    strikethrough: strikethrough !== null && strikethrough !== void 0 ? strikethrough : false,
    truncate: truncate !== null && truncate !== void 0 ? truncate : false,
    underline: underline !== null && underline !== void 0 ? underline : false,
    weight: weight !== null && weight !== void 0 ? weight : 'regular',
    wrap: wrap !== null && wrap !== void 0 ? wrap : true,
    components: {
      root: 'span'
    },
    root: react_utilities_1.getNativeElementProps(as, {
      ref,
      ...props,
      as
    })
  };
  return state;
};

exports.useText_unstable = useText_unstable;
//# sourceMappingURL=useText.js.map