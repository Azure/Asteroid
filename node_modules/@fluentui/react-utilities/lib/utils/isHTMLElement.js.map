{"version":3,"sources":["packages/react-components/react-utilities/src/utils/isHTMLElement.ts"],"names":[],"mappings":"AAAA;;;;;;;;AAQG;AACH,OAAM,SAAU,aAAV,CAAwB,OAAxB,EAAyD;;;EAC7D,OAAO,OAAO,CACZ,OAAO,KAAK,IAAZ,KACE,CAAA,EAAA,GAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,aAAT,MAAsB,IAAtB,IAAsB,EAAA,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAsB,EAAA,CAAE,WAD1B,KAEE,OAAO,YAAY,OAAO,CAAC,aAAR,CAAsB,WAAtB,CAAkC,WAH3C,CAAd;AAKD","sourcesContent":["/**\n * @internal\n * Verifies if a given node is an HTMLElement,\n * this method works seamlessly with frames and elements from different documents\n *\n * This is required as simply using `instanceof`\n * might be problematic while operating with [multiple realms](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_realms)\n *\n */\nexport function isHTMLElement(element?: Node | null | undefined): element is HTMLElement {\n  return Boolean(\n    element !== null &&\n      element?.ownerDocument?.defaultView &&\n      element instanceof element.ownerDocument.defaultView.HTMLElement,\n  );\n}\n"],"sourceRoot":"../src/"}