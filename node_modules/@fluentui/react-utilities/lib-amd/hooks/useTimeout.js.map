{"version":3,"file":"useTimeout.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-utilities/src/hooks/useTimeout.ts"],"names":[],"mappings":";;;;IAEA;;;;;;;OAOG;IACH,SAAgB,UAAU;QACjB,IAAA,OAAO,GAAI,KAAK,CAAC,QAAQ,CAAC,cAAM,OAAA,CAAC;YACtC,EAAE,EAAE,SAAsD;YAC1D,GAAG,EAAE,UAAC,EAAc,EAAE,KAAa;gBACjC,OAAO,CAAC,KAAK,EAAE,CAAC;gBAChB,OAAO,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YACrC,CAAC;YACD,KAAK,EAAE;gBACL,IAAI,OAAO,CAAC,EAAE,KAAK,SAAS,EAAE;oBAC5B,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;oBACzB,OAAO,CAAC,EAAE,GAAG,SAAS,CAAC;iBACxB;YACH,CAAC;SACF,CAAC,EAZqC,CAYrC,CAAC,GAZW,CAYV;QAEJ,sDAAsD;QACtD,KAAK,CAAC,SAAS,CAAC,cAAM,OAAA,OAAO,CAAC,KAAK,EAAb,CAAa,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;QAEhD,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,CAAU,CAAC;IAC/C,CAAC;IAnBD,gCAmBC","sourcesContent":["import * as React from 'react';\n\n/**\n * @internal\n * Helper to manage a browser timeout.\n * Ensures that the timeout isn't set multiple times at once,\n * and is cleaned up when the component is unloaded.\n *\n * @returns A pair of [setTimeout, clearTimeout] that are stable between renders.\n */\nexport function useTimeout() {\n  const [timeout] = React.useState(() => ({\n    id: undefined as ReturnType<typeof setTimeout> | undefined,\n    set: (fn: () => void, delay: number) => {\n      timeout.clear();\n      timeout.id = setTimeout(fn, delay);\n    },\n    clear: () => {\n      if (timeout.id !== undefined) {\n        clearTimeout(timeout.id);\n        timeout.id = undefined;\n      }\n    },\n  }));\n\n  // Clean up the timeout when the component is unloaded\n  React.useEffect(() => timeout.clear, [timeout]);\n\n  return [timeout.set, timeout.clear] as const;\n}\n"]}