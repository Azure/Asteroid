{"version":3,"sources":["packages/react-components/react-label/src/components/Label/useLabel.tsx"],"names":[],"mappings":";;;;;;;AACA,MAAA,iBAAA,gBAAA,OAAA,CAAA,2BAAA,CAAA;;AAEA,MAAA,iBAAA,gBAAA,OAAA,CAAA,2BAAA,CAAA;AAEA;;;;;;;;AAQG;;;AACI,MAAM,iBAAiB,GAAG,CAAC,KAAD,EAAoB,GAApB,KAA+D;EAC9F,MAAM;IAAE,QAAQ,GAAG,KAAb;IAAoB,QAAQ,GAAG,KAA/B;IAAsC,MAAM,GAAG,SAA/C;IAA0D,IAAI,GAAG;EAAjE,IAA8E,KAApF;EACA,OAAO;IACL,QADK;IAEL,QAAQ,EAAE,iBAAA,CAAA,gBAAA,CAAiB,QAAQ,KAAK,IAAb,GAAoB,GAApB,GAA0B,QAAQ,IAAI,SAAvD,EAAkE;MAC1E,YAAY,EAAE;QAAE,eAAe;MAAjB;IAD4D,CAAlE,CAFL;IAKL,MALK;IAML,IANK;IAOL,UAAU,EAAE;MAAE,IAAI,EAAE,OAAR;MAAiB,QAAQ,EAAE;IAA3B,CAPP;IAQL,IAAI,EAAE,iBAAA,CAAA,qBAAA,CAAsB,OAAtB,EAA+B;MAAE,GAAF;MAAO,GAAG;IAAV,CAA/B;EARD,CAAP;AAUD,CAZM;;AAAM,OAAA,CAAA,iBAAA,GAAiB,iBAAjB","sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { LabelProps, LabelState } from './Label.types';\nimport { resolveShorthand } from '@fluentui/react-utilities';\n\n/**\n * Create the state required to render Label.\n *\n * The returned state can be modified with hooks such as useLabelStyles_unstable,\n * before being passed to renderLabel_unstable.\n *\n * @param props - props from this instance of Label\n * @param ref - reference to root HTMLElement of Label\n */\nexport const useLabel_unstable = (props: LabelProps, ref: React.Ref<HTMLElement>): LabelState => {\n  const { disabled = false, required = false, weight = 'regular', size = 'medium' } = props;\n  return {\n    disabled,\n    required: resolveShorthand(required === true ? '*' : required || undefined, {\n      defaultProps: { 'aria-hidden': 'true' },\n    }),\n    weight,\n    size,\n    components: { root: 'label', required: 'span' },\n    root: getNativeElementProps('label', { ref, ...props }),\n  };\n};\n"],"sourceRoot":"../src/"}