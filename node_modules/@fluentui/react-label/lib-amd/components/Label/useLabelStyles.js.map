{"version":3,"file":"useLabelStyles.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-label/src/components/Label/useLabelStyles.ts"],"names":[],"mappings":";;;;IAKa,QAAA,eAAe,GAA+B;QACzD,IAAI,EAAE,WAAW;QACjB,QAAQ,EAAE,qBAAqB;KAChC,CAAC;IAEF;;OAEG;IACH,IAAM,SAAS,GAAG,kBAAU,CAAC;QAC3B,IAAI,EAAE;YACJ,UAAU,EAAE,oBAAM,CAAC,cAAc;YACjC,KAAK,EAAE,oBAAM,CAAC,uBAAuB;SACtC;QAED,QAAQ,EAAE;YACR,KAAK,EAAE,oBAAM,CAAC,8BAA8B;SAC7C;QAED,QAAQ,EAAE;YACR,KAAK,EAAE,oBAAM,CAAC,0BAA0B;YACxC,WAAW,EAAE,KAAK,EAAE,oEAAoE;SACzF;QAED,gBAAgB,EAAE;YAChB,KAAK,EAAE,oBAAM,CAAC,8BAA8B;SAC7C;QAED,KAAK,EAAE;YACL,QAAQ,EAAE,oBAAM,CAAC,eAAe;YAChC,UAAU,EAAE,oBAAM,CAAC,iBAAiB;SACrC;QAED,MAAM,EAAE;YACN,QAAQ,EAAE,oBAAM,CAAC,eAAe;YAChC,UAAU,EAAE,oBAAM,CAAC,iBAAiB;SACrC;QAED,KAAK,EAAE;YACL,QAAQ,EAAE,oBAAM,CAAC,eAAe;YAChC,UAAU,EAAE,oBAAM,CAAC,iBAAiB;YACpC,UAAU,EAAE,oBAAM,CAAC,kBAAkB;SACtC;QAED,QAAQ,EAAE;YACR,UAAU,EAAE,oBAAM,CAAC,kBAAkB;SACtC;KACF,CAAC,CAAC;IAEH;;OAEG;IACI,IAAM,uBAAuB,GAAG,UAAC,KAAiB;QACvD,IAAM,MAAM,GAAG,SAAS,EAAE,CAAC;QAC3B,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAY,CACjC,uBAAe,CAAC,IAAI,EACpB,MAAM,CAAC,IAAI,EACX,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,EACjC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAClB,KAAK,CAAC,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAC9C,KAAK,CAAC,IAAI,CAAC,SAAS,CACrB,CAAC;QAEF,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,QAAQ,CAAC,SAAS,GAAG,oBAAY,CACrC,uBAAe,CAAC,QAAQ,EACxB,MAAM,CAAC,QAAQ,EACf,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,gBAAgB,EACzC,KAAK,CAAC,QAAQ,CAAC,SAAS,CACzB,CAAC;SACH;QAED,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IArBW,QAAA,uBAAuB,2BAqBlC","sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { LabelSlots, LabelState } from './Label.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const labelClassNames: SlotClassNames<LabelSlots> = {\n  root: 'fui-Label',\n  required: 'fui-Label__required',\n};\n\n/**\n * Styles for the label\n */\nconst useStyles = makeStyles({\n  root: {\n    fontFamily: tokens.fontFamilyBase,\n    color: tokens.colorNeutralForeground1,\n  },\n\n  disabled: {\n    color: tokens.colorNeutralForegroundDisabled,\n  },\n\n  required: {\n    color: tokens.colorPaletteRedForeground3,\n    paddingLeft: '4px', // TODO: Once spacing tokens are added, change this to Horizontal XS\n  },\n\n  requiredDisabled: {\n    color: tokens.colorNeutralForegroundDisabled,\n  },\n\n  small: {\n    fontSize: tokens.fontSizeBase200,\n    lineHeight: tokens.lineHeightBase200,\n  },\n\n  medium: {\n    fontSize: tokens.fontSizeBase300,\n    lineHeight: tokens.lineHeightBase300,\n  },\n\n  large: {\n    fontSize: tokens.fontSizeBase400,\n    lineHeight: tokens.lineHeightBase400,\n    fontWeight: tokens.fontWeightSemibold,\n  },\n\n  semibold: {\n    fontWeight: tokens.fontWeightSemibold,\n  },\n});\n\n/**\n * Apply styling to the Label slots based on the state\n */\nexport const useLabelStyles_unstable = (state: LabelState): LabelState => {\n  const styles = useStyles();\n  state.root.className = mergeClasses(\n    labelClassNames.root,\n    styles.root,\n    state.disabled && styles.disabled,\n    styles[state.size],\n    state.weight === 'semibold' && styles.semibold,\n    state.root.className,\n  );\n\n  if (state.required) {\n    state.required.className = mergeClasses(\n      labelClassNames.required,\n      styles.required,\n      state.disabled && styles.requiredDisabled,\n      state.required.className,\n    );\n  }\n\n  return state;\n};\n"]}