define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.partitionAvatarGroupItems = void 0;
    /**
     * Get the inline items and overflowing items based on the array of AvatarGroupItems needed for AvatarGroup.
     *
     * @param options - Configure the partition options
     *
     * @returns Two arrays split into inline items and overflow items based on maxInlineItems.
     */
    var partitionAvatarGroupItems = function (options) {
        var _a;
        var items = options.items;
        var isPie = options.layout === 'pie';
        if (isPie) {
            return {
                inlineItems: items.slice(0, 3),
                overflowItems: items.length > 0 ? items : undefined,
            };
        }
        var maxInlineItems = (_a = options.maxInlineItems) !== null && _a !== void 0 ? _a : 5;
        var inlineCount = -(maxInlineItems - (items.length > maxInlineItems ? 1 : 0));
        var overflowItems = items.slice(0, inlineCount);
        return {
            inlineItems: items.slice(inlineCount),
            overflowItems: overflowItems.length > 0 ? overflowItems : undefined,
        };
    };
    exports.partitionAvatarGroupItems = partitionAvatarGroupItems;
});
//# sourceMappingURL=partitionAvatarGroupItems.js.map