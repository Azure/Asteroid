define(["require", "exports", "tslib", "react", "@fluentui/react-utilities", "../../contexts/dialogContext", "@fluentui/react-icons", "@fluentui/react-utilities", "../DialogTrigger/DialogTrigger", "./useDialogTitleStyles"], function (require, exports, tslib_1, React, react_utilities_1, dialogContext_1, react_icons_1, react_utilities_2, DialogTrigger_1, useDialogTitleStyles_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useDialogTitle_unstable = void 0;
    /**
     * Create the state required to render DialogTitle.
     *
     * The returned state can be modified with hooks such as useDialogTitleStyles_unstable,
     * before being passed to renderDialogTitle_unstable.
     *
     * @param props - props from this instance of DialogTitle
     * @param ref - reference to root HTMLElement of DialogTitle
     */
    var useDialogTitle_unstable = function (props, ref) {
        var as = props.as, action = props.action;
        var modalType = dialogContext_1.useDialogContext_unstable(function (ctx) { return ctx.modalType; });
        var internalStyles = useDialogTitleStyles_1.useDialogTitleInternalStyles();
        return {
            components: {
                root: 'div',
                action: 'div',
            },
            root: react_utilities_1.getNativeElementProps(as !== null && as !== void 0 ? as : 'div', tslib_1.__assign({ ref: ref, id: dialogContext_1.useDialogContext_unstable(function (ctx) { return ctx.dialogTitleId; }) }, props)),
            action: react_utilities_2.resolveShorthand(action, {
                required: modalType === 'non-modal',
                defaultProps: {
                    children: (React.createElement(DialogTrigger_1.DialogTrigger, { disableButtonEnhancement: true, action: "close" },
                        React.createElement("button", { className: internalStyles.button, "aria-label": "close" },
                            React.createElement(react_icons_1.Dismiss24Regular, null)))),
                },
            }),
        };
    };
    exports.useDialogTitle_unstable = useDialogTitle_unstable;
});
//# sourceMappingURL=useDialogTitle.js.map