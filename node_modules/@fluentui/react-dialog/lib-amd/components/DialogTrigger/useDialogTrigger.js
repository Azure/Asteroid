define(["require", "exports", "tslib", "@fluentui/react-tabster", "@fluentui/react-utilities", "../../contexts", "@fluentui/react-aria"], function (require, exports, tslib_1, react_tabster_1, react_utilities_1, contexts_1, react_aria_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useDialogTrigger_unstable = void 0;
    /**
     * Create the state required to render DialogTrigger.
     * Clones the only child component and adds necessary event handling behaviours to open a popup Dialog
     *
     * @param props - props from this instance of DialogTrigger
     */
    var useDialogTrigger_unstable = function (props) {
        var isInsideSurfaceDialog = contexts_1.useDialogSurfaceContext_unstable();
        var children = props.children, _a = props.disableButtonEnhancement, disableButtonEnhancement = _a === void 0 ? false : _a, _b = props.action, action = _b === void 0 ? isInsideSurfaceDialog ? 'close' : 'open' : _b;
        var child = react_utilities_1.getTriggerChild(children);
        var requestOpenChange = contexts_1.useDialogContext_unstable(function (ctx) { return ctx.requestOpenChange; });
        var open = contexts_1.useDialogContext_unstable(function (ctx) { return ctx.open; });
        var triggerAttributes = react_tabster_1.useModalAttributes().triggerAttributes;
        var handleClick = react_utilities_1.useEventCallback(function (event) {
            var _a, _b;
            (_b = child === null || child === void 0 ? void 0 : (_a = child.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, event);
            if (!event.isDefaultPrevented()) {
                requestOpenChange({
                    event: event,
                    type: 'triggerClick',
                    open: action === 'open',
                });
            }
        });
        var triggerChildProps = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, child === null || child === void 0 ? void 0 : child.props), { 'aria-expanded': open, ref: child === null || child === void 0 ? void 0 : child.ref, onClick: handleClick }), triggerAttributes);
        var ariaButtonTriggerChildProps = react_aria_1.useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === 'button' || (child === null || child === void 0 ? void 0 : child.type) === 'a' ? child.type : 'div', tslib_1.__assign(tslib_1.__assign({}, triggerChildProps), { type: 'button' }));
        return {
            children: react_utilities_1.applyTriggerPropsToChildren(children, disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps),
        };
    };
    exports.useDialogTrigger_unstable = useDialogTrigger_unstable;
});
//# sourceMappingURL=useDialogTrigger.js.map