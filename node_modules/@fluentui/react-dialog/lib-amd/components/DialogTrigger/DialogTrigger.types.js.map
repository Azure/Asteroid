{"version":3,"file":"DialogTrigger.types.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-dialog/src/components/DialogTrigger/DialogTrigger.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ARIAButtonResultProps, ARIAButtonType } from '@fluentui/react-aria';\nimport type { TriggerProps } from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nexport type DialogTriggerAction = 'open' | 'close';\n\nexport type DialogTriggerProps = TriggerProps<DialogTriggerChildProps> & {\n  /**\n   * Explicitly declare if the trigger is responsible for opening or\n   * closing a Dialog visibility state.\n   *\n   * If `DialogTrigger` is outside `DialogSurface` then it'll be `open` by default\n   *\n   * If `DialogTrigger` is inside `DialogSurface` then it'll be `close` by default\n   */\n  action?: DialogTriggerAction;\n  /**\n   * Disables internal trigger mechanism that ensures a child provided will be a compliant ARIA button.\n   * @default false\n   */\n  disableButtonEnhancement?: boolean;\n};\n\n/**\n * Props that are passed to the child of the DialogTrigger when cloned to ensure correct behaviour for the Dialog\n */\nexport type DialogTriggerChildProps<Type extends ARIAButtonType = ARIAButtonType, Props = {}> = ARIAButtonResultProps<\n  Type,\n  Props & {\n    'aria-haspopup'?: 'dialog';\n  }\n>;\n\nexport type DialogTriggerState = {\n  children: React.ReactElement | null;\n};\n"]}