define(["require", "exports", "tslib", "@griffel/react", "../../contexts"], function (require, exports, tslib_1, react_1, contexts_1) {
    "use strict";
    var _a;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useDialogBodyStyles_unstable = exports.dialogBodyClassNames = void 0;
    exports.dialogBodyClassNames = {
        root: 'fui-DialogBody',
    };
    /**
     * Styles for the root slot
     */
    var useStyles = react_1.makeStyles({
        root: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ display: 'grid', '&::backdrop': {
                backgroundColor: 'rgba(0, 0, 0, 0.4)',
            }, width: "100%", height: 'fit-content', maxWidth: '600px', maxHeight: "calc(100vh - 2 * " + contexts_1.SURFACE_PADDING + ")", boxSizing: 'border-box', gridTemplateRows: 'auto 1fr auto', gridTemplateColumns: '1fr 1fr auto', gridTemplateAreas: "\n    \"" + contexts_1.TITLE_GRID_AREA + " " + contexts_1.TITLE_GRID_AREA + " " + contexts_1.TITLE_ACTION_GRID_AREA + "\"\n    \"" + contexts_1.CONTENT_GRID_AREA + " " + contexts_1.CONTENT_GRID_AREA + " " + contexts_1.CONTENT_GRID_AREA + "\"\n    \"" + contexts_1.ACTIONS_START_GRID_AREA + " " + contexts_1.ACTIONS_END_GRID_AREA + " " + contexts_1.ACTIONS_END_GRID_AREA + "\"\n    " }, react_1.shorthands.overflow('unset')), react_1.shorthands.gap(contexts_1.DIALOG_GAP)), (_a = {}, _a[contexts_1.MEDIA_QUERY_BREAKPOINT_SELECTOR] = {
            maxWidth: '100vw',
            gridTemplateRows: 'auto 1fr auto auto',
            gridTemplateAreas: "\n        \"" + contexts_1.TITLE_GRID_AREA + " " + contexts_1.TITLE_GRID_AREA + " " + contexts_1.TITLE_ACTION_GRID_AREA + "\"\n        \"" + contexts_1.CONTENT_GRID_AREA + " " + contexts_1.CONTENT_GRID_AREA + " " + contexts_1.CONTENT_GRID_AREA + "\"\n        \"" + contexts_1.ACTIONS_START_GRID_AREA + " " + contexts_1.ACTIONS_START_GRID_AREA + " " + contexts_1.ACTIONS_START_GRID_AREA + "\"\n        \"" + contexts_1.ACTIONS_END_GRID_AREA + " " + contexts_1.ACTIONS_END_GRID_AREA + " " + contexts_1.ACTIONS_END_GRID_AREA + "\"\n      ",
        }, _a)),
    });
    /**
     * Apply styling to the DialogBody slots based on the state
     */
    var useDialogBodyStyles_unstable = function (state) {
        var styles = useStyles();
        state.root.className = react_1.mergeClasses(exports.dialogBodyClassNames.root, styles.root, state.root.className);
        return state;
    };
    exports.useDialogBodyStyles_unstable = useDialogBodyStyles_unstable;
});
//# sourceMappingURL=useDialogBodyStyles.js.map