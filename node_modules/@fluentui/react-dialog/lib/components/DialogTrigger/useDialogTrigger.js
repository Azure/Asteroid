import { useModalAttributes } from '@fluentui/react-tabster';
import { applyTriggerPropsToChildren, getTriggerChild, useEventCallback } from '@fluentui/react-utilities';
import { useDialogContext_unstable, useDialogSurfaceContext_unstable } from '../../contexts';
import { useARIAButtonProps } from '@fluentui/react-aria';
/**
 * Create the state required to render DialogTrigger.
 * Clones the only child component and adds necessary event handling behaviours to open a popup Dialog
 *
 * @param props - props from this instance of DialogTrigger
 */

export const useDialogTrigger_unstable = props => {
  const isInsideSurfaceDialog = useDialogSurfaceContext_unstable();
  const {
    children,
    disableButtonEnhancement = false,
    action = isInsideSurfaceDialog ? 'close' : 'open'
  } = props;
  const child = getTriggerChild(children);
  const requestOpenChange = useDialogContext_unstable(ctx => ctx.requestOpenChange);
  const open = useDialogContext_unstable(ctx => ctx.open);
  const {
    triggerAttributes
  } = useModalAttributes();
  const handleClick = useEventCallback(event => {
    var _a, _b;

    (_b = child === null || child === void 0 ? void 0 : (_a = child.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, event);

    if (!event.isDefaultPrevented()) {
      requestOpenChange({
        event,
        type: 'triggerClick',
        open: action === 'open'
      });
    }
  });
  const triggerChildProps = { ...(child === null || child === void 0 ? void 0 : child.props),
    'aria-expanded': open,
    ref: child === null || child === void 0 ? void 0 : child.ref,
    onClick: handleClick,
    ...triggerAttributes
  };
  const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === 'button' || (child === null || child === void 0 ? void 0 : child.type) === 'a' ? child.type : 'div', { ...triggerChildProps,
    type: 'button'
  });
  return {
    children: applyTriggerPropsToChildren(children, disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps)
  };
};
//# sourceMappingURL=useDialogTrigger.js.map