"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const React = /*#__PURE__*/require("react"); // eslint-disable-next-line import/no-extraneous-dependencies


const ReactIcons = /*#__PURE__*/require("@fluentui/react-icons");

const react_input_1 = /*#__PURE__*/require("@fluentui/react-input");

const react_1 = /*#__PURE__*/require("@griffel/react");

const useStyles = /*#__PURE__*/react_1.__styles({
  "grid": {
    "mc9l5x": "f13qh94s",
    "Budl1dq": "f103s1qi",
    "w08cwm": "fz44487",
    "De3pzq": "f1vbpgwy",
    "Bqyf3fh": "f1y7pwzt",
    "tuaewz": "fkjsrz3",
    "js62xs": "f1v4pbv1",
    "ge08ax": "f10n702m",
    "vwmem1": "fukf1g8",
    "pq1t01": "f1ke9dqw",
    "Bspu8ag": ["ft83mph", "fduese8"],
    "B83reyd": "ffztlgx",
    "d2aa3c": ["fduese8", "ft83mph"],
    "Bo0llhl": "f1ad31ox",
    "Bfpbev4": "f1pcllc0",
    "Bs90se3": "fdkswtx",
    "B83tkto": "f1yxgqk0",
    "pxe6pr": "fg04g75",
    "Beqvepd": "fvrpp50",
    "Bq5m64l": ["f1xqymmk", "f1mqnmtg"],
    "B0xcf35": "f12h2kxz",
    "B9c2vit": ["f1mqnmtg", "f1xqymmk"]
  },
  "searchBox": {
    "De3pzq": "f1vbpgwy",
    "B2u0y6b": "f1ogbl2p",
    "jrapky": "f1dl2k97"
  },
  "radio": {
    "De3pzq": "f1vbpgwy",
    "Be2twd7": "fnsq08h"
  }
}, {
  "d": [".f13qh94s{display:grid;}", ".f103s1qi{grid-template-columns:auto auto auto auto;}", ".fz44487{grid-gap:10px;}", ".f1vbpgwy{background-color:#F7F7F7;}", ".f1y7pwzt>div{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".fkjsrz3>div{background-color:#FFFFFF;}", ".f1v4pbv1>div{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f10n702m>div{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".fukf1g8>div{-webkit-box-pack:space-around;-ms-flex-pack:space-around;-webkit-justify-content:space-around;justify-content:space-around;}", ".f1ke9dqw>div{padding-top:8px;}", ".ft83mph>div{padding-right:8px;}", ".fduese8>div{padding-left:8px;}", ".ffztlgx>div{padding-bottom:8px;}", ".f1ad31ox>div{overflow-x:hidden;}", ".f1pcllc0>div{overflow-y:hidden;}", ".fdkswtx>div>code{font-size:8px;}", ".f1yxgqk0>div>code{display:inline-block;}", ".fg04g75>div>code{height:auto;}", ".fvrpp50>div>code{padding-top:0px 8px;}", ".f1xqymmk>div>code{padding-right:0px 8px;}", ".f1mqnmtg>div>code{padding-left:0px 8px;}", ".f12h2kxz>div>code{padding-bottom:0px 8px;}", ".f1ogbl2p{max-width:320px;}", ".f1dl2k97{margin-bottom:10px;}", ".fnsq08h{font-size:11px;}"]
});

const reactIcons = /*#__PURE__*/Object.keys(ReactIcons) // eslint-disable-next-line @typescript-eslint/no-explicit-any
.map(iconName => ReactIcons[iconName]).filter(icon => !!icon && !!icon.displayName);

const ReactIconGrid = () => {
  const [search, setSearch] = React.useState('');
  const [size, setSize] = React.useState(24);
  const styles = useStyles();

  const _onSearchQueryChanged = ev => {
    setSearch(ev ? ev.currentTarget.value : '');
  };

  const _filterBySize = ev => {
    const newSize = ev ? ev.currentTarget.value : '';

    if (newSize === 'All') {
      setSize('');
    } else if (newSize === 'Unsized') {
      setSize('Unsized');
    } else {
      setSize(newSize);
    }
  };

  const _renderIcon = Icon => {
    return React.createElement("div", {
      key: Icon.displayName,
      "aria-label": Icon.displayName
    }, React.createElement(Icon, null), React.createElement("br", null), React.createElement("code", null, Icon.displayName));
  };

  const filteredIcons = React.useMemo(() => reactIcons.filter(icon => {
    var _a, _b;

    return size === 'Unsized' ? icon.displayName && !/\d/.test(icon.displayName.toLowerCase()) : ((_a = icon.displayName) === null || _a === void 0 ? void 0 : _a.toLowerCase().indexOf(search.toLowerCase())) !== -1 && ((_b = icon.displayName) === null || _b === void 0 ? void 0 : _b.indexOf(String(size))) !== -1;
  }), [search, size]);
  return React.createElement("div", null, React.createElement(react_input_1.Input, {
    type: "search",
    placeholder: "Search icons",
    value: search,
    "aria-label": "search",
    // eslint-disable-next-line react/jsx-no-bind
    onChange: _onSearchQueryChanged,
    className: styles.searchBox
  }), [16, 20, 24, 28, 32, 48, 'Unsized', 'All'].map(option => React.createElement(React.Fragment, null, React.createElement("input", {
    id: `option-${option}`,
    defaultChecked: option === 24,
    type: "radio",
    value: option,
    name: "size",
    onChange: _filterBySize
  }), React.createElement("label", {
    htmlFor: `option-${option}`,
    className: styles.radio
  }, option))), React.createElement("div", {
    className: styles.grid
  }, filteredIcons.map(_renderIcon)));
};

exports.default = ReactIconGrid;
//# sourceMappingURL=ReactIconGrid.js.map