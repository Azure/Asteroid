"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTableRow_unstable = void 0;

const react_utilities_1 = /*#__PURE__*/require("@fluentui/react-utilities");

const tableContext_1 = /*#__PURE__*/require("../../contexts/tableContext");

const react_tabster_1 = /*#__PURE__*/require("@fluentui/react-tabster");
/**
 * Create the state required to render TableRow.
 *
 * The returned state can be modified with hooks such as useTableRowStyles_unstable,
 * before being passed to renderTableRow_unstable.
 *
 * @param props - props from this instance of TableRow
 * @param ref - reference to root HTMLElement of TableRow
 */


const useTableRow_unstable = (props, ref) => {
  var _a, _b;

  const {
    noNativeElements,
    size
  } = tableContext_1.useTableContext();
  const rootComponent = ((_a = props.as) !== null && _a !== void 0 ? _a : noNativeElements) ? 'div' : 'tr';
  const focusVisibleRef = react_tabster_1.useFocusVisible();
  const focusWithinRef = react_tabster_1.useFocusWithin();
  return {
    components: {
      root: rootComponent
    },
    root: react_utilities_1.getNativeElementProps(rootComponent, {
      ref: react_utilities_1.useMergedRefs(ref, focusVisibleRef, focusWithinRef),
      role: rootComponent === 'div' ? 'row' : undefined,
      ...props
    }),
    size,
    noNativeElements,
    appearance: (_b = props.appearance) !== null && _b !== void 0 ? _b : 'none'
  };
};

exports.useTableRow_unstable = useTableRow_unstable;
//# sourceMappingURL=useTableRow.js.map