"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDataGridHeaderCell_unstable = void 0;

const react_utilities_1 = /*#__PURE__*/require("@fluentui/react-utilities");

const useTableHeaderCell_1 = /*#__PURE__*/require("../TableHeaderCell/useTableHeaderCell");

const dataGridContext_1 = /*#__PURE__*/require("../../contexts/dataGridContext");

const columnIdContext_1 = /*#__PURE__*/require("../../contexts/columnIdContext");

const tableContext_1 = /*#__PURE__*/require("../../contexts/tableContext");
/**
 * Create the state required to render DataGridHeaderCell.
 *
 * The returned state can be modified with hooks such as useDataGridHeaderCellStyles_unstable,
 * before being passed to renderDataGridHeaderCell_unstable.
 *
 * @param props - props from this instance of DataGridHeaderCell
 * @param ref - reference to root HTMLElement of DataGridHeaderCell
 */


const useDataGridHeaderCell_unstable = (props, ref) => {
  const columnId = columnIdContext_1.useColumnIdContext();
  const {
    sortable
  } = tableContext_1.useTableContext();
  const toggleColumnSort = dataGridContext_1.useDataGridContext_unstable(ctx => ctx.sort.toggleColumnSort);
  const sortDirection = dataGridContext_1.useDataGridContext_unstable(ctx => sortable ? ctx.sort.getSortDirection(columnId) : undefined);
  const onClick = react_utilities_1.useEventCallback(e => {
    var _a;

    if (sortable) {
      toggleColumnSort(e, columnId);
    }

    (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);
  });
  return useTableHeaderCell_1.useTableHeaderCell_unstable({
    sortDirection,
    as: 'div',
    tabIndex: sortable ? undefined : 0,
    ...props,
    onClick
  }, ref);
};

exports.useDataGridHeaderCell_unstable = useDataGridHeaderCell_unstable;
//# sourceMappingURL=useDataGridHeaderCell.js.map