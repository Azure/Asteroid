"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTableSelectionCell_unstable = void 0;

const react_utilities_1 = /*#__PURE__*/require("@fluentui/react-utilities");

const react_checkbox_1 = /*#__PURE__*/require("@fluentui/react-checkbox");

const react_radio_1 = /*#__PURE__*/require("@fluentui/react-radio");

const useTableCell_1 = /*#__PURE__*/require("../TableCell/useTableCell");

const tableContext_1 = /*#__PURE__*/require("../../contexts/tableContext");
/**
 * Create the state required to render TableSelectionCell.
 *
 * The returned state can be modified with hooks such as useTableSelectionCellStyles_unstable,
 * before being passed to renderTableSelectionCell_unstable.
 *
 * @param props - props from this instance of TableSelectionCell
 * @param ref - reference to root HTMLElement of TableSelectionCell
 */


const useTableSelectionCell_unstable = (props, ref) => {
  const tableCellState = useTableCell_1.useTableCell_unstable(props, ref);
  const {
    noNativeElements
  } = tableContext_1.useTableContext();
  const {
    type = 'checkbox',
    checked = false,
    subtle = false,
    hidden = false
  } = props;
  return { ...tableCellState,
    components: { ...tableCellState.components,
      checkboxIndicator: react_checkbox_1.Checkbox,
      radioIndicator: react_radio_1.Radio
    },
    checkboxIndicator: react_utilities_1.resolveShorthand(props.checkboxIndicator, {
      required: type === 'checkbox',
      defaultProps: {
        checked: props.checked
      }
    }),
    radioIndicator: react_utilities_1.resolveShorthand(props.radioIndicator, {
      required: type === 'radio',
      defaultProps: {
        checked: !!checked
      }
    }),
    type,
    checked,
    noNativeElements,
    subtle,
    hidden
  };
};

exports.useTableSelectionCell_unstable = useTableSelectionCell_unstable;
//# sourceMappingURL=useTableSelectionCell.js.map