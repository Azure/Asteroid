import * as React from 'react';
import { getNativeElementProps, resolveShorthand, useMergedRefs } from '@fluentui/react-utilities';
import { useFocusWithin } from '@fluentui/react-tabster';
import { ArrowUpRegular, ArrowDownRegular } from '@fluentui/react-icons';
import { useTableContext } from '../../contexts/tableContext';
import { useARIAButtonShorthand } from '@fluentui/react-aria';
const sortIcons = {
  ascending: /*#__PURE__*/React.createElement(ArrowUpRegular, {
    fontSize: 12
  }),
  descending: /*#__PURE__*/React.createElement(ArrowDownRegular, {
    fontSize: 12
  })
};
/**
 * Create the state required to render TableHeaderCell.
 *
 * The returned state can be modified with hooks such as useTableHeaderCellStyles_unstable,
 * before being passed to renderTableHeaderCell_unstable.
 *
 * @param props - props from this instance of TableHeaderCell
 * @param ref - reference to root HTMLElement of TableHeaderCell
 */

export const useTableHeaderCell_unstable = (props, ref) => {
  var _a, _b;

  const {
    noNativeElements,
    sortable
  } = useTableContext();
  const rootComponent = ((_a = props.as) !== null && _a !== void 0 ? _a : noNativeElements) ? 'div' : 'th';
  return {
    components: {
      root: rootComponent,
      button: 'button',
      sortIcon: 'span'
    },
    root: getNativeElementProps(rootComponent, {
      ref: useMergedRefs(ref, useFocusWithin()),
      role: rootComponent === 'div' ? 'columnheader' : undefined,
      'aria-sort': sortable ? (_b = props.sortDirection) !== null && _b !== void 0 ? _b : 'none' : undefined,
      ...props
    }),
    sortIcon: resolveShorthand(props.sortIcon, {
      required: !!props.sortDirection,
      defaultProps: {
        children: props.sortDirection ? sortIcons[props.sortDirection] : undefined
      }
    }),
    button: useARIAButtonShorthand(props.button, {
      required: true,
      defaultProps: {
        role: 'presentation',
        tabIndex: -1,
        type: 'button',
        ...(sortable && {
          role: undefined,
          tabIndex: undefined
        })
      }
    }),
    sortable,
    noNativeElements
  };
};
//# sourceMappingURL=useTableHeaderCell.js.map