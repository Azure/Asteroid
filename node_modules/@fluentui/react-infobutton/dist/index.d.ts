/// <reference types="react" />

import type { ComponentProps } from '@fluentui/react-utilities';
import type { ComponentState } from '@fluentui/react-utilities';
import { ForwardRefComponent } from '@fluentui/react-utilities';
import type { PopoverProps } from '@fluentui/react-popover';
import type { PopoverSurface } from '@fluentui/react-popover';
import * as React_2 from 'react';
import type { Slot } from '@fluentui/react-utilities';
import type { SlotClassNames } from '@fluentui/react-utilities';

/**
 * InfoButtons provide a way to display additional information about a form field or an area in the UI.
 */
export declare const InfoButton: ForwardRefComponent<InfoButtonProps>;

export declare const infoButtonClassNames: SlotClassNames<InfoButtonSlots>;

/**
 * InfoButton Props
 */
export declare type InfoButtonProps = Omit<ComponentProps<Partial<InfoButtonSlots>>, 'disabled'> & {
    /**
     * Size of the InfoButton.
     *
     * @default medium
     */
    size?: 'small' | 'medium' | 'large';
};

export declare type InfoButtonSlots = {
    root: NonNullable<Slot<'button'>>;
    /**
     * The Popover element that wraps the content and root. Use this slot to pass props to the Popover.
     */
    popover: NonNullable<Slot<PopoverProps>>;
    /**
     * The content to be displayed in the PopoverSurface when the button is pressed.
     */
    content: NonNullable<Slot<typeof PopoverSurface>>;
};

/**
 * State used in rendering InfoButton
 */
export declare type InfoButtonState = ComponentState<InfoButtonSlots> & Required<Pick<InfoButtonProps, 'size'>>;

/**
 * Render the final JSX of InfoButton
 */
export declare const renderInfoButton_unstable: (state: InfoButtonState) => JSX.Element;

/**
 * Create the state required to render InfoButton.
 *
 * The returned state can be modified with hooks such as useInfoButtonStyles_unstable,
 * before being passed to renderInfoButton_unstable.
 *
 * @param props - props from this instance of InfoButton
 * @param ref - reference to root HTMLElement of InfoButton
 */
export declare const useInfoButton_unstable: (props: InfoButtonProps, ref: React_2.Ref<HTMLElement>) => InfoButtonState;

/**
 * Apply styling to the InfoButton slots based on the state
 */
export declare const useInfoButtonStyles_unstable: (state: InfoButtonState) => InfoButtonState;

export { }
