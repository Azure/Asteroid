define(["require", "exports", "tslib", "@griffel/react", "@fluentui/react-theme"], function (require, exports, tslib_1, react_1, react_theme_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.usePresenceBadgeStyles_unstable = exports.presenceBadgeClassNames = void 0;
    exports.presenceBadgeClassNames = {
        root: 'fui-PresenceBadge',
        icon: 'fui-PresenceBadge__icon',
    };
    var getIsBusy = function (status) {
        if (status === 'busy' || status === 'do-not-disturb' || status === 'unknown') {
            return true;
        }
        return false;
    };
    var useStyles = react_1.makeStyles({
        root: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, react_1.shorthands.padding(0)), { display: 'inline-flex', boxSizing: 'border-box', alignItems: 'center', justifyContent: 'center', '& span': {
                display: 'flex',
            } }), react_1.shorthands.borderRadius('50%')), { backgroundColor: react_theme_1.tokens.colorNeutralBackground1 }),
        statusBusy: {
            color: react_theme_1.tokens.colorPaletteRedBackground3,
        },
        statusAway: {
            color: react_theme_1.tokens.colorPaletteMarigoldBackground3,
        },
        statusAvailable: {
            color: react_theme_1.tokens.colorPaletteLightGreenForeground3,
        },
        statusOffline: {
            color: react_theme_1.tokens.colorNeutralForeground3,
        },
        statusOutOfOffice: {
            color: react_theme_1.tokens.colorPaletteBerryForeground3,
        },
        outOfOffice: {
            color: react_theme_1.tokens.colorNeutralBackground1,
        },
        outOfOfficeAvailable: {
            color: react_theme_1.tokens.colorPaletteLightGreenForeground3,
        },
        outOfOfficeBusy: {
            color: react_theme_1.tokens.colorPaletteRedBackground3,
        },
        outOfOfficeAway: {
            color: react_theme_1.tokens.colorPaletteMarigoldBackground3,
        },
        // Icons are not resizeable, and these sizes are currently missing
        // use `!important` to size the currently available icons to the missing ones
        //
        tiny: {
            aspectRatio: '1',
            width: '6px',
            '& svg': {
                width: '6px !important',
                height: '6px !important',
            },
        },
        large: {
            aspectRatio: '1',
            width: '20px',
            '& svg': {
                width: '20px !important',
                height: '20px !important',
            },
        },
        extraLarge: {
            aspectRatio: '1',
            width: '28px',
            '& svg': {
                width: '28px !important',
                height: '28px !important',
            },
        },
    });
    /**
     * Applies style classnames to slots
     */
    var usePresenceBadgeStyles_unstable = function (state) {
        var styles = useStyles();
        var isBusy = getIsBusy(state.status);
        state.root.className = react_1.mergeClasses(exports.presenceBadgeClassNames.root, styles.root, isBusy && styles.statusBusy, state.status === 'away' && styles.statusAway, state.status === 'available' && styles.statusAvailable, state.status === 'offline' && styles.statusOffline, state.status === 'out-of-office' && styles.statusOutOfOffice, state.outOfOffice && styles.outOfOffice, state.outOfOffice && state.status === 'available' && styles.outOfOfficeAvailable, state.outOfOffice && isBusy && styles.outOfOfficeBusy, state.outOfOffice && state.status === 'away' && styles.outOfOfficeAway, state.outOfOffice && state.status === 'offline' && styles.statusOffline, state.outOfOffice && state.status === 'out-of-office' && styles.statusOutOfOffice, state.size === 'tiny' && styles.tiny, state.size === 'large' && styles.large, state.size === 'extra-large' && styles.extraLarge, state.root.className);
        if (state.icon) {
            state.icon.className = react_1.mergeClasses(exports.presenceBadgeClassNames.icon, state.icon.className);
        }
        return state;
    };
    exports.usePresenceBadgeStyles_unstable = usePresenceBadgeStyles_unstable;
});
//# sourceMappingURL=usePresenceBadgeStyles.js.map