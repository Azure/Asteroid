{"version":3,"file":"useCounterBadge.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-badge/src/components/CounterBadge/useCounterBadge.ts"],"names":[],"mappings":";;;;IAKA;;OAEG;IACI,IAAM,wBAAwB,GAAG,UAAC,KAAwB,EAAE,GAA2B;QAE1F,IAAA,KAME,KAAK,MANW,EAAlB,KAAK,mBAAG,UAAU,KAAA,EAClB,KAKE,KAAK,WALc,EAArB,UAAU,mBAAG,QAAQ,KAAA,EACrB,KAIE,KAAK,SAJS,EAAhB,QAAQ,mBAAG,KAAK,KAAA,EAChB,KAGE,KAAK,cAHW,EAAlB,aAAa,mBAAG,EAAE,KAAA,EAClB,KAEE,KAAK,MAFE,EAAT,KAAK,mBAAG,CAAC,KAAA,EACT,KACE,KAAK,IADI,EAAX,GAAG,mBAAG,KAAK,KAAA,CACH;QAEV,IAAM,KAAK,yCACL,yBAAiB,CAAC,KAAK,EAAE,GAAG,CAA+C,KAC/E,KAAK,OAAA,EACL,UAAU,YAAA,EACV,QAAQ,UAAA,EACR,KAAK,OAAA,EACL,GAAG,KAAA,GACJ,CAAC;QAEF,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC7D,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,aAAa,CAAC,CAAC,CAAI,aAAa,MAAG,CAAC,CAAC,CAAC,KAAG,KAAO,CAAC;SAChF;QAED,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IAxBW,QAAA,wBAAwB,4BAwBnC","sourcesContent":["import * as React from 'react';\nimport type { BadgeState } from '../Badge/index';\nimport { useBadge_unstable } from '../Badge/index';\nimport type { CounterBadgeProps, CounterBadgeState } from './CounterBadge.types';\n\n/**\n * Returns the props and state required to render the component\n */\nexport const useCounterBadge_unstable = (props: CounterBadgeProps, ref: React.Ref<HTMLElement>): CounterBadgeState => {\n  const {\n    shape = 'circular',\n    appearance = 'filled',\n    showZero = false,\n    overflowCount = 99,\n    count = 0,\n    dot = false,\n  } = props;\n\n  const state: CounterBadgeState = {\n    ...(useBadge_unstable(props, ref) as Pick<CounterBadgeState, keyof BadgeState>),\n    shape,\n    appearance,\n    showZero,\n    count,\n    dot,\n  };\n\n  if ((count !== 0 || showZero) && !dot && !state.root.children) {\n    state.root.children = count > overflowCount ? `${overflowCount}+` : `${count}`;\n  }\n\n  return state;\n};\n"]}