{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_velocity.540fe30d.chunk.js","mappings":"sGAKA,SAASA,EAASC,IACf,SAAUA,GACTA,EAAMC,UAAUF,SAAWC,EAAMC,UAAUC,OAAO,SAAU,CAAC,GAC7D,IAAIH,EAAW,CACbI,SAAU,CACRC,QAAS,yGACTC,YAAY,EACZC,OAAQ,CAAC,GAEXC,OAAQ,CACNH,QAAS,kBACTI,QAAQ,GAEVC,OAAQ,UACRC,QAAS,qBACTC,SAAU,iEACVC,YAAa,gBAEfb,EAASI,SAASG,OAAS,CACzBC,OAAQR,EAAiB,OACzBc,SAAU,CACRT,QAAS,4BACTC,YAAY,GAEdI,OAAQV,EAAiB,OACzBW,QAASX,EAAkB,QAC3Ba,YAAab,EAAsB,aAErCC,EAAMC,UAAUa,aAAa,WAAY,UAAW,CAClDC,SAAU,CACRX,QAAS,4BACTC,YAAY,EACZG,QAAQ,EACRF,OAAQ,CACNM,YAAa,gBAGjB,mBAAoB,CAClB,CACER,QAAS,0BACTC,YAAY,EACZG,QAAQ,EACRQ,MAAO,WAET,CACEZ,QAAS,gBACTC,YAAY,EACZG,QAAQ,EACRQ,MAAO,YAGXC,UAAW,CACTb,QAAS,uFACTC,YAAY,EACZC,OAAQ,CACNY,QAAS,CACPd,QAAS,2CACTE,OAAQ,CACNM,YAAa,SAGjBO,KAAMpB,IAGVI,SAAUJ,EAAmB,WAE/BC,EAAMC,UAAUF,SAAc,IAAEO,OAAO,cAAcA,OAAOa,KAC1DnB,EAAMC,UAAUF,QACnB,CAnEA,CAmEEC,EACL,CAxEAoB,EAAOC,QAAUtB,EACjBA,EAASuB,YAAc,WACvBvB,EAASwB,QAAU,E","sources":["../node_modules/refractor/lang/velocity.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = velocity\r\nvelocity.displayName = 'velocity'\r\nvelocity.aliases = []\r\nfunction velocity(Prism) {\r\n  ;(function(Prism) {\r\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\r\n    var velocity = {\r\n      variable: {\r\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\r\n        lookbehind: true,\r\n        inside: {} // See below\r\n      },\r\n      string: {\r\n        pattern: /\"[^\"]*\"|'[^']*'/,\r\n        greedy: true\r\n      },\r\n      number: /\\b\\d+\\b/,\r\n      boolean: /\\b(?:true|false)\\b/,\r\n      operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\r\n      punctuation: /[(){}[\\]:,.]/\r\n    }\r\n    velocity.variable.inside = {\r\n      string: velocity['string'],\r\n      function: {\r\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\r\n        lookbehind: true\r\n      },\r\n      number: velocity['number'],\r\n      boolean: velocity['boolean'],\r\n      punctuation: velocity['punctuation']\r\n    }\r\n    Prism.languages.insertBefore('velocity', 'comment', {\r\n      unparsed: {\r\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          punctuation: /^#\\[\\[|]]#$/\r\n        }\r\n      },\r\n      'velocity-comment': [\r\n        {\r\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          alias: 'comment'\r\n        },\r\n        {\r\n          pattern: /(^|[^\\\\])##.*/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          alias: 'comment'\r\n        }\r\n      ],\r\n      directive: {\r\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\r\n        lookbehind: true,\r\n        inside: {\r\n          keyword: {\r\n            pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\r\n            inside: {\r\n              punctuation: /[{}]/\r\n            }\r\n          },\r\n          rest: velocity\r\n        }\r\n      },\r\n      variable: velocity['variable']\r\n    })\r\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\r\n      Prism.languages.velocity\r\n  })(Prism)\r\n}\r\n"],"names":["velocity","Prism","languages","extend","variable","pattern","lookbehind","inside","string","greedy","number","boolean","operator","punctuation","function","insertBefore","unparsed","alias","directive","keyword","rest","module","exports","displayName","aliases"],"sourceRoot":""}