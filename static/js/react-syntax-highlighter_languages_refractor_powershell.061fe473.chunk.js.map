{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_powershell.061fe473.chunk.js","mappings":"qGAKA,SAASA,EAAWC,IACjB,SAAUA,GACT,IAAID,EAAcC,EAAMC,UAAUF,WAAa,CAC7CG,QAAS,CACP,CACEC,QAAS,uBACTC,YAAY,GAEd,CACED,QAAS,cACTC,YAAY,IAGhBC,OAAQ,CACN,CACEF,QAAS,uBACTG,QAAQ,EACRC,OAAQ,CACNC,SAAU,CAERL,QAAS,gDACTC,YAAY,EAEZG,OAAQ,CAAC,KAIf,CACEJ,QAAS,iBACTG,QAAQ,IAKZG,UAAW,kDACXC,QAAS,sBACTC,SAAU,WAIVH,SAAU,CACR,2lFACA,ycAGFI,QAAS,kPACTC,SAAU,CACRV,QAAS,qJACTC,YAAY,GAEdU,YAAa,iBAEXC,EAAehB,EAAWM,OAAO,GAAGE,OACxCQ,EAAaL,QAAUX,EAAWW,QAClCK,EAAaJ,SAAWZ,EAAWY,SACnCI,EAAaP,SAASD,OAASR,CAChC,CAvDA,CAuDEC,EACL,CA5DAgB,EAAOC,QAAUlB,EACjBA,EAAWmB,YAAc,aACzBnB,EAAWoB,QAAU,E","sources":["../node_modules/refractor/lang/powershell.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = powershell\r\npowershell.displayName = 'powershell'\r\npowershell.aliases = []\r\nfunction powershell(Prism) {\r\n  ;(function(Prism) {\r\n    var powershell = (Prism.languages.powershell = {\r\n      comment: [\r\n        {\r\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /(^|[^`])#.*/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      string: [\r\n        {\r\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\r\n          greedy: true,\r\n          inside: {\r\n            function: {\r\n              // Allow for one level of nesting\r\n              pattern: /(^|[^`])\\$\\((?:\\$\\(.*?\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\r\n              lookbehind: true,\r\n              // Populated at end of file\r\n              inside: {}\r\n            }\r\n          }\r\n        },\r\n        {\r\n          pattern: /'(?:[^']|'')*'/,\r\n          greedy: true\r\n        }\r\n      ],\r\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\r\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\r\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\r\n      boolean: /\\$(?:true|false)\\b/i,\r\n      variable: /\\$\\w+\\b/i,\r\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\r\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\r\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\r\n      function: [\r\n        /\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i,\r\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\r\n      ],\r\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\r\n      keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\r\n      operator: {\r\n        pattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\r\n        lookbehind: true\r\n      },\r\n      punctuation: /[|{}[\\];(),.]/\r\n    }) // Variable interpolation inside strings, and nested expressions\r\n    var stringInside = powershell.string[0].inside\r\n    stringInside.boolean = powershell.boolean\r\n    stringInside.variable = powershell.variable\r\n    stringInside.function.inside = powershell\r\n  })(Prism)\r\n}\r\n"],"names":["powershell","Prism","languages","comment","pattern","lookbehind","string","greedy","inside","function","namespace","boolean","variable","keyword","operator","punctuation","stringInside","module","exports","displayName","aliases"],"sourceRoot":""}