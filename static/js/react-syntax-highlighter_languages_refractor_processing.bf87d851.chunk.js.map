{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_processing.bf87d851.chunk.js","mappings":"sGAKA,SAASA,EAAWC,GAClBA,EAAMC,UAAUF,WAAaC,EAAMC,UAAUC,OAAO,QAAS,CAC3DC,QAAS,qKACTC,SAAU,8CAEZJ,EAAMC,UAAUI,aAAa,aAAc,SAAU,CAEnDC,SAAU,8BACVC,KAAM,CACJC,QAAS,gEACTC,MAAO,cAGXT,EAAMC,UAAUF,WAAqB,SAAES,QAAU,eACjDR,EAAMC,UAAUF,WAAW,cAAcU,MAAQ,UACnD,CAlBAC,EAAOC,QAAUZ,EACjBA,EAAWa,YAAc,aACzBb,EAAWc,QAAU,E","sources":["../node_modules/refractor/lang/processing.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = processing\r\nprocessing.displayName = 'processing'\r\nprocessing.aliases = []\r\nfunction processing(Prism) {\r\n  Prism.languages.processing = Prism.languages.extend('clike', {\r\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\r\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\r\n  })\r\n  Prism.languages.insertBefore('processing', 'number', {\r\n    // Special case: XML is a type\r\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\r\n    type: {\r\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\r\n      alias: 'variable'\r\n    }\r\n  }) // Spaces are allowed between function name and parenthesis\r\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/ // Class-names is not styled by default\r\n  Prism.languages.processing['class-name'].alias = 'variable'\r\n}\r\n"],"names":["processing","Prism","languages","extend","keyword","operator","insertBefore","constant","type","pattern","alias","module","exports","displayName","aliases"],"sourceRoot":""}