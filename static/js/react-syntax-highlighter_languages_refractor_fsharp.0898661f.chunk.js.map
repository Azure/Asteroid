{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_fsharp.0898661f.chunk.js","mappings":"qGAKA,SAASA,EAAOC,GACdA,EAAMC,UAAUF,OAASC,EAAMC,UAAUC,OAAO,QAAS,CACvDC,QAAS,CACP,CACEC,QAAS,4BACTC,YAAY,GAEd,CACED,QAAS,mBACTC,YAAY,IAGhBC,OAAQ,CACNF,QAAS,wIACTG,QAAQ,GAEV,aAAc,CACZH,QAAS,yHACTC,YAAY,EACZG,OAAQ,CACNC,SAAU,QACVC,YAAa,OAGjBC,QAAS,koBACTC,OAAQ,CACN,iCACA,uBACA,gDACA,kCAEFH,SAAU,6GAEZT,EAAMC,UAAUY,aAAa,SAAU,UAAW,CAChDC,aAAc,CACZV,QAAS,kBACTW,MAAO,WACPP,OAAQ,CACNQ,UAAW,CACTZ,QAAS,gDACTC,YAAY,EACZU,MAAO,eAKff,EAAMC,UAAUY,aAAa,SAAU,cAAe,CACpD,yBAA0B,CACxBT,QAAS,sBACTW,MAAO,aAGXf,EAAMC,UAAUY,aAAa,SAAU,SAAU,CAC/CI,WAAY,CACVb,QAAS,YACTI,OAAQ,CACNE,YAAa,YACb,aAAc,CACZN,QAAS,+BACTC,YAAY,GAEd,qBAAsB,CACpBD,QAAS,UACTI,OAAQR,EAAMC,UAAUF,WAKlC,CAvEAmB,EAAOC,QAAUpB,EACjBA,EAAOqB,YAAc,SACrBrB,EAAOsB,QAAU,E","sources":["../node_modules/refractor/lang/fsharp.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = fsharp\r\nfsharp.displayName = 'fsharp'\r\nfsharp.aliases = []\r\nfunction fsharp(Prism) {\r\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\r\n    comment: [\r\n      {\r\n        pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    string: {\r\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\r\n      lookbehind: true,\r\n      inside: {\r\n        operator: /->|\\*/,\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\r\n    number: [\r\n      /\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,\r\n      /\\b0b[01]+(?:y|uy)?\\b/,\r\n      /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\r\n      /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/\r\n    ],\r\n    operator: /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\r\n  })\r\n  Prism.languages.insertBefore('fsharp', 'keyword', {\r\n    preprocessor: {\r\n      pattern: /^[^\\r\\n\\S]*#.*/m,\r\n      alias: 'property',\r\n      inside: {\r\n        directive: {\r\n          pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\r\n          lookbehind: true,\r\n          alias: 'keyword'\r\n        }\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\r\n    'computation-expression': {\r\n      pattern: /[_a-z]\\w*(?=\\s*\\{)/i,\r\n      alias: 'keyword'\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('fsharp', 'string', {\r\n    annotation: {\r\n      pattern: /\\[<.+?>\\]/,\r\n      inside: {\r\n        punctuation: /^\\[<|>\\]$/,\r\n        'class-name': {\r\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\r\n          lookbehind: true\r\n        },\r\n        'annotation-content': {\r\n          pattern: /[\\s\\S]+/,\r\n          inside: Prism.languages.fsharp\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n"],"names":["fsharp","Prism","languages","extend","comment","pattern","lookbehind","string","greedy","inside","operator","punctuation","keyword","number","insertBefore","preprocessor","alias","directive","annotation","module","exports","displayName","aliases"],"sourceRoot":""}