{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_bison.f85e9b02.chunk.js","mappings":"8GACA,IAAIA,EAAaC,EAAQ,KAIzB,SAASC,EAAMC,GACbA,EAAMC,SAASJ,GACfG,EAAME,UAAUH,MAAQC,EAAME,UAAUC,OAAO,IAAK,CAAC,GACrDH,EAAME,UAAUE,aAAa,QAAS,UAAW,CAC/CL,MAAO,CAILM,QAAS,wBACTC,OAAQ,CACNC,EAAG,CAEDF,QAAS,0CACTC,OAAQ,CACNE,UAAW,CACTH,QAAS,cACTI,MAAO,eAET,iBAAkB,CAChBJ,QAAS,2BACTI,MAAO,WACPH,OAAQ,CACNI,YAAa,QAGjBC,KAAMX,EAAME,UAAUK,IAG1BK,QAASZ,EAAME,UAAUK,EAAEK,QAC3BC,OAAQb,EAAME,UAAUK,EAAEM,OAC1BC,SAAU,WACVC,QAAS,OACTC,OAAQ,CACNX,QAAS,gCACTY,YAAY,GAEdP,YAAa,uBAIrB,CA3CAQ,EAAOC,QAAUpB,EACjBA,EAAMqB,YAAc,QACpBrB,EAAMsB,QAAU,E,kBCChB,SAASd,EAAEP,GACTA,EAAME,UAAUK,EAAIP,EAAME,UAAUC,OAAO,QAAS,CAClD,aAAc,CACZE,QAAS,4BACTY,YAAY,GAEdF,QAAS,sUACTO,SAAU,kDACVN,OAAQ,0GAEVhB,EAAME,UAAUE,aAAa,IAAK,SAAU,CAC1CmB,MAAO,CAGLlB,QAAS,qDACTY,YAAY,EACZR,MAAO,WACPH,OAAQ,CAENO,OAAQ,CACNR,QAAS,8CACTY,YAAY,GAGdO,UAAW,CACTnB,QAAS,4GACTY,YAAY,EACZR,MAAO,aAKbgB,SAAU,sIAELzB,EAAME,UAAUK,EAAW,OACpC,CAtCAW,EAAOC,QAAUZ,EACjBA,EAAEa,YAAc,IAChBb,EAAEc,QAAU,E","sources":["../node_modules/refractor/lang/bison.js","../node_modules/refractor/lang/c.js"],"sourcesContent":["'use strict'\r\nvar refractorC = require('./c.js')\r\nmodule.exports = bison\r\nbison.displayName = 'bison'\r\nbison.aliases = []\r\nfunction bison(Prism) {\r\n  Prism.register(refractorC)\r\n  Prism.languages.bison = Prism.languages.extend('c', {})\r\n  Prism.languages.insertBefore('bison', 'comment', {\r\n    bison: {\r\n      // This should match all the beginning of the file\r\n      // including the prologue(s), the bison declarations and\r\n      // the grammar rules.\r\n      pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\r\n      inside: {\r\n        c: {\r\n          // Allow for one level of nested braces\r\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\r\n          inside: {\r\n            delimiter: {\r\n              pattern: /^%?\\{|%?\\}$/,\r\n              alias: 'punctuation'\r\n            },\r\n            'bison-variable': {\r\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\r\n              alias: 'variable',\r\n              inside: {\r\n                punctuation: /<|>/\r\n              }\r\n            },\r\n            rest: Prism.languages.c\r\n          }\r\n        },\r\n        comment: Prism.languages.c.comment,\r\n        string: Prism.languages.c.string,\r\n        property: /\\S+(?=:)/,\r\n        keyword: /%\\w+/,\r\n        number: {\r\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\r\n          lookbehind: true\r\n        },\r\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\r\n      }\r\n    }\r\n  })\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = c\r\nc.displayName = 'c'\r\nc.aliases = []\r\nfunction c(Prism) {\r\n  Prism.languages.c = Prism.languages.extend('clike', {\r\n    'class-name': {\r\n      pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\r\n      lookbehind: true\r\n    },\r\n    keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\r\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\r\n    number: /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\r\n  })\r\n  Prism.languages.insertBefore('c', 'string', {\r\n    macro: {\r\n      // allow for multiline macro definitions\r\n      // spaces after the # character compile fine with gcc\r\n      pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\r\n      lookbehind: true,\r\n      alias: 'property',\r\n      inside: {\r\n        // highlight the path of the include statement as a string\r\n        string: {\r\n          pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\r\n          lookbehind: true\r\n        },\r\n        // highlight macro directives as keywords\r\n        directive: {\r\n          pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\r\n          lookbehind: true,\r\n          alias: 'keyword'\r\n        }\r\n      }\r\n    },\r\n    // highlight predefined macros as constants\r\n    constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\r\n  })\r\n  delete Prism.languages.c['boolean']\r\n}\r\n"],"names":["refractorC","require","bison","Prism","register","languages","extend","insertBefore","pattern","inside","c","delimiter","alias","punctuation","rest","comment","string","property","keyword","number","lookbehind","module","exports","displayName","aliases","operator","macro","directive","constant"],"sourceRoot":""}