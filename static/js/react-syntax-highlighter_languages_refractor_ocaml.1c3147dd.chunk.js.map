{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_ocaml.1c3147dd.chunk.js","mappings":"sGAKA,SAASA,EAAMC,GACbA,EAAMC,UAAUF,MAAQ,CACtBG,QAAS,mBACTC,OAAQ,CACN,CACEC,QAAS,wBACTC,QAAQ,GAEV,CACED,QAAS,qDACTC,QAAQ,IAGZC,OAAQ,yEACRC,KAAM,CACJH,QAAS,YACTI,MAAO,YAETC,UAAW,CACTL,QAAS,SACTI,MAAO,YAETE,QAAS,2RACTC,QAAS,qBAETC,SAAU,kGACVC,YAAa,mBAEjB,CA/BAC,EAAOC,QAAUhB,EACjBA,EAAMiB,YAAc,QACpBjB,EAAMkB,QAAU,E","sources":["../node_modules/refractor/lang/ocaml.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = ocaml\r\nocaml.displayName = 'ocaml'\r\nocaml.aliases = []\r\nfunction ocaml(Prism) {\r\n  Prism.languages.ocaml = {\r\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\r\n    string: [\r\n      {\r\n        pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\r\n        greedy: true\r\n      }\r\n    ],\r\n    number: /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\r\n    type: {\r\n      pattern: /\\B['`]\\w*/,\r\n      alias: 'variable'\r\n    },\r\n    directive: {\r\n      pattern: /\\B#\\w+/,\r\n      alias: 'function'\r\n    },\r\n    keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    // Custom operators are allowed\r\n    operator: /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\r\n    punctuation: /[(){}\\[\\]|_.,:;]/\r\n  }\r\n}\r\n"],"names":["ocaml","Prism","languages","comment","string","pattern","greedy","number","type","alias","directive","keyword","boolean","operator","punctuation","module","exports","displayName","aliases"],"sourceRoot":""}