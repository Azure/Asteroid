{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_batch.6b53c091.chunk.js","mappings":"qGAKA,SAASA,EAAMC,IACZ,SAAUA,GACT,IAAIC,EAAW,qBACXC,EAAY,CACdC,QAAS,+CACTC,MAAO,YACPC,OAAQ,CACNC,YAAa,MAGbC,EAAS,UACTC,EAAS,gBACbR,EAAMS,UAAUV,MAAQ,CACtBW,QAAS,CACP,SACA,CACEP,QAAS,6DACTQ,YAAY,IAGhBC,MAAO,CACLT,QAAS,QACTC,MAAO,YAETS,QAAS,CACP,CAEEV,QAAS,qFACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,wBACTP,OAAQA,EACRL,UAAWA,EACXD,SAAUA,EACVO,OAAQA,EACRF,YAAa,WAGjB,CAEEH,QAAS,wMACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,4DACTP,OAAQA,EACRL,UAAWA,EACXD,SAAUA,EACVO,OAAQA,EACRO,SAAU,2CAGd,CAEEZ,QAAS,8BACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,aAGb,CAEEX,QAAS,kGACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,UACTP,OAAQA,EACRL,UAAWA,EACXD,SAAU,CAACA,EAAU,mCACrBO,OAAQA,EACRO,SAAU,kCACVT,YAAa,WAGjB,CAEEH,QAAS,+DACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,UACTP,OAAQA,EACRL,UAAWA,EACXU,MAAO,CACLT,QAAS,cACTQ,YAAY,EACZP,MAAO,YAETH,SAAUA,EACVO,OAAQA,EACRO,SAAU,QAIhBA,SAAU,OACVT,YAAa,QAEhB,CA9FA,CA8FEN,EACL,CAnGAgB,EAAOC,QAAUlB,EACjBA,EAAMmB,YAAc,QACpBnB,EAAMoB,QAAU,E","sources":["../node_modules/refractor/lang/batch.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = batch\r\nbatch.displayName = 'batch'\r\nbatch.aliases = []\r\nfunction batch(Prism) {\r\n  ;(function(Prism) {\r\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\r\n    var parameter = {\r\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\r\n      alias: 'attr-name',\r\n      inside: {\r\n        punctuation: /:/\r\n      }\r\n    }\r\n    var string = /\"[^\"]*\"/\r\n    var number = /(?:\\b|-)\\d+\\b/\r\n    Prism.languages.batch = {\r\n      comment: [\r\n        /^::.*/m,\r\n        {\r\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      label: {\r\n        pattern: /^:.*/m,\r\n        alias: 'property'\r\n      },\r\n      command: [\r\n        {\r\n          // FOR command\r\n          pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^for\\b|\\b(?:in|do)\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            variable: variable,\r\n            number: number,\r\n            punctuation: /[()',]/\r\n          }\r\n        },\r\n        {\r\n          // IF command\r\n          pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            variable: variable,\r\n            number: number,\r\n            operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\r\n          }\r\n        },\r\n        {\r\n          // ELSE command\r\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^else\\b/i\r\n          }\r\n        },\r\n        {\r\n          // SET command\r\n          pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^set\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\r\n            number: number,\r\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\r\n            punctuation: /[()',]/\r\n          }\r\n        },\r\n        {\r\n          // Other commands\r\n          pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^\\w+\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            label: {\r\n              pattern: /(^\\s*):\\S+/m,\r\n              lookbehind: true,\r\n              alias: 'property'\r\n            },\r\n            variable: variable,\r\n            number: number,\r\n            operator: /\\^/\r\n          }\r\n        }\r\n      ],\r\n      operator: /[&@]/,\r\n      punctuation: /[()']/\r\n    }\r\n  })(Prism)\r\n}\r\n"],"names":["batch","Prism","variable","parameter","pattern","alias","inside","punctuation","string","number","languages","comment","lookbehind","label","command","keyword","operator","module","exports","displayName","aliases"],"sourceRoot":""}