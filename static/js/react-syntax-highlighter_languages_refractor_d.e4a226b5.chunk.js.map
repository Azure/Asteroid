{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_d.e4a226b5.chunk.js","mappings":"sGAKA,SAASA,EAAEC,GACTA,EAAMC,UAAUF,EAAIC,EAAMC,UAAUC,OAAO,QAAS,CAClDC,OAAQ,CAEN,qCACA,6DAGA,iEACA,qBACA,qBACA,2CAEFC,OAAQ,CAGN,uEACA,CACEC,QAAS,uFACTC,YAAY,IAIhBC,QAAS,u0BACTC,SAAU,sHAEZR,EAAMC,UAAUF,EAAEU,QAAU,CAE1B,WACA,CAEEJ,QAAS,iDACTC,YAAY,IAEdI,OAAOV,EAAMC,UAAUF,EAAEU,SAC3BT,EAAMC,UAAUU,aAAa,IAAK,UAAW,CAC3C,eAAgB,CAEdN,QAAS,6BACTO,MAAO,YAGXZ,EAAMC,UAAUU,aAAa,IAAK,UAAW,CAC3CE,SAAU,WAEZb,EAAMC,UAAUU,aAAa,IAAK,WAAY,CAC5CG,SAAU,CAERT,QAAS,sNACTO,MAAO,aAGb,CAvDAG,EAAOC,QAAUjB,EACjBA,EAAEkB,YAAc,IAChBlB,EAAEmB,QAAU,E","sources":["../node_modules/refractor/lang/d.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = d\r\nd.displayName = 'd'\r\nd.aliases = []\r\nfunction d(Prism) {\r\n  Prism.languages.d = Prism.languages.extend('clike', {\r\n    string: [\r\n      // r\"\", x\"\"\r\n      /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\r\n      /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/, // q\"IDENT\r\n      // ...\r\n      // IDENT\"\r\n      /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/, // q\"//\", q\"||\", etc.\r\n      /\\bq\"(.)[\\s\\S]*?\\1\"/, // Characters\r\n      /'(?:\\\\'|\\\\?[^']+)'/,\r\n      /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/\r\n    ],\r\n    number: [\r\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\r\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\r\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i,\r\n      {\r\n        pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    // In order: $, keywords and special tokens, globally defined symbols\r\n    keyword: /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\r\n    operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\r\n  })\r\n  Prism.languages.d.comment = [\r\n    // Shebang\r\n    /^\\s*#!.+/, // /+ +/\r\n    {\r\n      // Allow one level of nesting\r\n      pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\r\n      lookbehind: true\r\n    }\r\n  ].concat(Prism.languages.d.comment)\r\n  Prism.languages.insertBefore('d', 'comment', {\r\n    'token-string': {\r\n      // Allow one level of nesting\r\n      pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\r\n      alias: 'string'\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('d', 'keyword', {\r\n    property: /\\B@\\w*/\r\n  })\r\n  Prism.languages.insertBefore('d', 'function', {\r\n    register: {\r\n      // Iasm registers\r\n      pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\r\n      alias: 'variable'\r\n    }\r\n  })\r\n}\r\n"],"names":["d","Prism","languages","extend","string","number","pattern","lookbehind","keyword","operator","comment","concat","insertBefore","alias","property","register","module","exports","displayName","aliases"],"sourceRoot":""}