{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_pascal.a822b9dc.chunk.js","mappings":"qGAKA,SAASA,EAAOC,GAKdA,EAAMC,UAAUF,OAAS,CACvBG,QAAS,CAAC,mBAAoB,eAAgB,UAC9CC,OAAQ,CACNC,QAAS,mDACTC,QAAQ,GAEVC,QAAS,CACP,CAEEF,QAAS,iTACTG,YAAY,GAEd,CAEEH,QAAS,+CACTG,YAAY,GAEd,CAEEH,QAAS,mKACTG,YAAY,GAEd,CAEEH,QAAS,mhBACTG,YAAY,IAGhBC,OAAQ,CAEN,0BACA,kCAEFC,SAAU,CACR,gDACA,CACEL,QAAS,0EACTG,YAAY,IAGhBG,YAAa,0BAEfV,EAAMC,UAAUU,aAAeX,EAAMC,UAAUF,MACjD,CAnDAa,EAAOC,QAAUd,EACjBA,EAAOe,YAAc,SACrBf,EAAOgB,QAAU,CAAC,e","sources":["../node_modules/refractor/lang/pascal.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = pascal\r\npascal.displayName = 'pascal'\r\npascal.aliases = ['objectpascal']\r\nfunction pascal(Prism) {\r\n  // Based on Free Pascal\r\n  /* TODO\r\nSupport inline asm ?\r\n*/\r\n  Prism.languages.pascal = {\r\n    comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\r\n    string: {\r\n      pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\r\n      greedy: true\r\n    },\r\n    keyword: [\r\n      {\r\n        // Turbo Pascal\r\n        pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // Free Pascal\r\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // Object Pascal\r\n        pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // Modifiers\r\n        pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    number: [\r\n      // Hexadecimal, octal and binary\r\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\r\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\r\n    ],\r\n    operator: [\r\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,\r\n      {\r\n        pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\r\n  }\r\n  Prism.languages.objectpascal = Prism.languages.pascal\r\n}\r\n"],"names":["pascal","Prism","languages","comment","string","pattern","greedy","keyword","lookbehind","number","operator","punctuation","objectpascal","module","exports","displayName","aliases"],"sourceRoot":""}