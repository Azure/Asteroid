import { tokens } from '@fluentui/react-theme';
import { shorthands } from '@griffel/react';
import { createCustomFocusIndicatorStyle } from './createCustomFocusIndicatorStyle';
import { defaultOptions } from './constants';
/**
 * NOTE: the element with the focus outline needs to have `position: relative` so that the
 * pseudo element can be properly positioned.
 *
 * @param options - Configures the style of the focus outline
 * @returns focus outline styles object
 */

const getFocusOutlineStyles = options => {
  var _a, _b, _c, _d;

  const {
    outlineRadius,
    outlineColor,
    outlineOffset,
    outlineWidth
  } = options;
  const outlineOffsetTop = ((_a = outlineOffset) === null || _a === void 0 ? void 0 : _a.top) || outlineOffset;
  const outlineOffsetBottom = ((_b = outlineOffset) === null || _b === void 0 ? void 0 : _b.bottom) || outlineOffset;
  const outlineOffsetLeft = ((_c = outlineOffset) === null || _c === void 0 ? void 0 : _c.left) || outlineOffset;
  const outlineOffsetRight = ((_d = outlineOffset) === null || _d === void 0 ? void 0 : _d.right) || outlineOffset;
  return { ...shorthands.borderColor('transparent'),
    '::after': {
      content: '""',
      position: 'absolute',
      pointerEvents: 'none',
      zIndex: 1,
      ...shorthands.borderStyle('solid'),
      ...shorthands.borderWidth(outlineWidth),
      ...shorthands.borderRadius(outlineRadius),
      ...shorthands.borderColor(outlineColor),
      top: !outlineOffset ? `-${outlineWidth}` : `calc(0px - ${outlineWidth} - ${outlineOffsetTop})`,
      bottom: !outlineOffset ? `-${outlineWidth}` : `calc(0px - ${outlineWidth} - ${outlineOffsetBottom})`,
      left: !outlineOffset ? `-${outlineWidth}` : `calc(0px - ${outlineWidth} - ${outlineOffsetLeft})`,
      right: !outlineOffset ? `-${outlineWidth}` : `calc(0px - ${outlineWidth} - ${outlineOffsetRight})`
    }
  };
};
/**
 * NOTE: The element with the focus outline needs to have `position: relative` so that the
 * pseudo element can be properly positioned.
 *
 * @param options - Configure the style of the focus outline
 * @returns focus outline styles object for @see makeStyles
 */


export const createFocusOutlineStyle = ({
  selector = defaultOptions.selector,
  style = defaultOptions.style
} = defaultOptions) => createCustomFocusIndicatorStyle(getFocusOutlineStyles({
  outlineColor: tokens.colorStrokeFocus2,
  outlineRadius: tokens.borderRadiusMedium,
  // FIXME: tokens.strokeWidthThick causes some weird bugs
  outlineWidth: '2px',
  ...style
}), {
  selector
});
//# sourceMappingURL=createFocusOutlineStyle.js.map