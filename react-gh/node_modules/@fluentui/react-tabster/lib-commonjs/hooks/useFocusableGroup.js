"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFocusableGroup = void 0;

const tabster_1 = /*#__PURE__*/require("tabster");

const useTabsterAttributes_1 = /*#__PURE__*/require("./useTabsterAttributes");

const useTabster_1 = /*#__PURE__*/require("./useTabster");
/**
 * A hook that returns the necessary tabster attributes to support groupping.
 * @param options - Options to configure keyboard navigation
 */


const useFocusableGroup = options => {
  const tabster = useTabster_1.useTabster();

  if (tabster) {
    tabster_1.getGroupper(tabster);
  }

  return useTabsterAttributes_1.useTabsterAttributes({
    groupper: {
      tabbability: getTabbability(options === null || options === void 0 ? void 0 : options.tabBehavior)
    }
  });
};

exports.useFocusableGroup = useFocusableGroup;

const getTabbability = tabBehavior => {
  switch (tabBehavior) {
    case 'unlimited':
      return tabster_1.Types.GroupperTabbabilities.Unlimited;

    case 'limited':
      return tabster_1.Types.GroupperTabbabilities.Limited;

    case 'limited-trap-focus':
      return tabster_1.Types.GroupperTabbabilities.LimitedTrapFocus;

    default:
      return undefined;
  }
};
//# sourceMappingURL=useFocusableGroup.js.map