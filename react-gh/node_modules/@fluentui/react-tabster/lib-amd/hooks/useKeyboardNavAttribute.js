define(["require", "exports", "keyborg", "react", "../focus/constants", "@fluentui/react-shared-contexts"], function (require, exports, keyborg_1, react_1, constants_1, react_shared_contexts_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useKeyboardNavAttribute = void 0;
    /**
     * Instantiates [keyborg](https://github.com/microsoft/keyborg) and adds `data-keyboard-nav`
     * attribute to a referenced element to ensure keyboard navigation awareness
     * synced to keyborg logic without having to cause a re-render on react tree.
     */
    function useKeyboardNavAttribute() {
        var targetDocument = react_shared_contexts_1.useFluent_unstable().targetDocument;
        var keyborg = react_1.useMemo(function () { return targetDocument && keyborg_1.createKeyborg(targetDocument.defaultView); }, [targetDocument]);
        var ref = react_1.useRef(null);
        react_1.useEffect(function () {
            if (keyborg) {
                setBooleanAttribute(ref, constants_1.KEYBOARD_NAV_ATTRIBUTE, keyborg.isNavigatingWithKeyboard());
                var cb_1 = function (next) {
                    setBooleanAttribute(ref, constants_1.KEYBOARD_NAV_ATTRIBUTE, next);
                };
                keyborg.subscribe(cb_1);
                return function () { return keyborg.unsubscribe(cb_1); };
            }
        }, [keyborg]);
        return ref;
    }
    exports.useKeyboardNavAttribute = useKeyboardNavAttribute;
    function setBooleanAttribute(elementRef, attribute, value) {
        if (!elementRef.current) {
            return;
        }
        if (value) {
            elementRef.current.setAttribute(attribute, '');
        }
        else {
            elementRef.current.removeAttribute(attribute);
        }
    }
});
//# sourceMappingURL=useKeyboardNavAttribute.js.map