define(["require", "exports", "@fluentui/react-utilities", "./useTabsterAttributes", "tabster", "./useTabster"], function (require, exports, react_utilities_1, useTabsterAttributes_1, tabster_1, useTabster_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useModalAttributes = void 0;
    /**
     * Applies modal dialog behaviour through DOM attributes
     * Modal element will focus trap and hide other content on the page
     * The trigger element will be focused if focus is lost after the modal element is removed
     *
     * @returns DOM attributes to apply to the modal element and its trigger
     */
    var useModalAttributes = function (options) {
        if (options === void 0) { options = {}; }
        var trapFocus = options.trapFocus, alwaysFocusable = options.alwaysFocusable, legacyTrapFocus = options.legacyTrapFocus;
        var tabster = useTabster_1.useTabster();
        // Initializes the modalizer and deloser APIs
        if (tabster) {
            tabster_1.getModalizer(tabster);
            tabster_1.getDeloser(tabster);
        }
        var id = react_utilities_1.useId('modal-');
        var modalAttributes = useTabsterAttributes_1.useTabsterAttributes({
            deloser: {},
            modalizer: {
                id: id,
                isOthersAccessible: !trapFocus,
                isAlwaysAccessible: alwaysFocusable,
                isTrapped: legacyTrapFocus,
            },
        });
        var triggerAttributes = useTabsterAttributes_1.useTabsterAttributes({
            deloser: {},
        });
        return { modalAttributes: modalAttributes, triggerAttributes: triggerAttributes };
    };
    exports.useModalAttributes = useModalAttributes;
});
//# sourceMappingURL=useModalAttributes.js.map