define(["require", "exports", "tslib", "./constants"], function (require, exports, tslib_1, constants_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createCustomFocusIndicatorStyle = void 0;
    /**
     * Creates a style for @see makeStyles that includes the necessary selectors for focus.
     * Should be used only when @see createFocusOutlineStyle does not fit requirements
     *
     * @param style - styling applied on focus, defaults to @see getDefaultFocusOutlineStyles
     * @param options - Configure the style of the focus outline
     */
    function createCustomFocusIndicatorStyle(style, _a) {
        var _b, _c;
        var _d = _a === void 0 ? constants_1.defaultOptions : _a, _e = _d.selector, selector = _e === void 0 ? constants_1.defaultOptions.selector : _e, _f = _d.enableOutline, enableOutline = _f === void 0 ? false : _f;
        return tslib_1.__assign(tslib_1.__assign({ ':focus': {
                outlineStyle: enableOutline ? undefined : 'none',
            }, ':focus-visible': {
                outlineStyle: enableOutline ? undefined : 'none',
            } }, (selector === 'focus' && (_b = {},
            _b["&[" + constants_1.FOCUS_VISIBLE_ATTR + "]"] = style,
            _b))), (selector === 'focus-within' && (_c = {},
            _c["&[" + constants_1.FOCUS_WITHIN_ATTR + "]:" + selector] = style,
            _c)));
    }
    exports.createCustomFocusIndicatorStyle = createCustomFocusIndicatorStyle;
});
//# sourceMappingURL=createCustomFocusIndicatorStyle.js.map