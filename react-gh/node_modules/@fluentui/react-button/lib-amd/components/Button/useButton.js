define(["require", "exports", "@fluentui/react-aria", "@fluentui/react-utilities"], function (require, exports, react_aria_1, react_utilities_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useButton_unstable = void 0;
    /**
     * Given user props, defines default props for the Button, calls useButtonState, and returns processed state.
     * @param props - User provided props to the Button component.
     * @param ref - User provided ref to be passed to the Button component.
     */
    var useButton_unstable = function (props, ref) {
        var _a = props.appearance, appearance = _a === void 0 ? 'secondary' : _a, _b = props.as, as = _b === void 0 ? 'button' : _b, _c = props.disabled, disabled = _c === void 0 ? false : _c, _d = props.disabledFocusable, disabledFocusable = _d === void 0 ? false : _d, icon = props.icon, _e = props.iconPosition, iconPosition = _e === void 0 ? 'before' : _e, _f = props.shape, shape = _f === void 0 ? 'rounded' : _f, _g = props.size, size = _g === void 0 ? 'medium' : _g;
        var iconShorthand = react_utilities_1.resolveShorthand(icon);
        return {
            // Props passed at the top-level
            appearance: appearance,
            disabled: disabled,
            disabledFocusable: disabledFocusable,
            iconPosition: iconPosition,
            shape: shape,
            size: size,
            // State calculated from a set of props
            iconOnly: Boolean((iconShorthand === null || iconShorthand === void 0 ? void 0 : iconShorthand.children) && !props.children),
            // Slots definition
            components: {
                root: 'button',
                icon: 'span',
            },
            root: react_utilities_1.getNativeElementProps(as, react_aria_1.useARIAButtonShorthand(props, {
                required: true,
                defaultProps: {
                    ref: ref,
                    type: 'button',
                },
            })),
            icon: iconShorthand,
        };
    };
    exports.useButton_unstable = useButton_unstable;
});
//# sourceMappingURL=useButton.js.map