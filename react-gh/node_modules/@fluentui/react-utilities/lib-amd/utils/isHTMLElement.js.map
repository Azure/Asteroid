{"version":3,"file":"isHTMLElement.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-utilities/src/utils/isHTMLElement.ts"],"names":[],"mappings":";;;;IAAA;;;;;;;;OAQG;IACH,SAAgB,aAAa,CAAC,OAAiC;;QAC7D,OAAO,OAAO,CACZ,OAAO,KAAK,IAAI;aACd,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,0CAAE,WAAW,CAAA;YACnC,OAAO,YAAY,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,CACnE,CAAC;IACJ,CAAC;IAND,sCAMC","sourcesContent":["/**\n * @internal\n * Verifies if a given node is an HTMLElement,\n * this method works seamlessly with frames and elements from different documents\n *\n * This is required as simply using `instanceof`\n * might be problematic while operating with [multiple realms](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_realms)\n *\n */\nexport function isHTMLElement(element?: Node | null | undefined): element is HTMLElement {\n  return Boolean(\n    element !== null &&\n      element?.ownerDocument?.defaultView &&\n      element instanceof element.ownerDocument.defaultView.HTMLElement,\n  );\n}\n"]}