import { isValidElement } from 'react';
/**
 * Resolves shorthands into slot props, to ensure normalization of the signature
 * being passed down to getSlots method
 * @param value - the base shorthand props
 * @param options - options to resolve shorthand props
 */

export const resolveShorthand = (value, options) => {
  const {
    required = false,
    defaultProps
  } = options || {};

  if (value === null || value === undefined && !required) {
    return undefined;
  }

  let resolvedShorthand = {};

  if (typeof value === 'string' || typeof value === 'number' || Array.isArray(value) || /*#__PURE__*/isValidElement(value)) {
    resolvedShorthand.children = value;
  } else if (typeof value === 'object') {
    resolvedShorthand = value;
  }

  return defaultProps ? { ...defaultProps,
    ...resolvedShorthand
  } : resolvedShorthand;
};
//# sourceMappingURL=resolveShorthand.js.map