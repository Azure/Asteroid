{"version":3,"file":"useLink.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-link/src/components/Link/useLink.ts"],"names":[],"mappings":";;;;IAKA;;;;OAIG;IACI,IAAM,gBAAgB,GAAG,UAC9B,KAAgB,EAChB,GAAqD;QAE7C,IAAA,KAAwF,KAAK,WAAvE,EAAtB,UAAU,mBAAG,SAAS,KAAA,EAAE,KAAgE,KAAK,SAArD,EAAhB,QAAQ,mBAAG,KAAK,KAAA,EAAE,KAA8C,KAAK,kBAA1B,EAAzB,iBAAiB,mBAAG,KAAK,KAAA,EAAE,KAAmB,KAAK,OAAV,EAAd,MAAM,mBAAG,KAAK,KAAA,CAAW;QACtG,IAAM,EAAE,GAAG,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAM,IAAI,GAAG,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QAEpD,IAAM,KAAK,GAAc;YACvB,gCAAgC;YAChC,UAAU,YAAA;YACV,QAAQ,UAAA;YACR,iBAAiB,mBAAA;YACjB,MAAM,QAAA;YAEN,mBAAmB;YACnB,UAAU,EAAE;gBACV,IAAI,EAAE,GAAG;aACV;YAED,IAAI,EAAE,uCAAqB,CAAC,EAAE,sCAC5B,GAAG,KAAA,EACH,IAAI,MAAA,IACD,KAAK,KACR,EAAE,IAAA,IACF;SACH,CAAC;QAEF,oCAAqB,CAAC,KAAK,CAAC,CAAC;QAE7B,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IA/BW,QAAA,gBAAgB,oBA+B3B","sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useLinkState_unstable } from './useLinkState';\nimport type { LinkProps, LinkState } from './Link.types';\n\n/**\n * Given user props, defines default props for the Link, calls useLinkState_unstable, and returns processed state.\n * @param props - User provided props to the Link component.\n * @param ref - User provided ref to be passed to the Link component.\n */\nexport const useLink_unstable = (\n  props: LinkProps,\n  ref: React.Ref<HTMLAnchorElement | HTMLButtonElement>,\n): LinkState => {\n  const { appearance = 'default', disabled = false, disabledFocusable = false, inline = false } = props;\n  const as = props.as || (props.href ? 'a' : 'button');\n  const type = as === 'button' ? 'button' : undefined;\n\n  const state: LinkState = {\n    // Props passed at the top-level\n    appearance,\n    disabled,\n    disabledFocusable,\n    inline,\n\n    // Slots definition\n    components: {\n      root: 'a',\n    },\n\n    root: getNativeElementProps(as, {\n      ref,\n      type,\n      ...props,\n      as,\n    }),\n  };\n\n  useLinkState_unstable(state);\n\n  return state;\n};\n"]}