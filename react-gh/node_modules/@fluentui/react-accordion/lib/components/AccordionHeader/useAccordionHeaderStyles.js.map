{"version":3,"sources":["packages/react-components/react-accordion/src/components/AccordionHeader/useAccordionHeaderStyles.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,YAAiC,YAAjC,QAAqD,gBAArD;AACA,SAAS,uBAAT,QAAwC,yBAAxC;AACA,SAAS,MAAT,EAAiB,gBAAjB,QAAyC,uBAAzC;AAIA,OAAO,MAAM,yBAAyB,GAAyC;EAC7E,IAAI,EAAE,qBADuE;EAE7E,MAAM,EAAE,6BAFqE;EAG7E,UAAU,EAAE,iCAHiE;EAI7E,IAAI,EAAE;AAJuE,CAAxE;;AAOP,MAAM,SAAS,glB;AAyFA;;;AACA,OAAO,MAAM,iCAAiC,GAAI,KAAD,IAAgC;EAC/E,MAAM,MAAM,GAAG,SAAS,EAAxB;EACA,KAAK,CAAC,IAAN,CAAW,SAAX,GAAuB,YAAY,CACjC,yBAAyB,CAAC,IADO,EAEjC,MAAM,CAAC,IAF0B,EAGjC,KAAK,CAAC,MAAN,IAAgB,MAAM,CAAC,UAHU,EAIjC,KAAK,CAAC,QAAN,IAAkB,MAAM,CAAC,YAJQ,EAKjC,KAAK,CAAC,IAAN,CAAW,SALsB,CAAnC;EAQA,KAAK,CAAC,MAAN,CAAa,SAAb,GAAyB,YAAY,CACnC,yBAAyB,CAAC,MADS,EAEnC,MAAM,CAAC,WAF4B,EAGnC,MAAM,CAAC,MAH4B,EAInC,MAAM,CAAC,cAJ4B,EAKnC,KAAK,CAAC,kBAAN,KAA6B,KAA7B,IAAsC,CAAC,KAAK,CAAC,IAA7C,IAAqD,MAAM,CAAC,yBALzB,EAMnC,KAAK,CAAC,kBAAN,KAA6B,KAA7B,IAAsC,MAAM,CAAC,mBANV,EAOnC,KAAK,CAAC,MAAN,IAAgB,MAAM,CAAC,YAPY,EAQnC,KAAK,CAAC,IAAN,KAAe,OAAf,IAA0B,MAAM,CAAC,WARE,EASnC,KAAK,CAAC,IAAN,KAAe,OAAf,IAA0B,MAAM,CAAC,WATE,EAUnC,KAAK,CAAC,IAAN,KAAe,aAAf,IAAgC,MAAM,CAAC,gBAVJ,EAWnC,KAAK,CAAC,MAAN,CAAa,SAXsB,CAArC;;EAcA,IAAI,KAAK,CAAC,UAAV,EAAsB;IACpB,KAAK,CAAC,UAAN,CAAiB,SAAjB,GAA6B,YAAY,CACvC,yBAAyB,CAAC,UADa,EAEvC,MAAM,CAAC,UAFgC,EAGvC,KAAK,CAAC,kBAAN,KAA6B,OAA7B,IAAwC,MAAM,CAAC,eAHR,EAIvC,KAAK,CAAC,kBAAN,KAA6B,KAA7B,IAAsC,MAAM,CAAC,aAJN,EAKvC,KAAK,CAAC,UAAN,CAAiB,SALsB,CAAzC;EAOD;;EACD,IAAI,KAAK,CAAC,IAAV,EAAgB;IACd,KAAK,CAAC,IAAN,CAAW,SAAX,GAAuB,YAAY,CAAC,yBAAyB,CAAC,IAA3B,EAAiC,MAAM,CAAC,IAAxC,EAA8C,KAAK,CAAC,IAAN,CAAW,SAAzD,CAAnC;EACD;;EACD,OAAO,KAAP;AACD,CArCM","sourcesContent":["import { shorthands, makeStyles, mergeClasses } from '@griffel/react';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport type { AccordionHeaderSlots, AccordionHeaderState } from './AccordionHeader.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const accordionHeaderClassNames: SlotClassNames<AccordionHeaderSlots> = {\n  root: 'fui-AccordionHeader',\n  button: 'fui-AccordionHeader__button',\n  expandIcon: 'fui-AccordionHeader__expandIcon',\n  icon: 'fui-AccordionHeader__icon',\n};\n\nconst useStyles = makeStyles({\n  // TODO: this should be extracted to another package\n  resetButton: {\n    boxSizing: 'content-box',\n    backgroundColor: 'inherit',\n    color: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    lineHeight: 'normal',\n    ...shorthands.overflow('visible'),\n    ...shorthands.padding(0),\n    WebkitAppearance: 'button',\n    textAlign: 'unset',\n  },\n  focusIndicator: createFocusOutlineStyle(),\n  root: {\n    color: tokens.colorNeutralForeground1,\n    backgroundColor: tokens.colorTransparentBackground,\n    ...shorthands.margin(0),\n    ...shorthands.borderRadius(tokens.borderRadiusMedium),\n  },\n  rootDisabled: {\n    backgroundImage: 'none',\n    color: tokens.colorNeutralForegroundDisabled,\n  },\n  rootInline: {\n    display: 'inline-block',\n  },\n  button: {\n    position: 'relative',\n    width: '100%',\n    ...shorthands.border('1px', 'solid', 'transparent'),\n    ...shorthands.padding(0, tokens.spacingHorizontalM, 0, tokens.spacingHorizontalMNudge),\n    height: '44px',\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    ...typographyStyles.body1,\n    boxSizing: 'border-box',\n  },\n  buttonSmall: {\n    height: '32px',\n    fontSize: tokens.fontSizeBase200,\n  },\n  buttonLarge: {\n    lineHeight: tokens.lineHeightBase400,\n    fontSize: tokens.fontSizeBase400,\n  },\n  buttonExtraLarge: {\n    lineHeight: tokens.lineHeightBase500,\n    fontSize: tokens.fontSizeBase500,\n  },\n  buttonInline: {\n    display: 'inline-flex',\n  },\n  buttonExpandIconEndNoIcon: {\n    paddingLeft: tokens.spacingHorizontalM,\n  },\n  buttonExpandIconEnd: {\n    paddingRight: tokens.spacingHorizontalMNudge,\n  },\n  expandIcon: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: tokens.lineHeightBase500,\n    fontSize: tokens.fontSizeBase500,\n  },\n  expandIconStart: {\n    paddingRight: tokens.spacingHorizontalS,\n  },\n  expandIconEnd: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: '0%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingLeft: tokens.spacingHorizontalS,\n  },\n  icon: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    paddingRight: tokens.spacingHorizontalS,\n    lineHeight: tokens.lineHeightBase500,\n    fontSize: tokens.fontSizeBase500,\n  },\n});\n\n/** Applies style classnames to slots */\nexport const useAccordionHeaderStyles_unstable = (state: AccordionHeaderState) => {\n  const styles = useStyles();\n  state.root.className = mergeClasses(\n    accordionHeaderClassNames.root,\n    styles.root,\n    state.inline && styles.rootInline,\n    state.disabled && styles.rootDisabled,\n    state.root.className,\n  );\n\n  state.button.className = mergeClasses(\n    accordionHeaderClassNames.button,\n    styles.resetButton,\n    styles.button,\n    styles.focusIndicator,\n    state.expandIconPosition === 'end' && !state.icon && styles.buttonExpandIconEndNoIcon,\n    state.expandIconPosition === 'end' && styles.buttonExpandIconEnd,\n    state.inline && styles.buttonInline,\n    state.size === 'small' && styles.buttonSmall,\n    state.size === 'large' && styles.buttonLarge,\n    state.size === 'extra-large' && styles.buttonExtraLarge,\n    state.button.className,\n  );\n\n  if (state.expandIcon) {\n    state.expandIcon.className = mergeClasses(\n      accordionHeaderClassNames.expandIcon,\n      styles.expandIcon,\n      state.expandIconPosition === 'start' && styles.expandIconStart,\n      state.expandIconPosition === 'end' && styles.expandIconEnd,\n      state.expandIcon.className,\n    );\n  }\n  if (state.icon) {\n    state.icon.className = mergeClasses(accordionHeaderClassNames.icon, styles.icon, state.icon.className);\n  }\n  return state;\n};\n"],"sourceRoot":"../src/"}