{"version":3,"file":"renderAccordion.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-accordion/src/components/Accordion/renderAccordion.tsx"],"names":[],"mappings":";;;;IAMA;;OAEG;IACI,IAAM,wBAAwB,GAAG,UAAC,KAAqB,EAAE,aAAqC;QAC7F,IAAA,KAAuB,0BAAQ,CAAiB,KAAK,CAAC,EAApD,KAAK,WAAA,EAAE,SAAS,eAAoC,CAAC;QAE7D,OAAO,CACL,oBAAC,KAAK,CAAC,IAAI,uBAAK,SAAS,CAAC,IAAI;YAC5B,oBAAC,mCAAgB,CAAC,QAAQ,IAAC,KAAK,EAAE,aAAa,CAAC,SAAS,IAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAA6B,CACrG,CACd,CAAC;IACJ,CAAC,CAAC;IARW,QAAA,wBAAwB,4BAQnC","sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\n\nimport { AccordionContext } from './AccordionContext';\nimport type { AccordionState, AccordionSlots, AccordionContextValues } from './Accordion.types';\n\n/**\n * Function that renders the final JSX of the component\n */\nexport const renderAccordion_unstable = (state: AccordionState, contextValues: AccordionContextValues) => {\n  const { slots, slotProps } = getSlots<AccordionSlots>(state);\n\n  return (\n    <slots.root {...slotProps.root}>\n      <AccordionContext.Provider value={contextValues.accordion}>{slotProps.root.children}</AccordionContext.Provider>\n    </slots.root>\n  );\n};\n"]}