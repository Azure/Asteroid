"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useToolbarToggleButton_unstable = void 0;

const react_button_1 = /*#__PURE__*/require("@fluentui/react-button");

const ToolbarContext_1 = /*#__PURE__*/require("../Toolbar/ToolbarContext");
/**
 * Given user props, defines default props for the ToggleButton, calls useButtonState and useChecked, and returns
 * processed state.
 * @param props - User provided props to the ToggleButton component.
 * @param ref - User provided ref to be passed to the ToggleButton component.
 */


const useToolbarToggleButton_unstable = (props, ref) => {
  const handleToggleButton = ToolbarContext_1.useToolbarContext_unstable(ctx => ctx.handleToggleButton);
  const checked = ToolbarContext_1.useToolbarContext_unstable(ctx => {
    var _a;

    return !!((_a = ctx.checkedValues[props.name]) === null || _a === void 0 ? void 0 : _a.includes(props.value));
  });
  const size = ToolbarContext_1.useToolbarContext_unstable(ctx => ctx.size);
  const {
    onClick: onClickOriginal
  } = props;
  const toggleButtonState = react_button_1.useToggleButton_unstable({
    size,
    checked,
    ...props
  }, ref);
  const state = { ...toggleButtonState,
    name: props.name,
    value: props.value
  };

  const handleOnClick = e => {
    if (state.disabled) {
      e.preventDefault();
      e.stopPropagation();
      return;
    }

    handleToggleButton === null || handleToggleButton === void 0 ? void 0 : handleToggleButton(e, state.name, state.value, state.checked);
    onClickOriginal === null || onClickOriginal === void 0 ? void 0 : onClickOriginal(e);
  };

  state.root.onClick = handleOnClick;
  return state;
};

exports.useToolbarToggleButton_unstable = useToolbarToggleButton_unstable;
//# sourceMappingURL=useToolbarToggleButton.js.map