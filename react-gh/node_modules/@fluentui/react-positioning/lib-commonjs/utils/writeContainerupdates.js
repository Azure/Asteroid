"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.writeContainerUpdates = void 0;

const constants_1 = /*#__PURE__*/require("../constants");
/**
 * Writes all container element position updates after the position is computed
 */


function writeContainerUpdates(options) {
  var _a, _b;

  const {
    container,
    placement,
    middlewareData,
    strategy,
    lowPPI,
    coordinates
  } = options;

  if (!container) {
    return;
  }

  container.setAttribute(constants_1.DATA_POSITIONING_PLACEMENT, placement);
  container.removeAttribute(constants_1.DATA_POSITIONING_INTERSECTING);

  if (middlewareData.intersectionObserver.intersecting) {
    container.setAttribute(constants_1.DATA_POSITIONING_INTERSECTING, '');
  }

  container.removeAttribute(constants_1.DATA_POSITIONING_ESCAPED);

  if ((_a = middlewareData.hide) === null || _a === void 0 ? void 0 : _a.escaped) {
    container.setAttribute(constants_1.DATA_POSITIONING_ESCAPED, '');
  }

  container.removeAttribute(constants_1.DATA_POSITIONING_HIDDEN);

  if ((_b = middlewareData.hide) === null || _b === void 0 ? void 0 : _b.referenceHidden) {
    container.setAttribute(constants_1.DATA_POSITIONING_HIDDEN, '');
  }

  const x = Math.round(coordinates.x);
  const y = Math.round(coordinates.y);
  Object.assign(container.style, {
    transform: lowPPI ? `translate(${x}px, ${y}px)` : `translate3d(${x}px, ${y}px, 0)`,
    position: strategy
  });
}

exports.writeContainerUpdates = writeContainerUpdates;
//# sourceMappingURL=writeContainerupdates.js.map