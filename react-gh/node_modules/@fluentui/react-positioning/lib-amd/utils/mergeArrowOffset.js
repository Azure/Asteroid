define(["require", "exports", "tslib"], function (require, exports, tslib_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.mergeArrowOffset = void 0;
    /**
     * Generally when adding an arrow to popper, it's necessary to offset the position of the popper by the
     * height of the arrow. A simple utility to merge a provided offset with an arrow height to return the final offset
     *
     * @internal
     * @param userOffset - The offset provided by the user
     * @param arrowHeight - The height of the arrow in px
     * @returns User offset augmented with arrow height
     */
    function mergeArrowOffset(userOffset, arrowHeight) {
        if (typeof userOffset === 'number') {
            return addArrowOffset(userOffset, arrowHeight);
        }
        if (typeof userOffset === 'object' && userOffset !== null) {
            return addArrowOffset(userOffset, arrowHeight);
        }
        if (typeof userOffset === 'function') {
            return function (offsetParams) {
                var offset = userOffset(offsetParams);
                return addArrowOffset(offset, arrowHeight);
            };
        }
        return { mainAxis: arrowHeight };
    }
    exports.mergeArrowOffset = mergeArrowOffset;
    var addArrowOffset = function (offset, arrowHeight) {
        var _a;
        if (typeof offset === 'number') {
            return { mainAxis: offset + arrowHeight };
        }
        return tslib_1.__assign(tslib_1.__assign({}, offset), { mainAxis: ((_a = offset.mainAxis) !== null && _a !== void 0 ? _a : 0) + arrowHeight });
    };
});
//# sourceMappingURL=mergeArrowOffset.js.map