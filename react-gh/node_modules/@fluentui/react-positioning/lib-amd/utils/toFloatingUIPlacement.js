define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toFloatingUIPlacement = void 0;
    var getPositionMap = function (rtl) { return ({
        above: 'top',
        below: 'bottom',
        before: rtl ? 'right' : 'left',
        after: rtl ? 'left' : 'right',
    }); };
    // Floating UI automatically flips alignment
    // https://github.com/floating-ui/floating-ui/issues/1563
    var getAlignmentMap = function () { return ({
        start: 'start',
        end: 'end',
        top: 'start',
        bottom: 'end',
        center: undefined,
    }); };
    var shouldAlignToCenter = function (p, a) {
        var positionedVertically = p === 'above' || p === 'below';
        var alignedVertically = a === 'top' || a === 'bottom';
        return (positionedVertically && alignedVertically) || (!positionedVertically && !alignedVertically);
    };
    /**
     * Maps internal positioning values to Floating UI placement
     * @see positioningHelper.test.ts for expected placement values
     */
    var toFloatingUIPlacement = function (align, position, rtl) {
        var alignment = shouldAlignToCenter(position, align) ? 'center' : align;
        var computedPosition = position && getPositionMap(rtl)[position];
        var computedAlignment = alignment && getAlignmentMap()[alignment];
        if (computedPosition && computedAlignment) {
            return computedPosition + "-" + computedAlignment;
        }
        return computedPosition;
    };
    exports.toFloatingUIPlacement = toFloatingUIPlacement;
});
//# sourceMappingURL=toFloatingUIPlacement.js.map