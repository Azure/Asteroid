{"version":3,"file":"useTextStyles.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-text/src/components/Text/useTextStyles.ts"],"names":[],"mappings":"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","sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { TextSlots, TextState } from './Text.types';\nimport { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const textClassNames: SlotClassNames<TextSlots> = {\n  root: 'fui-Text',\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    fontFamily: tokens.fontFamilyBase,\n    fontSize: tokens.fontSizeBase300,\n    lineHeight: tokens.lineHeightBase300,\n    fontWeight: tokens.fontWeightRegular,\n    textAlign: 'start',\n    display: 'inline',\n    whiteSpace: 'normal',\n    ...shorthands.overflow('visible'),\n    textOverflow: 'clip',\n  },\n  nowrap: {\n    whiteSpace: 'nowrap',\n    ...shorthands.overflow('hidden'),\n  },\n  truncate: {\n    textOverflow: 'ellipsis',\n  },\n  block: {\n    display: 'block',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n  underline: {\n    textDecorationLine: 'underline',\n  },\n  strikethrough: {\n    textDecorationLine: 'line-through',\n  },\n  strikethroughUnderline: {\n    textDecorationLine: 'line-through underline',\n  },\n  base100: {\n    fontSize: tokens.fontSizeBase100,\n    lineHeight: tokens.lineHeightBase100,\n  },\n  base200: {\n    fontSize: tokens.fontSizeBase200,\n    lineHeight: tokens.lineHeightBase200,\n  },\n  base400: {\n    fontSize: tokens.fontSizeBase400,\n    lineHeight: tokens.lineHeightBase400,\n  },\n  base500: {\n    fontSize: tokens.fontSizeBase500,\n    lineHeight: tokens.lineHeightBase500,\n  },\n  base600: {\n    fontSize: tokens.fontSizeBase600,\n    lineHeight: tokens.lineHeightBase600,\n  },\n  hero700: {\n    fontSize: tokens.fontSizeHero700,\n    lineHeight: tokens.lineHeightHero700,\n  },\n  hero800: {\n    fontSize: tokens.fontSizeHero800,\n    lineHeight: tokens.lineHeightHero800,\n  },\n  hero900: {\n    fontSize: tokens.fontSizeHero900,\n    lineHeight: tokens.lineHeightHero900,\n  },\n  hero1000: {\n    fontSize: tokens.fontSizeHero1000,\n    lineHeight: tokens.lineHeightHero1000,\n  },\n  monospace: {\n    fontFamily: tokens.fontFamilyMonospace,\n  },\n  numeric: {\n    fontFamily: tokens.fontFamilyNumeric,\n  },\n  weightMedium: {\n    fontWeight: tokens.fontWeightMedium,\n  },\n  weightSemibold: {\n    fontWeight: tokens.fontWeightSemibold,\n  },\n  weightBold: {\n    fontWeight: tokens.fontWeightBold,\n  },\n  alignCenter: {\n    textAlign: 'center',\n  },\n  alignEnd: {\n    textAlign: 'end',\n  },\n  alignJustify: {\n    textAlign: 'justify',\n  },\n});\n\n/**\n * Apply styling to the Text slots based on the state\n */\nexport const useTextStyles_unstable = (state: TextState): TextState => {\n  const styles = useStyles();\n\n  state.root.className = mergeClasses(\n    textClassNames.root,\n    styles.root,\n    state.wrap === false && styles.nowrap,\n    state.truncate && styles.truncate,\n    state.block && styles.block,\n    state.italic && styles.italic,\n    state.underline && styles.underline,\n    state.strikethrough && styles.strikethrough,\n    state.underline && state.strikethrough && styles.strikethroughUnderline,\n    state.size === 100 && styles.base100,\n    state.size === 200 && styles.base200,\n    state.size === 400 && styles.base400,\n    state.size === 500 && styles.base500,\n    state.size === 600 && styles.base600,\n    state.size === 700 && styles.hero700,\n    state.size === 800 && styles.hero800,\n    state.size === 900 && styles.hero900,\n    state.size === 1000 && styles.hero1000,\n    state.font === 'monospace' && styles.monospace,\n    state.font === 'numeric' && styles.numeric,\n    state.weight === 'medium' && styles.weightMedium,\n    state.weight === 'semibold' && styles.weightSemibold,\n    state.weight === 'bold' && styles.weightBold,\n    state.align === 'center' && styles.alignCenter,\n    state.align === 'end' && styles.alignEnd,\n    state.align === 'justify' && styles.alignJustify,\n    state.root.className,\n  );\n\n  return state;\n};\n"]}