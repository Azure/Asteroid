{"version":3,"file":"useDivider.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-divider/src/components/Divider/useDivider.ts"],"names":[],"mappings":";;;;IAIA;;;;OAIG;IACI,IAAM,mBAAmB,GAAG,UAAC,KAAmB,EAAE,GAA2B;QAC1E,IAAA,KAA8F,KAAK,aAA5E,EAAvB,YAAY,mBAAG,QAAQ,KAAA,EAAE,KAAqE,KAAK,WAApD,EAAtB,UAAU,mBAAG,SAAS,KAAA,EAAE,KAA6C,KAAK,MAArC,EAAb,KAAK,mBAAG,KAAK,KAAA,EAAE,KAA8B,KAAK,SAAnB,EAAhB,QAAQ,mBAAG,KAAK,KAAA,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;QAC5G,IAAM,SAAS,GAAG,uBAAK,CAAC,UAAU,CAAC,CAAC;QAEpC,OAAO;YACL,gCAAgC;YAChC,YAAY,cAAA;YACZ,UAAU,YAAA;YACV,KAAK,OAAA;YACL,QAAQ,UAAA;YAER,mBAAmB;YACnB,UAAU,EAAE;gBACV,IAAI,EAAE,KAAK;gBACX,OAAO,EAAE,KAAK;aACf;YAED,IAAI,EAAE,uCAAqB,CAAC,KAAK,sCAC/B,IAAI,EAAE,WAAW,EACjB,kBAAkB,EAAE,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,EACxD,iBAAiB,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,IACtD,KAAK,KACR,GAAG,KAAA,IACH;YACF,OAAO,EAAE,kCAAgB,CAAC,OAAO,EAAE;gBACjC,QAAQ,EAAE,IAAI;gBACd,YAAY,EAAE;oBACZ,EAAE,EAAE,SAAS;oBACb,QAAQ,EAAE,KAAK,CAAC,QAAQ;iBACzB;aACF,CAAC;SACH,CAAC;IACJ,CAAC,CAAC;IAhCW,QAAA,mBAAmB,uBAgC9B","sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport type { DividerProps, DividerState } from './Divider.types';\n\n/**\n * Returns the props and state required to render the component\n * @param props - User-provided props to the Divider component.\n * @param ref - User-provided ref to be passed to the Divider component.\n */\nexport const useDivider_unstable = (props: DividerProps, ref: React.Ref<HTMLElement>): DividerState => {\n  const { alignContent = 'center', appearance = 'default', inset = false, vertical = false, wrapper } = props;\n  const dividerId = useId('divider-');\n\n  return {\n    // Props passed at the top-level\n    alignContent,\n    appearance,\n    inset,\n    vertical,\n\n    // Slots definition\n    components: {\n      root: 'div',\n      wrapper: 'div',\n    },\n\n    root: getNativeElementProps('div', {\n      role: 'separator',\n      'aria-orientation': vertical ? 'vertical' : 'horizontal',\n      'aria-labelledby': props.children ? dividerId : undefined,\n      ...props,\n      ref,\n    }),\n    wrapper: resolveShorthand(wrapper, {\n      required: true,\n      defaultProps: {\n        id: dividerId,\n        children: props.children,\n      },\n    }),\n  };\n};\n"]}