{"version":3,"sources":["packages/react-components/react-divider/src/components/Divider/useDivider.ts"],"names":[],"mappings":"AACA,SAAS,qBAAT,EAAgC,gBAAhC,EAAkD,KAAlD,QAA+D,2BAA/D;AAGA;;;;AAIG;;AACH,OAAO,MAAM,mBAAmB,GAAG,CAAC,KAAD,EAAsB,GAAtB,KAAmE;EACpG,MAAM;IAAE,YAAY,GAAG,QAAjB;IAA2B,UAAU,GAAG,SAAxC;IAAmD,KAAK,GAAG,KAA3D;IAAkE,QAAQ,GAAG,KAA7E;IAAoF;EAApF,IAAgG,KAAtG;EACA,MAAM,SAAS,GAAG,KAAK,CAAC,UAAD,CAAvB;EAEA,OAAO;IACL;IACA,YAFK;IAGL,UAHK;IAIL,KAJK;IAKL,QALK;IAOL;IACA,UAAU,EAAE;MACV,IAAI,EAAE,KADI;MAEV,OAAO,EAAE;IAFC,CARP;IAaL,IAAI,EAAE,qBAAqB,CAAC,KAAD,EAAQ;MACjC,IAAI,EAAE,WAD2B;MAEjC,oBAAoB,QAAQ,GAAG,UAAH,GAAgB,YAFX;MAGjC,mBAAmB,KAAK,CAAC,QAAN,GAAiB,SAAjB,GAA6B,SAHf;MAIjC,GAAG,KAJ8B;MAKjC;IALiC,CAAR,CAbtB;IAoBL,OAAO,EAAE,gBAAgB,CAAC,OAAD,EAAU;MACjC,QAAQ,EAAE,IADuB;MAEjC,YAAY,EAAE;QACZ,EAAE,EAAE,SADQ;QAEZ,QAAQ,EAAE,KAAK,CAAC;MAFJ;IAFmB,CAAV;EApBpB,CAAP;AA4BD,CAhCM","sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport type { DividerProps, DividerState } from './Divider.types';\n\n/**\n * Returns the props and state required to render the component\n * @param props - User-provided props to the Divider component.\n * @param ref - User-provided ref to be passed to the Divider component.\n */\nexport const useDivider_unstable = (props: DividerProps, ref: React.Ref<HTMLElement>): DividerState => {\n  const { alignContent = 'center', appearance = 'default', inset = false, vertical = false, wrapper } = props;\n  const dividerId = useId('divider-');\n\n  return {\n    // Props passed at the top-level\n    alignContent,\n    appearance,\n    inset,\n    vertical,\n\n    // Slots definition\n    components: {\n      root: 'div',\n      wrapper: 'div',\n    },\n\n    root: getNativeElementProps('div', {\n      role: 'separator',\n      'aria-orientation': vertical ? 'vertical' : 'horizontal',\n      'aria-labelledby': props.children ? dividerId : undefined,\n      ...props,\n      ref,\n    }),\n    wrapper: resolveShorthand(wrapper, {\n      required: true,\n      defaultProps: {\n        id: dividerId,\n        children: props.children,\n      },\n    }),\n  };\n};\n"],"sourceRoot":"../src/"}