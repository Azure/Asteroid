{"version":3,"file":"useBadgeStyles.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-badge/src/components/Badge/useBadgeStyles.ts"],"names":[],"mappings":"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","sourcesContent":["import { shorthands, mergeClasses, makeStyles } from '@griffel/react';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport type { BadgeSlots, BadgeState } from './Badge.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const badgeClassNames: SlotClassNames<BadgeSlots> = {\n  root: 'fui-Badge',\n  icon: 'fui-Badge__icon',\n};\n\n// The text content of the badge has additional horizontal padding, but there is no `text` slot to add that padding to.\n// Instead, add extra padding to the root, and a negative margin on the icon to \"remove\" the extra padding on the icon.\nconst textPadding = tokens.spacingHorizontalXXS;\n\nconst useRootStyles = makeStyles({\n  base: {\n    display: 'inline-flex',\n    boxSizing: 'border-box',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    ...typographyStyles.caption1Strong,\n  },\n\n  fontSmallToTiny: {\n    ...typographyStyles.caption2Strong,\n  },\n\n  // size\n\n  tiny: {\n    width: '6px',\n    height: '6px',\n    fontSize: '4px',\n    lineHeight: '4px',\n  },\n  'extra-small': {\n    width: '10px',\n    height: '10px',\n    fontSize: '6px',\n    lineHeight: '6px',\n  },\n  small: {\n    minWidth: '16px',\n    height: '16px',\n    ...shorthands.padding(0, `calc(${tokens.spacingHorizontalXXS} + ${textPadding})`),\n  },\n  medium: {\n    height: '20px',\n    minWidth: '20px',\n    ...shorthands.padding(0, `calc(${tokens.spacingHorizontalXS} + ${textPadding})`),\n  },\n  large: {\n    minWidth: '24px',\n    height: '24px',\n    ...shorthands.padding(0, `calc(${tokens.spacingHorizontalXS} + ${textPadding})`),\n  },\n  'extra-large': {\n    minWidth: '32px',\n    height: '32px',\n    ...shorthands.padding(0, `calc(${tokens.spacingHorizontalSNudge} + ${textPadding})`),\n  },\n\n  // shape\n\n  square: {\n    ...shorthands.borderRadius(tokens.borderRadiusNone),\n  },\n  rounded: {\n    ...shorthands.borderRadius(tokens.borderRadiusMedium),\n  },\n  roundedSmallToTiny: {\n    ...shorthands.borderRadius(tokens.borderRadiusSmall),\n  },\n  circular: {\n    ...shorthands.borderRadius(tokens.borderRadiusCircular),\n  },\n\n  // border (all appearances except ghost)\n\n  border: {\n    // The border is applied in an :after pseudo-element because it should not affect layout.\n    // The padding and size of the badge should be the same regardless of whether or not it has a border.\n    '::after': {\n      content: '\"\"',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      ...shorthands.borderStyle('solid'),\n      ...shorthands.borderWidth(tokens.strokeWidthThin),\n      ...shorthands.borderColor('inherit'),\n      ...shorthands.borderRadius('inherit'),\n    },\n  },\n\n  // appearance: filled\n\n  filled: {\n    // Use a transparent stroke (rather than no border) so the border is visible in high contrast\n    ...shorthands.borderColor(tokens.colorTransparentStroke),\n  },\n  'filled-brand': {\n    backgroundColor: tokens.colorBrandBackground,\n    color: tokens.colorNeutralForegroundOnBrand,\n  },\n  'filled-danger': {\n    backgroundColor: tokens.colorPaletteRedBackground3,\n    color: tokens.colorNeutralForegroundOnBrand,\n  },\n  'filled-important': {\n    backgroundColor: tokens.colorNeutralForeground1,\n    color: tokens.colorNeutralBackground1,\n  },\n  'filled-informative': {\n    backgroundColor: tokens.colorNeutralBackground5,\n    color: tokens.colorNeutralForeground3,\n  },\n  'filled-severe': {\n    backgroundColor: tokens.colorPaletteDarkOrangeBackground3,\n    color: tokens.colorNeutralForegroundOnBrand,\n  },\n  'filled-subtle': {\n    backgroundColor: tokens.colorNeutralBackground1,\n    color: tokens.colorNeutralForeground1,\n  },\n  'filled-success': {\n    backgroundColor: tokens.colorPaletteGreenBackground3,\n    color: tokens.colorNeutralForegroundOnBrand,\n  },\n  'filled-warning': {\n    backgroundColor: tokens.colorPaletteYellowBackground3,\n    color: tokens.colorNeutralForeground1Static,\n  },\n\n  // appearance: ghost\n\n  ghost: {\n    // No shared colors between ghost appearances\n  },\n  'ghost-brand': {\n    color: tokens.colorBrandForeground1,\n  },\n  'ghost-danger': {\n    color: tokens.colorPaletteRedForeground3,\n  },\n  'ghost-important': {\n    color: tokens.colorNeutralForeground1,\n  },\n  'ghost-informative': {\n    color: tokens.colorNeutralForeground3,\n  },\n  'ghost-severe': {\n    color: tokens.colorPaletteDarkOrangeForeground3,\n  },\n  'ghost-subtle': {\n    color: tokens.colorNeutralForegroundStaticInverted,\n  },\n  'ghost-success': {\n    color: tokens.colorPaletteGreenForeground3,\n  },\n  'ghost-warning': {\n    color: tokens.colorPaletteYellowForeground2,\n  },\n\n  // appearance: outline\n\n  outline: {\n    ...shorthands.borderColor('currentColor'),\n  },\n  'outline-brand': {\n    color: tokens.colorBrandForeground1,\n  },\n  'outline-danger': {\n    color: tokens.colorPaletteRedForeground3,\n    ...shorthands.borderColor(tokens.colorPaletteRedBorder2),\n  },\n  'outline-important': {\n    color: tokens.colorNeutralForeground3,\n    ...shorthands.borderColor(tokens.colorNeutralStrokeAccessible),\n  },\n  'outline-informative': {\n    color: tokens.colorNeutralForeground3,\n    ...shorthands.borderColor(tokens.colorNeutralStroke2),\n  },\n  'outline-severe': {\n    color: tokens.colorPaletteDarkOrangeForeground3,\n  },\n  'outline-subtle': {\n    color: tokens.colorNeutralForegroundStaticInverted,\n  },\n  'outline-success': {\n    color: tokens.colorPaletteGreenForeground3,\n    ...shorthands.borderColor(tokens.colorPaletteGreenBorder2),\n  },\n  'outline-warning': {\n    color: tokens.colorPaletteYellowForeground2,\n  },\n\n  // appearance: tint\n\n  tint: {\n    // No shared colors between tint appearances\n  },\n  'tint-brand': {\n    backgroundColor: tokens.colorBrandBackground2,\n    color: tokens.colorBrandForeground2,\n    ...shorthands.borderColor(tokens.colorBrandStroke2),\n  },\n  'tint-danger': {\n    backgroundColor: tokens.colorPaletteRedBackground1,\n    color: tokens.colorPaletteRedForeground1,\n    ...shorthands.borderColor(tokens.colorPaletteRedBorder1),\n  },\n  'tint-important': {\n    backgroundColor: tokens.colorNeutralForeground3,\n    color: tokens.colorNeutralBackground1,\n    ...shorthands.borderColor(tokens.colorTransparentStroke),\n  },\n  'tint-informative': {\n    backgroundColor: tokens.colorNeutralBackground4,\n    color: tokens.colorNeutralForeground3,\n    ...shorthands.borderColor(tokens.colorNeutralStroke2),\n  },\n  'tint-severe': {\n    backgroundColor: tokens.colorPaletteDarkOrangeBackground1,\n    color: tokens.colorPaletteDarkOrangeForeground1,\n    ...shorthands.borderColor(tokens.colorPaletteDarkOrangeBorder1),\n  },\n  'tint-subtle': {\n    backgroundColor: tokens.colorNeutralBackground1,\n    color: tokens.colorNeutralForeground3,\n    ...shorthands.borderColor(tokens.colorNeutralStroke2),\n  },\n  'tint-success': {\n    backgroundColor: tokens.colorPaletteGreenBackground1,\n    color: tokens.colorPaletteGreenForeground1,\n    ...shorthands.borderColor(tokens.colorPaletteGreenBorder1),\n  },\n  'tint-warning': {\n    backgroundColor: tokens.colorPaletteYellowBackground1,\n    color: tokens.colorPaletteYellowForeground1,\n    ...shorthands.borderColor(tokens.colorPaletteYellowBorder1),\n  },\n});\n\nconst useIconStyles = makeStyles({\n  base: {\n    display: 'flex',\n    lineHeight: '1',\n    ...shorthands.margin(0, `calc(-1 * ${textPadding})`), // Remove text padding added to root\n  },\n\n  beforeText: {\n    marginRight: `calc(${tokens.spacingHorizontalXXS} + ${textPadding})`,\n  },\n  afterText: {\n    marginLeft: `calc(${tokens.spacingHorizontalXXS} + ${textPadding})`,\n  },\n\n  beforeTextXL: {\n    marginRight: `calc(${tokens.spacingHorizontalXS} + ${textPadding})`,\n  },\n  afterTextXL: {\n    marginLeft: `calc(${tokens.spacingHorizontalXS} + ${textPadding})`,\n  },\n\n  // size\n\n  tiny: {\n    fontSize: '6px',\n  },\n  'extra-small': {\n    fontSize: '10px',\n  },\n  small: {\n    fontSize: '12px',\n  },\n  medium: {\n    fontSize: '12px',\n  },\n  large: {\n    fontSize: '16px',\n  },\n  'extra-large': {\n    fontSize: '20px',\n  },\n});\n\n/**\n * Applies style classnames to slots\n */\nexport const useBadgeStyles_unstable = (state: BadgeState): BadgeState => {\n  const rootStyles = useRootStyles();\n\n  const smallToTiny = state.size === 'small' || state.size === 'extra-small' || state.size === 'tiny';\n\n  state.root.className = mergeClasses(\n    badgeClassNames.root,\n    rootStyles.base,\n    smallToTiny && rootStyles.fontSmallToTiny,\n    rootStyles[state.size],\n    rootStyles[state.shape],\n    state.shape === 'rounded' && smallToTiny && rootStyles.roundedSmallToTiny,\n    state.appearance !== 'ghost' && rootStyles.border,\n    rootStyles[state.appearance],\n    rootStyles[`${state.appearance}-${state.color}` as const],\n    state.root.className,\n  );\n\n  const iconStyles = useIconStyles();\n  if (state.icon) {\n    let iconPositionClass;\n    if (state.root.children) {\n      if (state.size === 'extra-large') {\n        iconPositionClass = state.iconPosition === 'after' ? iconStyles.afterTextXL : iconStyles.beforeTextXL;\n      } else {\n        iconPositionClass = state.iconPosition === 'after' ? iconStyles.afterText : iconStyles.beforeText;\n      }\n    }\n\n    state.icon.className = mergeClasses(\n      badgeClassNames.icon,\n      iconStyles.base,\n      iconPositionClass,\n      iconStyles[state.size],\n      state.icon.className,\n    );\n  }\n\n  return state;\n};\n"]}