{"version":3,"sources":["packages/react-components/react-badge/src/components/PresenceBadge/usePresenceBadge.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,gBAAT,QAAiC,2BAAjC;AACA,SACE,uBADF,EAEE,wBAFF,EAGE,kBAHF,EAIE,kBAJF,EAKE,iBALF,EAME,kBANF,EAOE,sBAPF,EAQE,kBARF,EASE,sBATF,QAUO,iBAVP;AAWA,SAAS,iBAAT,QAAkC,gBAAlC;;AAGA,MAAM,OAAO,GAAG,CAAC,MAAD,EAAuC,WAAvC,EAA6D,IAA7D,KAAiG;EAC/G,QAAQ,MAAR;IACE,KAAK,WAAL;MACE,OAAO,WAAW,GAAG,wBAAwB,CAAC,IAAD,CAA3B,GAAoC,uBAAuB,CAAC,IAAD,CAA7E;;IACF,KAAK,MAAL;MACE,OAAO,WAAW,GAAG,sBAAsB,CAAC,IAAD,CAAzB,GAAkC,kBAAkB,CAAC,IAAD,CAAtE;;IACF,KAAK,MAAL;MACE,OAAO,WAAW,GAAG,sBAAsB,CAAC,IAAD,CAAzB,GAAkC,kBAAkB,CAAC,IAAD,CAAtE;;IACF,KAAK,gBAAL;MACE,OAAO,WAAW,GAAG,kBAAkB,CAAC,IAAD,CAArB,GAA8B,iBAAiB,CAAC,IAAD,CAAjE;;IACF,KAAK,SAAL;MACE,OAAO,sBAAsB,CAAC,IAAD,CAA7B;;IACF,KAAK,eAAL;MACE,OAAO,kBAAkB,CAAC,IAAD,CAAzB;;IACF,KAAK,SAAL;MACE,OAAO,sBAAsB,CAAC,IAAD,CAA7B;EAdJ;AAgBD,CAjBD;;AAmBA,MAAM,eAAe,GAAG;EACtB,IAAI,EAAE,MADgB;EAEtB,iBAAiB,eAFK;EAGtB,IAAI,EAAE,MAHgB;EAItB,SAAS,EAAE,WAJW;EAKtB,OAAO,EAAE,SALa;EAMtB,kBAAkB,gBANI;EAOtB,OAAO,EAAE;AAPa,CAAxB;AAUA;;AAEG;;AACH,OAAO,MAAM,yBAAyB,GAAG,CACvC,KADuC,EAEvC,GAFuC,KAGjB;EACtB,MAAM;IAAE,IAAI,GAAG,QAAT;IAAmB,MAAM,GAAG,WAA5B;IAAyC,WAAW,GAAG;EAAvD,IAAiE,KAAvE;EAEA,MAAM,UAAU,GAAG,eAAe,CAAC,MAAD,CAAlC;EACA,MAAM,OAAO,GAAG,KAAK,CAAC,WAAN,IAAqB,KAAK,CAAC,MAAN,KAAiB,eAAtC,GAAwD,IAAI,eAAe,CAAC,eAAD,CAAiB,EAA5F,GAAiG,EAAjH;EAEA,MAAM,WAAW,GAAG,OAAO,CAAC,MAAD,EAAS,WAAT,EAAsB,IAAtB,CAA3B;EAEA,MAAM,KAAK,GAAuB,EAChC,GAAG,iBAAiB,CAClB;MACE,cAAc,UAAU,GAAG,OAD7B;MAEE,IAAI,EAAE,KAFR;MAGE,GAAG,KAHL;MAIE,IAJF;MAKE,IAAI,EAAE,gBAAgB,CAAC,KAAK,CAAC,IAAP,EAAa;QACjC,YAAY,EAAE;UACZ,QAAQ,EAAE,WAAW,gBAAG,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,IAAZ,CAAH,GAAqB;QAD9B,CADmB;QAIjC,QAAQ,EAAE;MAJuB,CAAb;IALxB,CADkB,EAalB,GAbkB,CADY;IAgBhC,MAhBgC;IAiBhC;EAjBgC,CAAlC;EAoBA,OAAO,KAAP;AACD,CAhCM","sourcesContent":["import * as React from 'react';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport {\n  presenceAvailableFilled,\n  presenceAvailableRegular,\n  presenceAwayFilled,\n  presenceBusyFilled,\n  presenceDndFilled,\n  presenceDndRegular,\n  presenceOfflineRegular,\n  presenceOofRegular,\n  presenceUnknownRegular,\n} from './presenceIcons';\nimport { useBadge_unstable } from '../Badge/index';\nimport type { PresenceBadgeProps, PresenceBadgeState } from './PresenceBadge.types';\n\nconst iconMap = (status: PresenceBadgeState['status'], outOfOffice: boolean, size: PresenceBadgeState['size']) => {\n  switch (status) {\n    case 'available':\n      return outOfOffice ? presenceAvailableRegular[size] : presenceAvailableFilled[size];\n    case 'away':\n      return outOfOffice ? presenceOfflineRegular[size] : presenceAwayFilled[size];\n    case 'busy':\n      return outOfOffice ? presenceUnknownRegular[size] : presenceBusyFilled[size];\n    case 'do-not-disturb':\n      return outOfOffice ? presenceDndRegular[size] : presenceDndFilled[size];\n    case 'offline':\n      return presenceOfflineRegular[size];\n    case 'out-of-office':\n      return presenceOofRegular[size];\n    case 'unknown':\n      return presenceUnknownRegular[size];\n  }\n};\n\nconst DEFAULT_STRINGS = {\n  busy: 'busy',\n  'out-of-office': 'out of office',\n  away: 'away',\n  available: 'available',\n  offline: 'offline',\n  'do-not-disturb': 'do not disturb',\n  unknown: 'unknown',\n};\n\n/**\n * Returns the props and state required to render the component\n */\nexport const usePresenceBadge_unstable = (\n  props: PresenceBadgeProps,\n  ref: React.Ref<HTMLElement>,\n): PresenceBadgeState => {\n  const { size = 'medium', status = 'available', outOfOffice = false } = props;\n\n  const statusText = DEFAULT_STRINGS[status];\n  const oofText = props.outOfOffice && props.status !== 'out-of-office' ? ` ${DEFAULT_STRINGS['out-of-office']}` : '';\n\n  const IconElement = iconMap(status, outOfOffice, size);\n\n  const state: PresenceBadgeState = {\n    ...useBadge_unstable(\n      {\n        'aria-label': statusText + oofText,\n        role: 'img',\n        ...props,\n        size,\n        icon: resolveShorthand(props.icon, {\n          defaultProps: {\n            children: IconElement ? <IconElement /> : null,\n          },\n          required: true,\n        }),\n      },\n      ref,\n    ),\n    status,\n    outOfOffice,\n  };\n\n  return state;\n};\n"],"sourceRoot":"../src/"}