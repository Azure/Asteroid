define(["require", "exports", "@fluentui/react-utilities", "react", "scheduler"], function (require, exports, react_utilities_1, React, scheduler_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createContext = void 0;
    var createProvider = function (Original) {
        var Provider = function (props) {
            // Holds an actual "props.value"
            var valueRef = React.useRef(props.value);
            // Used to sync context updates and avoid stale values, can be considered as render/effect counter of Provider.
            var versionRef = React.useRef(0);
            // A stable object, is used to avoid context updates via mutation of its values.
            var contextValue = React.useRef();
            if (!contextValue.current) {
                contextValue.current = {
                    value: valueRef,
                    version: versionRef,
                    listeners: [],
                };
            }
            react_utilities_1.useIsomorphicLayoutEffect(function () {
                valueRef.current = props.value;
                versionRef.current += 1;
                scheduler_1.unstable_runWithPriority(scheduler_1.unstable_NormalPriority, function () {
                    contextValue.current.listeners.forEach(function (listener) {
                        listener([versionRef.current, props.value]);
                    });
                });
            }, [props.value]);
            return React.createElement(Original, { value: contextValue.current }, props.children);
        };
        /* istanbul ignore else */
        if (process.env.NODE_ENV !== 'production') {
            Provider.displayName = 'ContextSelector.Provider';
        }
        return Provider;
    };
    /**
     * @internal
     */
    var createContext = function (defaultValue) {
        // eslint-disable-next-line @fluentui/no-context-default-value
        var context = React.createContext({
            value: { current: defaultValue },
            version: { current: -1 },
            listeners: [],
        });
        context.Provider = createProvider(context.Provider);
        // We don't support Consumer API
        delete context.Consumer;
        return context;
    };
    exports.createContext = createContext;
});
//# sourceMappingURL=createContext.js.map