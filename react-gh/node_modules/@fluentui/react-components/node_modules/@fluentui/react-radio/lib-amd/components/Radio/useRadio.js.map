{"version":3,"file":"useRadio.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-radio/src/components/Radio/useRadio.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CircleFilled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { getPartitionedNativeProps, mergeCallbacks, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { useRadioGroupContext_unstable } from '../../contexts/RadioGroupContext';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nimport type { RadioProps, RadioState } from './Radio.types';\n\n/**\n * Create the state required to render Radio.\n *\n * The returned state can be modified with hooks such as useRadioStyles_unstable,\n * before being passed to renderRadio_unstable.\n *\n * @param props - props from this instance of Radio\n * @param ref - reference to `<input>` element of Radio\n */\nexport const useRadio_unstable = (props: RadioProps, ref: React.Ref<HTMLInputElement>): RadioState => {\n  const nameGroup = useRadioGroupContext_unstable(ctx => ctx.name);\n  const value = useRadioGroupContext_unstable(ctx => ctx.value);\n  const defaultValue = useRadioGroupContext_unstable(ctx => ctx.defaultValue);\n  const disabledGroup = useRadioGroupContext_unstable(ctx => ctx.disabled);\n  const layout = useRadioGroupContext_unstable(ctx => ctx.layout);\n  const requiredGroup = useRadioGroupContext_unstable(ctx => ctx.required);\n\n  const {\n    name = nameGroup,\n    checked = value !== undefined ? value === props.value : undefined,\n    defaultChecked = defaultValue !== undefined ? defaultValue === props.value : undefined,\n    labelPosition = layout === 'horizontal-stacked' ? 'below' : 'after',\n    disabled = disabledGroup,\n    required = requiredGroup,\n    onChange,\n  } = props;\n\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['checked', 'defaultChecked', 'onChange'],\n  });\n\n  const root = resolveShorthand(props.root, {\n    required: true,\n    defaultProps: {\n      ref: useFocusWithin<HTMLSpanElement>(),\n      ...nativeProps.root,\n    },\n  });\n\n  const input = resolveShorthand(props.input, {\n    required: true,\n    defaultProps: {\n      ref,\n      type: 'radio',\n      id: useId('radio-', nativeProps.primary.id),\n      name,\n      checked,\n      defaultChecked,\n      disabled,\n      required,\n      ...nativeProps.primary,\n    },\n  });\n\n  input.onChange = mergeCallbacks(input.onChange, ev => onChange?.(ev, { value: ev.currentTarget.value }));\n\n  const label = resolveShorthand(props.label, {\n    defaultProps: {\n      htmlFor: input.id,\n      disabled,\n    },\n  });\n\n  const indicator = resolveShorthand(props.indicator, {\n    required: true,\n    defaultProps: {\n      'aria-hidden': true,\n      children: <CircleFilled />,\n    },\n  });\n\n  return {\n    labelPosition,\n    components: {\n      root: 'span',\n      input: 'input',\n      label: Label,\n      indicator: 'div',\n    },\n    root,\n    input,\n    label,\n    indicator,\n  };\n};\n"]}