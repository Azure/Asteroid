define(["require", "exports", "tslib", "react", "@fluentui/react-icons", "@fluentui/react-label", "@fluentui/react-utilities", "../../contexts/RadioGroupContext", "@fluentui/react-tabster"], function (require, exports, tslib_1, React, react_icons_1, react_label_1, react_utilities_1, RadioGroupContext_1, react_tabster_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useRadio_unstable = void 0;
    /**
     * Create the state required to render Radio.
     *
     * The returned state can be modified with hooks such as useRadioStyles_unstable,
     * before being passed to renderRadio_unstable.
     *
     * @param props - props from this instance of Radio
     * @param ref - reference to `<input>` element of Radio
     */
    var useRadio_unstable = function (props, ref) {
        var nameGroup = RadioGroupContext_1.useRadioGroupContext_unstable(function (ctx) { return ctx.name; });
        var value = RadioGroupContext_1.useRadioGroupContext_unstable(function (ctx) { return ctx.value; });
        var defaultValue = RadioGroupContext_1.useRadioGroupContext_unstable(function (ctx) { return ctx.defaultValue; });
        var disabledGroup = RadioGroupContext_1.useRadioGroupContext_unstable(function (ctx) { return ctx.disabled; });
        var layout = RadioGroupContext_1.useRadioGroupContext_unstable(function (ctx) { return ctx.layout; });
        var requiredGroup = RadioGroupContext_1.useRadioGroupContext_unstable(function (ctx) { return ctx.required; });
        var _a = props.name, name = _a === void 0 ? nameGroup : _a, _b = props.checked, checked = _b === void 0 ? value !== undefined ? value === props.value : undefined : _b, _c = props.defaultChecked, defaultChecked = _c === void 0 ? defaultValue !== undefined ? defaultValue === props.value : undefined : _c, _d = props.labelPosition, labelPosition = _d === void 0 ? layout === 'horizontal-stacked' ? 'below' : 'after' : _d, _e = props.disabled, disabled = _e === void 0 ? disabledGroup : _e, _f = props.required, required = _f === void 0 ? requiredGroup : _f, onChange = props.onChange;
        var nativeProps = react_utilities_1.getPartitionedNativeProps({
            props: props,
            primarySlotTagName: 'input',
            excludedPropNames: ['checked', 'defaultChecked', 'onChange'],
        });
        var root = react_utilities_1.resolveShorthand(props.root, {
            required: true,
            defaultProps: tslib_1.__assign({ ref: react_tabster_1.useFocusWithin() }, nativeProps.root),
        });
        var input = react_utilities_1.resolveShorthand(props.input, {
            required: true,
            defaultProps: tslib_1.__assign({ ref: ref, type: 'radio', id: react_utilities_1.useId('radio-', nativeProps.primary.id), name: name, checked: checked, defaultChecked: defaultChecked, disabled: disabled, required: required }, nativeProps.primary),
        });
        input.onChange = react_utilities_1.mergeCallbacks(input.onChange, function (ev) { return onChange === null || onChange === void 0 ? void 0 : onChange(ev, { value: ev.currentTarget.value }); });
        var label = react_utilities_1.resolveShorthand(props.label, {
            defaultProps: {
                htmlFor: input.id,
                disabled: disabled,
            },
        });
        var indicator = react_utilities_1.resolveShorthand(props.indicator, {
            required: true,
            defaultProps: {
                'aria-hidden': true,
                children: React.createElement(react_icons_1.CircleFilled, null),
            },
        });
        return {
            labelPosition: labelPosition,
            components: {
                root: 'span',
                input: 'input',
                label: react_label_1.Label,
                indicator: 'div',
            },
            root: root,
            input: input,
            label: label,
            indicator: indicator,
        };
    };
    exports.useRadio_unstable = useRadio_unstable;
});
//# sourceMappingURL=useRadio.js.map