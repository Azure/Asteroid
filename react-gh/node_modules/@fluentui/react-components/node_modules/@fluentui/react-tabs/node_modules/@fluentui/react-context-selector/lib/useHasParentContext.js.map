{"version":3,"sources":["packages/react-components/react-context-selector/src/useHasParentContext.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAGA;;;;;;;AAOG;;AACH,OAAM,SAAU,mBAAV,CAAqC,OAArC,EAA4D;EAChE,MAAM,YAAY,GAAG,KAAK,CAAC,UAAN,CAAkB,OAAlB,CAArB;;EAEA,IAAI,YAAY,CAAC,OAAjB,EAA0B;IACxB,OAAO,YAAY,CAAC,OAAb,CAAqB,OAArB,KAAiC,CAAC,CAAzC;EACD;;EAED,OAAO,KAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Context, ContextValue } from './types';\n\n/**\n * @internal\n * Utility hook for contexts created by react-context-selector to determine if a parent context exists\n * WARNING: This hook will not work for native React contexts\n *\n * @param context - context created by react-context-selector\n * @returns whether the hook is wrapped by a parent context\n */\nexport function useHasParentContext<Value>(context: Context<Value>) {\n  const contextValue = React.useContext((context as unknown) as Context<ContextValue<Value>>);\n\n  if (contextValue.version) {\n    return contextValue.version.current !== -1;\n  }\n\n  return false;\n}\n"],"sourceRoot":"../src/"}