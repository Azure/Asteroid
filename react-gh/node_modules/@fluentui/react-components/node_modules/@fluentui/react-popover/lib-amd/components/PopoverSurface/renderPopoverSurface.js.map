{"version":3,"file":"renderPopoverSurface.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-popover/src/components/PopoverSurface/renderPopoverSurface.tsx"],"names":[],"mappings":";;;;IAKA;;OAEG;IACI,IAAM,6BAA6B,GAAG,UAAC,KAA0B;QAChE,IAAA,KAAuB,0BAAQ,CAAsB,KAAK,CAAC,EAAzD,KAAK,WAAA,EAAE,SAAS,eAAyC,CAAC;QAElE,IAAM,OAAO,GAAG,CACd,oBAAC,KAAK,CAAC,IAAI,uBAAK,SAAS,CAAC,IAAI;YAC3B,KAAK,CAAC,SAAS,IAAI,6BAAK,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,cAAc,GAAI;YAChF,SAAS,CAAC,IAAI,CAAC,QAAQ,CACb,CACd,CAAC;QAEF,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,OAAO,OAAO,CAAC;SAChB;QAED,OAAO,oBAAC,qBAAM,IAAC,SAAS,EAAE,KAAK,CAAC,SAAS,IAAG,OAAO,CAAU,CAAC;IAChE,CAAC,CAAC;IAfW,QAAA,6BAA6B,iCAexC","sourcesContent":["import * as React from 'react';\nimport { Portal } from '@fluentui/react-portal';\nimport { getSlots } from '@fluentui/react-utilities';\nimport type { PopoverSurfaceSlots, PopoverSurfaceState } from './PopoverSurface.types';\n\n/**\n * Render the final JSX of PopoverSurface\n */\nexport const renderPopoverSurface_unstable = (state: PopoverSurfaceState) => {\n  const { slots, slotProps } = getSlots<PopoverSurfaceSlots>(state);\n\n  const surface = (\n    <slots.root {...slotProps.root}>\n      {state.withArrow && <div ref={state.arrowRef} className={state.arrowClassName} />}\n      {slotProps.root.children}\n    </slots.root>\n  );\n\n  if (state.inline) {\n    return surface;\n  }\n\n  return <Portal mountNode={state.mountNode}>{surface}</Portal>;\n};\n"]}