{"version":3,"sources":["packages/react-components/react-context-selector/src/createContext.ts"],"names":[],"mappings":"AAAA,SAAS,yBAAT,QAA0C,2BAA1C;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,uBAAuB,IAAI,cAApC,EAAoD,wBAAwB,IAAI,eAAhF,QAAuG,WAAvG;;AAIA,MAAM,cAAc,GAAW,QAAR,IAAyD;EAC9E,MAAM,QAAQ,GAAyC,KAAK,IAAG;IAC7D;IACA,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAN,CAAa,KAAK,CAAC,KAAnB,CAAjB,CAF6D,CAG7D;;IACA,MAAM,UAAU,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,CAAnB,CAJ6D,CAM7D;;IACA,MAAM,YAAY,GAAG,KAAK,CAAC,MAAN,EAArB;;IAEA,IAAI,CAAC,YAAY,CAAC,OAAlB,EAA2B;MACzB,YAAY,CAAC,OAAb,GAAuB;QACrB,KAAK,EAAE,QADc;QAErB,OAAO,EAAE,UAFY;QAGrB,SAAS,EAAE;MAHU,CAAvB;IAKD;;IAED,yBAAyB,CAAC,MAAK;MAC7B,QAAQ,CAAC,OAAT,GAAmB,KAAK,CAAC,KAAzB;MACA,UAAU,CAAC,OAAX,IAAsB,CAAtB;MAEA,eAAe,CAAC,cAAD,EAAiB,MAAK;QAClC,YAAY,CAAC,OAAb,CAA6C,SAA7C,CAAuD,OAAvD,CAA+D,QAAQ,IAAG;UACzE,QAAQ,CAAC,CAAC,UAAU,CAAC,OAAZ,EAAqB,KAAK,CAAC,KAA3B,CAAD,CAAR;QACD,CAFA;MAGF,CAJc,CAAf;IAKD,CATwB,EAStB,CAAC,KAAK,CAAC,KAAP,CATsB,CAAzB;IAWA,oBAAO,KAAK,CAAC,aAAN,CAAoB,QAApB,EAA8B;MAAE,KAAK,EAAE,YAAY,CAAC;IAAtB,CAA9B,EAA+D,KAAK,CAAC,QAArE,CAAP;EACD,CA7BD;EA+BA;;;EACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,QAAQ,CAAC,WAAT,GAAuB,0BAAvB;EACD;;EAED,OAAQ,QAAR;AACD,CAtCD;AAwCA;;AAEG;;;AACH,OAAO,MAAM,aAAa,GAAW,YAAR,IAA+C;EAC1E;EACA,MAAM,OAAO,gBAAG,KAAK,CAAC,aAAN,CAAyC;IACvD,KAAK,EAAE;MAAE,OAAO,EAAE;IAAX,CADgD;IAEvD,OAAO,EAAE;MAAE,OAAO,EAAE,CAAC;IAAZ,CAF8C;IAGvD,SAAS,EAAE;EAH4C,CAAzC,CAAhB;EAMA,OAAO,CAAC,QAAR,GAAmB,cAAc,CAAQ,OAAO,CAAC,QAAhB,CAAjC,CAR0E,CAU1E;;EACA,OAAS,OAAsC,CAAC,QAAhD;EAEA,OAAQ,OAAR;AACD,CAdM","sourcesContent":["import { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { unstable_NormalPriority as NormalPriority, unstable_runWithPriority as runWithPriority } from 'scheduler';\n\nimport { Context, ContextValue } from './types';\n\nconst createProvider = <Value>(Original: React.Provider<ContextValue<Value>>) => {\n  const Provider: React.FC<React.ProviderProps<Value>> = props => {\n    // Holds an actual \"props.value\"\n    const valueRef = React.useRef(props.value);\n    // Used to sync context updates and avoid stale values, can be considered as render/effect counter of Provider.\n    const versionRef = React.useRef(0);\n\n    // A stable object, is used to avoid context updates via mutation of its values.\n    const contextValue = React.useRef<ContextValue<Value>>();\n\n    if (!contextValue.current) {\n      contextValue.current = {\n        value: valueRef,\n        version: versionRef,\n        listeners: [],\n      };\n    }\n\n    useIsomorphicLayoutEffect(() => {\n      valueRef.current = props.value;\n      versionRef.current += 1;\n\n      runWithPriority(NormalPriority, () => {\n        (contextValue.current as ContextValue<Value>).listeners.forEach(listener => {\n          listener([versionRef.current, props.value]);\n        });\n      });\n    }, [props.value]);\n\n    return React.createElement(Original, { value: contextValue.current }, props.children);\n  };\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    Provider.displayName = 'ContextSelector.Provider';\n  }\n\n  return (Provider as unknown) as React.Provider<ContextValue<Value>>;\n};\n\n/**\n * @internal\n */\nexport const createContext = <Value>(defaultValue: Value): Context<Value> => {\n  // eslint-disable-next-line @fluentui/no-context-default-value\n  const context = React.createContext<ContextValue<Value>>({\n    value: { current: defaultValue },\n    version: { current: -1 },\n    listeners: [],\n  });\n\n  context.Provider = createProvider<Value>(context.Provider);\n\n  // We don't support Consumer API\n  delete ((context as unknown) as Context<Value>).Consumer;\n\n  return (context as unknown) as Context<Value>;\n};\n"],"sourceRoot":"../src/"}