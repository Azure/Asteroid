{"version":3,"file":"useAccordion.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-accordion/src/components/Accordion/useAccordion.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport type { AccordionProps, AccordionState, AccordionToggleData, AccordionToggleEvent } from './Accordion.types';\nimport type { AccordionItemValue } from '../AccordionItem/AccordionItem.types';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\n\n/**\n * Returns the props and state required to render the component\n * @param props - Accordion properties\n * @param ref - reference to root HTMLElement of Accordion\n */\nexport const useAccordion_unstable = (props: AccordionProps, ref: React.Ref<HTMLElement>): AccordionState => {\n  const {\n    openItems: controlledOpenItems,\n    defaultOpenItems,\n    multiple = false,\n    collapsible = false,\n    onToggle,\n    navigation,\n  } = props;\n  const [openItems, setOpenItems] = useControllableState({\n    state: React.useMemo(() => normalizeValues(controlledOpenItems), [controlledOpenItems]),\n    defaultState: () => initializeUncontrolledOpenItems({ defaultOpenItems, multiple }),\n    initialState: [],\n  });\n\n  const arrowNavigationProps = useArrowNavigationGroup({\n    circular: navigation === 'circular',\n    tabbable: true,\n  });\n\n  const requestToggle = useEventCallback((event: AccordionToggleEvent, data: AccordionToggleData) => {\n    onToggle?.(event, data);\n    setOpenItems(previousOpenItems => updateOpenItems(data.value, previousOpenItems, multiple, collapsible));\n  });\n\n  return {\n    collapsible,\n    navigation,\n    openItems,\n    requestToggle,\n    components: {\n      root: 'div',\n    },\n    root: getNativeElementProps('div', {\n      ...props,\n      ...(navigation ? arrowNavigationProps : {}),\n      ref,\n    }),\n  };\n};\n\n/**\n * Initial value for the uncontrolled case of the list of open indexes\n */\nfunction initializeUncontrolledOpenItems({\n  defaultOpenItems,\n  multiple,\n}: Pick<AccordionProps, 'defaultOpenItems' | 'multiple'>): AccordionItemValue[] {\n  if (defaultOpenItems !== undefined) {\n    if (Array.isArray(defaultOpenItems)) {\n      return multiple ? defaultOpenItems : [defaultOpenItems[0]];\n    }\n    return [defaultOpenItems];\n  }\n  return [];\n}\n\n/**\n * Updates the list of open indexes based on an index that changes\n * @param value - the index that will change\n * @param previousOpenItems - list of current open indexes\n * @param multiple - if Accordion support multiple Panels opened at the same time\n * @param collapsible - if Accordion support multiple Panels closed at the same time\n */\nfunction updateOpenItems(\n  value: AccordionItemValue,\n  previousOpenItems: AccordionItemValue[],\n  multiple: boolean,\n  collapsible: boolean,\n) {\n  if (multiple) {\n    if (previousOpenItems.includes(value)) {\n      if (previousOpenItems.length > 1 || collapsible) {\n        return previousOpenItems.filter(i => i !== value);\n      }\n    } else {\n      return [...previousOpenItems, value].sort();\n    }\n  } else {\n    return previousOpenItems[0] === value && collapsible ? [] : [value];\n  }\n  return previousOpenItems;\n}\n\n/**\n * Normalizes Accordion index into an array of indexes\n */\nfunction normalizeValues(index?: AccordionItemValue | AccordionItemValue[]): AccordionItemValue[] | undefined {\n  if (index === undefined) {\n    return undefined;\n  }\n  return Array.isArray(index) ? index : [index];\n}\n"]}