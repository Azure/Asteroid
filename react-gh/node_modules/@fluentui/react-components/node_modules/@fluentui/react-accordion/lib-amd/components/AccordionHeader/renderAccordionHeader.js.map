{"version":3,"file":"renderAccordionHeader.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-accordion/src/components/AccordionHeader/renderAccordionHeader.tsx"],"names":[],"mappings":";;;;IAKA;;OAEG;IACI,IAAM,8BAA8B,GAAG,UAC5C,KAA2B,EAC3B,aAA2C;QAErC,IAAA,KAAuB,0BAAQ,CAAuB,KAAK,CAAC,EAA1D,KAAK,WAAA,EAAE,SAAS,eAA0C,CAAC;QAEnE,OAAO,CACL,oBAAC,+CAAsB,CAAC,QAAQ,IAAC,KAAK,EAAE,aAAa,CAAC,eAAe;YACnE,oBAAC,KAAK,CAAC,IAAI,uBAAK,SAAS,CAAC,IAAI;gBAC5B,oBAAC,KAAK,CAAC,MAAM,uBAAK,SAAS,CAAC,MAAM;oBAC/B,KAAK,CAAC,kBAAkB,KAAK,OAAO,IAAI,oBAAC,KAAK,CAAC,UAAU,uBAAK,SAAS,CAAC,UAAU,EAAI;oBACtF,KAAK,CAAC,IAAI,IAAI,oBAAC,KAAK,CAAC,IAAI,uBAAK,SAAS,CAAC,IAAI,EAAI;oBAChD,SAAS,CAAC,IAAI,CAAC,QAAQ;oBACvB,KAAK,CAAC,kBAAkB,KAAK,KAAK,IAAI,oBAAC,KAAK,CAAC,UAAU,uBAAK,SAAS,CAAC,UAAU,EAAI,CACxE,CACJ,CACmB,CACnC,CAAC;IACJ,CAAC,CAAC;IAlBW,QAAA,8BAA8B,kCAkBzC","sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\nimport { AccordionHeaderContext } from './AccordionHeaderContext';\nimport type { AccordionHeaderState, AccordionHeaderSlots, AccordionHeaderContextValues } from './AccordionHeader.types';\n\n/**\n * Function that renders the final JSX of the component\n */\nexport const renderAccordionHeader_unstable = (\n  state: AccordionHeaderState,\n  contextValues: AccordionHeaderContextValues,\n) => {\n  const { slots, slotProps } = getSlots<AccordionHeaderSlots>(state);\n\n  return (\n    <AccordionHeaderContext.Provider value={contextValues.accordionHeader}>\n      <slots.root {...slotProps.root}>\n        <slots.button {...slotProps.button}>\n          {state.expandIconPosition === 'start' && <slots.expandIcon {...slotProps.expandIcon} />}\n          {slots.icon && <slots.icon {...slotProps.icon} />}\n          {slotProps.root.children}\n          {state.expandIconPosition === 'end' && <slots.expandIcon {...slotProps.expandIcon} />}\n        </slots.button>\n      </slots.root>\n    </AccordionHeaderContext.Provider>\n  );\n};\n"]}