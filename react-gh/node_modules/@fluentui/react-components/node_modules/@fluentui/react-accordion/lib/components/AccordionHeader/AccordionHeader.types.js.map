{"version":3,"file":"AccordionHeader.types.js","sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionHeader/AccordionHeader.types.ts"],"names":[],"mappings":"","sourcesContent":["import type { ComponentProps, ComponentState, Slot } from '@fluentui/react-utilities';\nimport type { ARIAButtonSlotProps } from '@fluentui/react-aria';\n\nexport type AccordionHeaderSize = 'small' | 'medium' | 'large' | 'extra-large';\nexport type AccordionHeaderExpandIconPosition = 'start' | 'end';\n\nexport type AccordionHeaderContextValue = Required<Pick<AccordionHeaderProps, 'expandIconPosition' | 'size'>> & {\n  disabled: boolean;\n  open: boolean;\n};\n\nexport type AccordionHeaderContextValues = {\n  accordionHeader: AccordionHeaderContextValue;\n};\n\nexport type AccordionHeaderSlots = {\n  /**\n   * The element wrapping the button. By default this is a div, but can be a heading.\n   */\n  root: Slot<'div', 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'>;\n  /**\n   * The component to be used as button in heading\n   */\n  button: NonNullable<Slot<ARIAButtonSlotProps<'a'>>>;\n  /**\n   * Expand icon slot rendered before (or after) children content in heading.\n   */\n  expandIcon: Slot<'span'>;\n  /**\n   * Expand icon slot rendered before (or after) children content in heading.\n   */\n  icon?: Slot<'div'>;\n};\n\nexport type AccordionHeaderProps = ComponentProps<Partial<AccordionHeaderSlots>> & {\n  /**\n   * The position of the expand  icon slot in heading.\n   */\n  expandIconPosition?: AccordionHeaderExpandIconPosition;\n\n  /**\n   * Indicates if the AccordionHeader should be rendered inline.\n   */\n  inline?: boolean;\n\n  /**\n   * Size of spacing in the heading.\n   */\n  size?: AccordionHeaderSize;\n};\n\nexport type AccordionHeaderState = ComponentState<AccordionHeaderSlots> &\n  Required<Pick<AccordionHeaderProps, 'inline'>> &\n  AccordionHeaderContextValue;\n"]}