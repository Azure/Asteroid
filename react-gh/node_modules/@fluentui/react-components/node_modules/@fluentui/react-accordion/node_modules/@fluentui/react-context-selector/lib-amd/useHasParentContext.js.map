{"version":3,"file":"useHasParentContext.js","sourceRoot":"","sources":["../../../../../../../packages/react-components/react-context-selector/src/useHasParentContext.ts"],"names":[],"mappings":";;;;IAGA;;;;;;;OAOG;IACH,SAAgB,mBAAmB,CAAQ,OAAuB;QAChE,IAAM,YAAY,GAAG,KAAK,CAAC,UAAU,CAAE,OAAmD,CAAC,CAAC;QAE5F,IAAI,YAAY,CAAC,OAAO,EAAE;YACxB,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;SAC5C;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IARD,kDAQC","sourcesContent":["import * as React from 'react';\nimport { Context, ContextValue } from './types';\n\n/**\n * @internal\n * Utility hook for contexts created by react-context-selector to determine if a parent context exists\n * WARNING: This hook will not work for native React contexts\n *\n * @param context - context created by react-context-selector\n * @returns whether the hook is wrapped by a parent context\n */\nexport function useHasParentContext<Value>(context: Context<Value>) {\n  const contextValue = React.useContext((context as unknown) as Context<ContextValue<Value>>);\n\n  if (contextValue.version) {\n    return contextValue.version.current !== -1;\n  }\n\n  return false;\n}\n"]}