{"version":3,"sources":["packages/react-components/react-accordion/src/components/Accordion/AccordionContext.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,wBAAA,gBAAA,OAAA,CAAA,kCAAA,CAAA;;AAIa,OAAA,CAAA,gBAAA,gBAAmD,wBAAA,CAAA,aAAA,CAC9D,SAD8D,CAAnD;AAIb,MAAM,4BAA4B,GAA0B;EAC1D,SAAS,EAAE,EAD+C;EAE1D,WAAW,EAAE,KAF6C;;EAG1D,aAAa,GAAA;IACX;EACD;;AALyD,CAA5D;AAQa,OAAA,CAAA,iBAAA,GAAoB,OAAA,CAAA,gBAAA,CAAiB,QAArC;;AACN,MAAM,4BAA4B,GAAO,QAAJ,IAC1C,wBAAA,CAAA,kBAAA,CAAmB,OAAA,CAAA,gBAAnB,EAAqC,CAAC,GAAG,GAAG,4BAAP,KAAwC,QAAQ,CAAC,GAAD,CAArF,CADK;;AAAM,OAAA,CAAA,4BAAA,GAA4B,4BAA5B","sourcesContent":["import { createContext, ContextSelector, useContextSelector } from '@fluentui/react-context-selector';\nimport type { Context } from '@fluentui/react-context-selector';\nimport type { AccordionContextValue } from './Accordion.types';\n\nexport const AccordionContext: Context<AccordionContextValue> = createContext<AccordionContextValue | undefined>(\n  undefined,\n) as Context<AccordionContextValue>;\n\nconst accordionContextDefaultValue: AccordionContextValue = {\n  openItems: [],\n  collapsible: false,\n  requestToggle() {\n    /* noop */\n  },\n};\n\nexport const AccordionProvider = AccordionContext.Provider;\nexport const useAccordionContext_unstable = <T>(selector: ContextSelector<AccordionContextValue, T>): T =>\n  useContextSelector(AccordionContext, (ctx = accordionContextDefaultValue) => selector(ctx));\n"],"sourceRoot":"../src/"}