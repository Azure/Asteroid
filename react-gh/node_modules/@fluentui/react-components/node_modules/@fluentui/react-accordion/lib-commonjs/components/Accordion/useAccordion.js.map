{"version":3,"sources":["packages/react-components/react-accordion/src/components/Accordion/useAccordion.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport type { AccordionProps, AccordionState, AccordionToggleData, AccordionToggleEvent } from './Accordion.types';\nimport type { AccordionItemValue } from '../AccordionItem/AccordionItem.types';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\n\n/**\n * Returns the props and state required to render the component\n * @param props - Accordion properties\n * @param ref - reference to root HTMLElement of Accordion\n */\nexport const useAccordion_unstable = (props: AccordionProps, ref: React.Ref<HTMLElement>): AccordionState => {\n  const {\n    openItems: controlledOpenItems,\n    defaultOpenItems,\n    multiple = false,\n    collapsible = false,\n    onToggle,\n    navigation,\n  } = props;\n  const [openItems, setOpenItems] = useControllableState({\n    state: React.useMemo(() => normalizeValues(controlledOpenItems), [controlledOpenItems]),\n    defaultState: () => initializeUncontrolledOpenItems({ defaultOpenItems, multiple }),\n    initialState: [],\n  });\n\n  const arrowNavigationProps = useArrowNavigationGroup({\n    circular: navigation === 'circular',\n    tabbable: true,\n  });\n\n  const requestToggle = useEventCallback((event: AccordionToggleEvent, data: AccordionToggleData) => {\n    onToggle?.(event, data);\n    setOpenItems(previousOpenItems => updateOpenItems(data.value, previousOpenItems, multiple, collapsible));\n  });\n\n  return {\n    collapsible,\n    navigation,\n    openItems,\n    requestToggle,\n    components: {\n      root: 'div',\n    },\n    root: getNativeElementProps('div', {\n      ...props,\n      ...(navigation ? arrowNavigationProps : {}),\n      ref,\n    }),\n  };\n};\n\n/**\n * Initial value for the uncontrolled case of the list of open indexes\n */\nfunction initializeUncontrolledOpenItems({\n  defaultOpenItems,\n  multiple,\n}: Pick<AccordionProps, 'defaultOpenItems' | 'multiple'>): AccordionItemValue[] {\n  if (defaultOpenItems !== undefined) {\n    if (Array.isArray(defaultOpenItems)) {\n      return multiple ? defaultOpenItems : [defaultOpenItems[0]];\n    }\n    return [defaultOpenItems];\n  }\n  return [];\n}\n\n/**\n * Updates the list of open indexes based on an index that changes\n * @param value - the index that will change\n * @param previousOpenItems - list of current open indexes\n * @param multiple - if Accordion support multiple Panels opened at the same time\n * @param collapsible - if Accordion support multiple Panels closed at the same time\n */\nfunction updateOpenItems(\n  value: AccordionItemValue,\n  previousOpenItems: AccordionItemValue[],\n  multiple: boolean,\n  collapsible: boolean,\n) {\n  if (multiple) {\n    if (previousOpenItems.includes(value)) {\n      if (previousOpenItems.length > 1 || collapsible) {\n        return previousOpenItems.filter(i => i !== value);\n      }\n    } else {\n      return [...previousOpenItems, value].sort();\n    }\n  } else {\n    return previousOpenItems[0] === value && collapsible ? [] : [value];\n  }\n  return previousOpenItems;\n}\n\n/**\n * Normalizes Accordion index into an array of indexes\n */\nfunction normalizeValues(index?: AccordionItemValue | AccordionItemValue[]): AccordionItemValue[] | undefined {\n  if (index === undefined) {\n    return undefined;\n  }\n  return Array.isArray(index) ? index : [index];\n}\n"],"sourceRoot":"../src/"}