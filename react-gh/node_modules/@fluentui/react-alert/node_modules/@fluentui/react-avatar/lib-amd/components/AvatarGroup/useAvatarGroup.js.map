{"version":3,"file":"useAvatarGroup.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-avatar/src/components/AvatarGroup/useAvatarGroup.tsx"],"names":[],"mappings":";;;;IAIA;;;;;;;;OAQG;IACI,IAAM,uBAAuB,GAAG,UAAC,KAAuB,EAAE,GAA2B;QAClF,IAAA,KAAqD,KAAK,OAAzC,EAAjB,MAAM,mBAAG,QAAQ,KAAA,EAAE,KAAkC,KAAK,KAAV,EAA7B,IAAI,mBAAG,8BAAsB,KAAA,CAAW;QAEnE,IAAM,IAAI,GAAG,uCAAqB,CAChC,KAAK,sCAEH,IAAI,EAAE,OAAO,IACV,KAAK,KACR,GAAG,KAAA,KAEL,CAAC,MAAM,CAAC,CACT,CAAC;QAEF,OAAO;YACL,MAAM,QAAA;YACN,IAAI,MAAA;YACJ,UAAU,EAAE;gBACV,IAAI,EAAE,KAAK;aACZ;YACD,IAAI,MAAA;SACL,CAAC;IACJ,CAAC,CAAC;IArBW,QAAA,uBAAuB,2BAqBlC;IAEW,QAAA,sBAAsB,GAAG,EAAE,CAAC","sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { AvatarGroupProps, AvatarGroupState } from './AvatarGroup.types';\n\n/**\n * Create the state required to render AvatarGroup.\n *\n * The returned state can be modified with hooks such as useAvatarGroupStyles_unstable,\n * before being passed to renderAvatarGroup_unstable.\n *\n * @param props - props from this instance of AvatarGroup\n * @param ref - reference to root HTMLElement of AvatarGroup\n */\nexport const useAvatarGroup_unstable = (props: AvatarGroupProps, ref: React.Ref<HTMLElement>): AvatarGroupState => {\n  const { layout = 'spread', size = defaultAvatarGroupSize } = props;\n\n  const root = getNativeElementProps(\n    'div',\n    {\n      role: 'group',\n      ...props,\n      ref,\n    },\n    ['size'],\n  );\n\n  return {\n    layout,\n    size,\n    components: {\n      root: 'div',\n    },\n    root,\n  };\n};\n\nexport const defaultAvatarGroupSize = 32;\n"]}