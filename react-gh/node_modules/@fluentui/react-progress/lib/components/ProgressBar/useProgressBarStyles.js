import { __styles, mergeClasses, shorthands } from '@griffel/react';
import { tokens } from '@fluentui/react-theme';
import { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';
export const progressBarClassNames = {
  root: 'fui-ProgressBar',
  bar: 'fui-ProgressBar__bar'
}; // If the percentComplete is near 0, don't animate it.
// This prevents animations on reset to 0 scenarios.

const ZERO_THRESHOLD = 0.01;
const barThicknessValues = {
  medium: '2px',
  large: '4px'
};
const indeterminateProgressBar = {
  '0%': {
    left: '0% /* @noflip */'
  },
  '100%': {
    left: '100% /* @noflip */'
  }
};
const indeterminateProgressBarRTL = {
  '100%': {
    right: '-100% /* @noflip */'
  },
  '0%': {
    right: '100% /* @noflip */'
  }
};
/**
 * Styles for the root slot
 */

const useRootStyles = /*#__PURE__*/__styles({
  "root": {
    "mc9l5x": "ftgm304",
    "De3pzq": "f18f03hv",
    "Bdqf98w": "fhb5wj7",
    "B68tc82": "f1p9o1ba",
    "Bmxbyg5": "f1sil6mw",
    "I5kgcl": "fs8b23g",
    "tu2nte": "f1mcb20s",
    "y0r1ed": "fek7wd8"
  },
  "rounded": {
    "Bbmb7ep": ["f1aa9q02", "f16jpd5f"],
    "Beyfa6y": ["f16jpd5f", "f1aa9q02"],
    "B7oj6ja": ["f1jar5jt", "fyu767a"],
    "Btl43ni": ["fyu767a", "f1jar5jt"]
  },
  "rectangular": {
    "Bbmb7ep": ["fzi6hpg", "fyowgf4"],
    "Beyfa6y": ["fyowgf4", "fzi6hpg"],
    "B7oj6ja": ["f3fg2lr", "f13av6d4"],
    "Btl43ni": ["f13av6d4", "f3fg2lr"]
  },
  "medium": {
    "Bqenvij": "f4t8t6x"
  },
  "large": {
    "Bqenvij": "f6ywr7j"
  }
}, {
  "d": [".ftgm304{display:block;}", ".f18f03hv{background-color:var(--colorNeutralBackground6);}", ".fhb5wj7{justify-self:stretch;}", ".f1p9o1ba{overflow-x:hidden;}", ".f1sil6mw{overflow-y:hidden;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".fzi6hpg{border-bottom-right-radius:var(--borderRadiusNone);}", ".fyowgf4{border-bottom-left-radius:var(--borderRadiusNone);}", ".f3fg2lr{border-top-right-radius:var(--borderRadiusNone);}", ".f13av6d4{border-top-left-radius:var(--borderRadiusNone);}", ".f4t8t6x{height:2px;}", ".f6ywr7j{height:4px;}"],
  "m": [["@media screen and (forced-colors: active){.fs8b23g{border-bottom-width:1px;}}", {
    "m": "screen and (forced-colors: active)"
  }], ["@media screen and (forced-colors: active){.f1mcb20s{border-bottom-style:solid;}}", {
    "m": "screen and (forced-colors: active)"
  }], ["@media screen and (forced-colors: active){.fek7wd8{border-bottom-color:CanvasText;}}", {
    "m": "screen and (forced-colors: active)"
  }]]
});
/**
 * Styles for the ProgressBar bar
 */


const useBarStyles = /*#__PURE__*/__styles({
  "base": {
    "De3pzq": "ftywsgz",
    "Bpep1pd": "f1neahkh",
    "Bbmb7ep": ["f1d9uwra", "fzibvwi"],
    "Beyfa6y": ["fzibvwi", "f1d9uwra"],
    "B7oj6ja": ["fuoumxm", "f1vtqnvc"],
    "Btl43ni": ["f1vtqnvc", "fuoumxm"]
  },
  "medium": {
    "Bqenvij": "f4t8t6x"
  },
  "large": {
    "Bqenvij": "f6ywr7j"
  },
  "nonZeroDeterminate": {
    "Bmy1vo4": "fjt6zfz",
    "B3o57yi": "f1wofebd",
    "Bkqvd7p": "fv71qf3"
  },
  "indeterminate": {
    "B2u0y6b": "fa0wk36",
    "qhf8xq": "f10pi13n",
    "Bcmaq0h": ["fpo0yib", "f1u5hf6c"],
    "Bv12yb3": "f1h4fm7e",
    "vin17d": "f1a27w2r",
    "w3vfg9": "f1cpbl36",
    "Gqtpxc": "f4akx1t",
    "B3vm3ge": "f18p5put"
  },
  "rtl": {
    "Bv12yb3": "fjhwsai"
  },
  "error": {
    "De3pzq": "fdl5y0r"
  },
  "warning": {
    "De3pzq": "f1s438gw"
  },
  "success": {
    "De3pzq": "flxk52p"
  }
}, {
  "d": [".ftywsgz{background-color:var(--colorCompoundBrandBackground);}", ".f1d9uwra{border-bottom-right-radius:inherit;}", ".fzibvwi{border-bottom-left-radius:inherit;}", ".fuoumxm{border-top-right-radius:inherit;}", ".f1vtqnvc{border-top-left-radius:inherit;}", ".f4t8t6x{height:2px;}", ".f6ywr7j{height:4px;}", ".fjt6zfz{transition-property:width;}", ".f1wofebd{transition-duration:0.3s;}", ".fv71qf3{transition-timing-function:ease;}", ".fa0wk36{max-width:33%;}", ".f10pi13n{position:relative;}", ".fpo0yib{background-image:linear-gradient(\n      to right,\n      var(--colorNeutralBackground6) 0%,\n      var(--colorTransparentBackground) 50%,\n      var(--colorNeutralBackground6) 100%\n    );}", ".f1u5hf6c{background-image:linear-gradient(\n      to left,\n      var(--colorNeutralBackground6) 0%,\n      var(--colorTransparentBackground) 50%,\n      var(--colorNeutralBackground6) 100%\n    );}", ".f1h4fm7e{-webkit-animation-name:fd3k50f;animation-name:fd3k50f;}", ".f1a27w2r{-webkit-animation-duration:3s;animation-duration:3s;}", ".f1cpbl36{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;}", ".fjhwsai{-webkit-animation-name:f1kx06uz;animation-name:f1kx06uz;}", ".fdl5y0r{background-color:var(--colorPaletteRedBackground3);}", ".f1s438gw{background-color:var(--colorPaletteDarkOrangeBackground3);}", ".flxk52p{background-color:var(--colorPaletteGreenBackground3);}"],
  "m": [["@media screen and (forced-colors: active){.f1neahkh{background-color:Highlight;}}", {
    "m": "screen and (forced-colors: active)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f4akx1t{-webkit-animation-duration:0.01ms;animation-duration:0.01ms;}}", {
    "m": "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f18p5put{-webkit-animation-iteration-count:1;animation-iteration-count:1;}}", {
    "m": "screen and (prefers-reduced-motion: reduce)"
  }]],
  "k": ["@-webkit-keyframes fd3k50f{0%{left:0%;}100%{left:100%;}}", "@keyframes fd3k50f{0%{left:0%;}100%{left:100%;}}", "@-webkit-keyframes f1kx06uz{100%{right:-100%;}0%{right:100%;}}", "@keyframes f1kx06uz{100%{right:-100%;}0%{right:100%;}}"]
});
/**
 * Apply styling to the ProgressBar slots based on the state
 */


export const useProgressBarStyles_unstable = state => {
  const {
    max,
    shape,
    thickness,
    validationState,
    value
  } = state;
  const rootStyles = useRootStyles();
  const barStyles = useBarStyles();
  const {
    dir
  } = useFluent();
  state.root.className = mergeClasses(progressBarClassNames.root, rootStyles.root, rootStyles[shape], rootStyles[thickness], state.root.className);

  if (state.bar) {
    state.bar.className = mergeClasses(progressBarClassNames.bar, barStyles.base, value === undefined && barStyles.indeterminate, value === undefined && dir === 'rtl' && barStyles.rtl, barStyles[thickness], value !== undefined && value > ZERO_THRESHOLD && barStyles.nonZeroDeterminate, validationState && barStyles[validationState], state.bar.className);
  }

  if (state.bar && value !== undefined) {
    state.bar.style = {
      width: Math.min(100, Math.max(0, value / max * 100)) + '%',
      ...state.bar.style
    };
  }

  return state;
};
//# sourceMappingURL=useProgressBarStyles.js.map