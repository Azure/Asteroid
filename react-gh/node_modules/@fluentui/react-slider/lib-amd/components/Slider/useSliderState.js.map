{"version":3,"file":"useSliderState.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-slider/src/components/Slider/useSliderState.tsx"],"names":[],"mappings":";;;;IAMQ,IAAA,qBAAqB,GAA4C,+BAAa,sBAAzD,EAAE,iBAAiB,GAAyB,+BAAa,kBAAtC,EAAE,kBAAkB,GAAK,+BAAa,mBAAlB,CAAmB;IAEvF,IAAM,UAAU,GAAG,UAAC,KAAa,EAAE,GAAW,EAAE,GAAW;QACzD,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IAC/D,CAAC,CAAC;IAEK,IAAM,uBAAuB,GAAG,UAAC,KAAkB,EAAE,KAAkB;;QACpE,IAAA,KAAsD,KAAK,aAA3C,EAAhB,YAAY,mBAAG,CAAC,KAAA,EAAE,KAAoC,KAAK,IAAlC,EAAP,GAAG,mBAAG,CAAC,KAAA,EAAE,KAA2B,KAAK,IAAvB,EAAT,GAAG,mBAAG,GAAG,KAAA,EAAE,IAAI,GAAY,KAAK,KAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,CAAW;QAC5D,IAAA,GAAG,GAAK,0CAAS,EAAE,IAAhB,CAAiB;QACtB,IAAA,KAAkC,sCAAoB,CAAC;YAC3D,KAAK,EAAE,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,uBAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/D,YAAY,EAAE,uBAAK,CAAC,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC;YAC3C,YAAY,EAAE,CAAC;SAChB,CAAC,EAJK,YAAY,QAAA,EAAE,eAAe,QAIlC,CAAC;QACH,IAAM,YAAY,GAAG,UAAU,CAAC,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAExD,IAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC3C,IAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC;QAErC,IAAM,QAAQ,GAA+C,kCAAgB,CAAC,UAAA,EAAE;YAC9E,IAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACzC,eAAe,CAAC,uBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAE3C,IAAI,aAAa,IAAI,aAAa,KAAK,aAAa,EAAE;gBACpD,aAAa,CAAC,EAAE,CAAC,CAAC;aACnB;iBAAM,IAAI,aAAa,EAAE;gBACxB,aAAa,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;aACxC;QACH,CAAC,CAAC,CAAC;QAEH,IAAM,aAAa;YACjB,GAAC,kBAAkB,IAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ;YAClF,GAAC,qBAAqB,IAAG,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAI,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,MAAG,CAAC,CAAC,CAAC,EAAE;YACjF,GAAC,iBAAiB,IAAM,YAAY,MAAG;eACxC,CAAC;QAEF,aAAa;QACb,KAAK,CAAC,IAAI,CAAC,KAAK,yCACX,aAAa,GACb,KAAK,CAAC,IAAI,CAAC,KAAK,CACpB,CAAC;QAEF,cAAc;QACd,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC;QACjC,KAAK,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEhC,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IAzCW,QAAA,uBAAuB,2BAyClC","sourcesContent":["import * as React from 'react';\nimport { clamp, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { sliderCSSVars } from './useSliderStyles';\nimport type { SliderState, SliderProps } from './Slider.types';\n\nconst { sliderStepsPercentVar, sliderProgressVar, sliderDirectionVar } = sliderCSSVars;\n\nconst getPercent = (value: number, min: number, max: number) => {\n  return max === min ? 0 : ((value - min) / (max - min)) * 100;\n};\n\nexport const useSliderState_unstable = (state: SliderState, props: SliderProps) => {\n  const { defaultValue = 0, min = 0, max = 100, step, value } = props;\n  const { dir } = useFluent();\n  const [currentValue, setCurrentValue] = useControllableState({\n    state: value !== undefined ? clamp(value, min, max) : undefined,\n    defaultState: clamp(defaultValue, min, max),\n    initialState: 0,\n  });\n  const valuePercent = getPercent(currentValue, min, max);\n\n  const inputOnChange = state.input.onChange;\n  const propsOnChange = props.onChange;\n\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = useEventCallback(ev => {\n    const newValue = Number(ev.target.value);\n    setCurrentValue(clamp(newValue, min, max));\n\n    if (inputOnChange && inputOnChange !== propsOnChange) {\n      inputOnChange(ev);\n    } else if (propsOnChange) {\n      propsOnChange(ev, { value: newValue });\n    }\n  });\n\n  const rootVariables = {\n    [sliderDirectionVar]: state.vertical ? '0deg' : dir === 'ltr' ? '90deg' : '270deg',\n    [sliderStepsPercentVar]: step && step > 0 ? `${(step * 100) / (max - min)}%` : '',\n    [sliderProgressVar]: `${valuePercent}%`,\n  };\n\n  // Root props\n  state.root.style = {\n    ...rootVariables,\n    ...state.root.style,\n  };\n\n  // Input Props\n  state.input.value = currentValue;\n  state.input.onChange = onChange;\n\n  return state;\n};\n"]}