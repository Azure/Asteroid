{"version":3,"file":"useDialogBodyStyles.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-dialog/src/components/DialogBody/useDialogBodyStyles.ts"],"names":[],"mappings":";;;;;IAca,QAAA,oBAAoB,GAAoC;QACnE,IAAI,EAAE,gBAAgB;KACvB,CAAC;IAEF;;OAEG;IACH,IAAM,SAAS,GAAG,kBAAU,CAAC;QAC3B,IAAI,uDACF,OAAO,EAAE,MAAM,EACf,aAAa,EAAE;gBACb,eAAe,EAAE,oBAAoB;aACtC,EACD,KAAK,EAAE,MAAM,EACb,MAAM,EAAE,aAAa,EACrB,QAAQ,EAAE,OAAO,EACjB,SAAS,EAAE,sBAAoB,0BAAe,MAAG,EACjD,SAAS,EAAE,YAAY,EACvB,gBAAgB,EAAE,eAAe,EACjC,mBAAmB,EAAE,cAAc,EACnC,iBAAiB,EAAE,aAChB,0BAAe,SAAI,0BAAe,SAAI,iCAAsB,kBAC5D,4BAAiB,SAAI,4BAAiB,SAAI,4BAAiB,kBAC3D,kCAAuB,SAAI,gCAAqB,SAAI,gCAAqB,aAC3E,IACE,kBAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAC5B,kBAAU,CAAC,GAAG,CAAC,qBAAU,CAAC,gBAC5B,0CAA+B,IAAG;YACjC,QAAQ,EAAE,OAAO;YACjB,gBAAgB,EAAE,oBAAoB;YACtC,iBAAiB,EAAE,iBACd,0BAAe,SAAI,0BAAe,SAAI,iCAAsB,sBAC5D,4BAAiB,SAAI,4BAAiB,SAAI,4BAAiB,sBAC3D,kCAAuB,SAAI,kCAAuB,SAAI,kCAAuB,sBAC7E,gCAAqB,SAAI,gCAAqB,SAAI,gCAAqB,eAC3E;SACF,MACF;KACF,CAAC,CAAC;IAEH;;OAEG;IACI,IAAM,4BAA4B,GAAG,UAAC,KAAsB;QACjE,IAAM,MAAM,GAAG,SAAS,EAAE,CAAC;QAC3B,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAY,CAAC,4BAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAElG,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IALW,QAAA,4BAA4B,gCAKvC","sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { DialogBodySlots, DialogBodyState } from './DialogBody.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport {\n  ACTIONS_END_GRID_AREA,\n  ACTIONS_START_GRID_AREA,\n  CONTENT_GRID_AREA,\n  DIALOG_GAP,\n  MEDIA_QUERY_BREAKPOINT_SELECTOR,\n  SURFACE_PADDING,\n  TITLE_ACTION_GRID_AREA,\n  TITLE_GRID_AREA,\n} from '../../contexts';\n\nexport const dialogBodyClassNames: SlotClassNames<DialogBodySlots> = {\n  root: 'fui-DialogBody',\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    '&::backdrop': {\n      backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    },\n    width: `100%`,\n    height: 'fit-content',\n    maxWidth: '600px',\n    maxHeight: `calc(100vh - 2 * ${SURFACE_PADDING})`,\n    boxSizing: 'border-box',\n    gridTemplateRows: 'auto 1fr auto',\n    gridTemplateColumns: '1fr 1fr auto',\n    gridTemplateAreas: `\n    \"${TITLE_GRID_AREA} ${TITLE_GRID_AREA} ${TITLE_ACTION_GRID_AREA}\"\n    \"${CONTENT_GRID_AREA} ${CONTENT_GRID_AREA} ${CONTENT_GRID_AREA}\"\n    \"${ACTIONS_START_GRID_AREA} ${ACTIONS_END_GRID_AREA} ${ACTIONS_END_GRID_AREA}\"\n    `,\n    ...shorthands.overflow('unset'),\n    ...shorthands.gap(DIALOG_GAP),\n    [MEDIA_QUERY_BREAKPOINT_SELECTOR]: {\n      maxWidth: '100vw',\n      gridTemplateRows: 'auto 1fr auto auto',\n      gridTemplateAreas: `\n        \"${TITLE_GRID_AREA} ${TITLE_GRID_AREA} ${TITLE_ACTION_GRID_AREA}\"\n        \"${CONTENT_GRID_AREA} ${CONTENT_GRID_AREA} ${CONTENT_GRID_AREA}\"\n        \"${ACTIONS_START_GRID_AREA} ${ACTIONS_START_GRID_AREA} ${ACTIONS_START_GRID_AREA}\"\n        \"${ACTIONS_END_GRID_AREA} ${ACTIONS_END_GRID_AREA} ${ACTIONS_END_GRID_AREA}\"\n      `,\n    },\n  },\n});\n\n/**\n * Apply styling to the DialogBody slots based on the state\n */\nexport const useDialogBodyStyles_unstable = (state: DialogBodyState): DialogBodyState => {\n  const styles = useStyles();\n  state.root.className = mergeClasses(dialogBodyClassNames.root, styles.root, state.root.className);\n\n  return state;\n};\n"]}