{"version":3,"file":"useDialog.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-dialog/src/components/Dialog/useDialog.ts"],"names":[],"mappings":";;;;IAQA;;;;;;;OAOG;IACI,IAAM,kBAAkB,GAAG,UAAC,KAAkB;QAC3C,IAAA,QAAQ,GAAwC,KAAK,SAA7C,EAAE,KAAsC,KAAK,UAAxB,EAAnB,SAAS,mBAAG,OAAO,KAAA,EAAE,YAAY,GAAK,KAAK,aAAV,CAAW;QAExD,IAAA,KAAqB,2BAA2B,CAAC,QAAQ,CAAC,EAAzD,OAAO,QAAA,EAAE,OAAO,QAAyC,CAAC;QAE3D,IAAA,KAAkB,sCAAoB,CAAC;YAC3C,KAAK,EAAE,KAAK,CAAC,IAAI;YACjB,YAAY,EAAE,KAAK,CAAC,WAAW;YAC/B,YAAY,EAAE,KAAK;SACpB,CAAC,EAJK,IAAI,QAAA,EAAE,OAAO,QAIlB,CAAC;QAEH,IAAM,iBAAiB,GAAG,kCAAgB,CAAC,UAAC,IAA0B;YACpE,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAEjC,0DAA0D;YAC1D,6FAA6F;YAC7F,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,EAAE;gBACpC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;QAEH,IAAM,QAAQ,GAAG,4BAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACvD,IAAM,iBAAiB,GAAG,4BAAoB,EAAE,CAAC;QACjD,IAAM,kBAAkB,GAAG,OAAO,CAAC,IAAI,IAAI,SAAS,KAAK,WAAW,CAAC,CAAC;QAEtE,2CAAyB,CAAC;YACxB,IAAI,kBAAkB,EAAE;gBACtB,OAAO,iBAAiB,EAAE,CAAC;aAC5B;QACH,CAAC,EAAE,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,CAAC,CAAC;QAE5C,OAAO;YACL,UAAU,EAAE;gBACV,QAAQ,EAAE,KAAK;aAChB;YACD,IAAI,MAAA;YACJ,SAAS,WAAA;YACT,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;YAC9B,OAAO,SAAA;YACP,iBAAiB,mBAAA;YACjB,aAAa,EAAE,uBAAK,CAAC,eAAe,CAAC;YACrC,cAAc,EAAE,4CAAmB,CAAC,wBAAa,CAAC;YAClD,SAAS,EAAE,QAAQ;SACpB,CAAC;IACJ,CAAC,CAAC;IA5CW,QAAA,kBAAkB,sBA4C7B;IAEF;;OAEG;IACH,SAAS,2BAA2B,CAClC,QAAyB;QAEzB,IAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAyB,CAAC;QAC/E,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;YACzC,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC5D,sCAAsC;gBACtC,OAAO,CAAC,IAAI,CACV,4DAA4D;oBAC1D,4EAA4E,CAC/E,CAAC;aACH;SACF;QACD,QAAQ,aAAa,CAAC,MAAM,EAAE;YAC5B,mDAAmD;YACnD,KAAK,CAAC;gBACJ,OAAO,aAAqE,CAAC;YAC/E,kCAAkC;YAClC,KAAK,CAAC;gBACJ,OAAO,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,eAAe;YACf;gBACE,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SACjC;IACH,CAAC","sourcesContent":["import * as React from 'react';\nimport { useControllableState, useEventCallback, useId, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\nimport { useDisableBodyScroll, useFocusFirstElement } from '../../utils';\nimport { DialogContext } from '../../contexts';\n\nimport type { DialogOpenChangeData, DialogProps, DialogState } from './Dialog.types';\n\n/**\n * Create the state required to render Dialog.\n *\n * The returned state can be modified with hooks such as useDialogStyles_unstable,\n * before being passed to renderDialog_unstable.\n *\n * @param props - props from this instance of Dialog\n */\nexport const useDialog_unstable = (props: DialogProps): DialogState => {\n  const { children, modalType = 'modal', onOpenChange } = props;\n\n  const [trigger, content] = childrenToTriggerAndContent(children);\n\n  const [open, setOpen] = useControllableState({\n    state: props.open,\n    defaultState: props.defaultOpen,\n    initialState: false,\n  });\n\n  const requestOpenChange = useEventCallback((data: DialogOpenChangeData) => {\n    onOpenChange?.(data.event, data);\n\n    // if user prevents default then do not change state value\n    // otherwise updates state value and trigger reference to the element that caused the opening\n    if (!data.event.isDefaultPrevented()) {\n      setOpen(data.open);\n    }\n  });\n\n  const focusRef = useFocusFirstElement(open, modalType);\n  const disableBodyScroll = useDisableBodyScroll();\n  const isBodyScrollLocked = Boolean(open && modalType !== 'non-modal');\n\n  useIsomorphicLayoutEffect(() => {\n    if (isBodyScrollLocked) {\n      return disableBodyScroll();\n    }\n  }, [disableBodyScroll, isBodyScrollLocked]);\n\n  return {\n    components: {\n      backdrop: 'div',\n    },\n    open,\n    modalType,\n    content: open ? content : null,\n    trigger,\n    requestOpenChange,\n    dialogTitleId: useId('dialog-title-'),\n    isNestedDialog: useHasParentContext(DialogContext),\n    dialogRef: focusRef,\n  };\n};\n\n/**\n * Extracts trigger and content from children\n */\nfunction childrenToTriggerAndContent(\n  children: React.ReactNode,\n): readonly [trigger: React.ReactNode, content: React.ReactNode] {\n  const childrenArray = React.Children.toArray(children) as React.ReactElement[];\n  if (process.env.NODE_ENV !== 'production') {\n    if (childrenArray.length !== 1 && childrenArray.length !== 2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Dialog must contain at least one child <DialogSurface/>,\\n' +\n          'and at most two children <DialogTrigger/> <DialogSurface/> (in this order)',\n      );\n    }\n  }\n  switch (childrenArray.length) {\n    // case where there's a trigger followed by content\n    case 2:\n      return childrenArray as [trigger: React.ReactNode, content: React.ReactNode];\n    // case where there's only content\n    case 1:\n      return [undefined, childrenArray[0]];\n    // unknown case\n    default:\n      return [undefined, undefined];\n  }\n}\n"]}