define(["require", "exports", "react", "@fluentui/react-tabster", "@fluentui/react-shared-contexts"], function (require, exports, React, react_tabster_1, react_shared_contexts_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useFocusFirstElement = void 0;
    /**
     * Focus first element on content when dialog is opened,
     */
    function useFocusFirstElement(open, modalType) {
        var findFirstFocusable = react_tabster_1.useFocusFinders().findFirstFocusable;
        var targetDocument = react_shared_contexts_1.useFluent_unstable().targetDocument;
        var dialogRef = React.useRef(null);
        var triggerRef = React.useRef();
        React.useEffect(function () {
            var _a, _b;
            if (!open) {
                return (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
            }
            triggerRef.current = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;
            var element = dialogRef.current && findFirstFocusable(dialogRef.current);
            if (element) {
                element.focus();
            }
            else {
                (_b = dialogRef.current) === null || _b === void 0 ? void 0 : _b.focus(); // https://github.com/microsoft/fluentui/issues/25150
                if (process.env.NODE_ENV !== 'production') {
                    // eslint-disable-next-line no-console
                    console.warn([
                        '@fluentui/react-dialog: a Dialog should have at least one focusable element inside DialogSurface.',
                        'Please add at least a close button either on `DialogTitle` action slot or inside `DialogActions`',
                    ].join('\n'));
                }
            }
        }, [findFirstFocusable, open, modalType, targetDocument]);
        return dialogRef;
    }
    exports.useFocusFirstElement = useFocusFirstElement;
});
//# sourceMappingURL=useFocusFirstElement.js.map