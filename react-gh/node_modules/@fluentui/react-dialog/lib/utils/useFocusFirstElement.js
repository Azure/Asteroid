import * as React from 'react';
import { useFocusFinders } from '@fluentui/react-tabster';
import { useFluent_unstable } from '@fluentui/react-shared-contexts';
/**
 * Focus first element on content when dialog is opened,
 */

export function useFocusFirstElement(open, modalType) {
  const {
    findFirstFocusable
  } = useFocusFinders();
  const {
    targetDocument
  } = useFluent_unstable();
  const dialogRef = React.useRef(null);
  const triggerRef = React.useRef();
  React.useEffect(() => {
    var _a, _b;

    if (!open) {
      return (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    }

    triggerRef.current = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;
    const element = dialogRef.current && findFirstFocusable(dialogRef.current);

    if (element) {
      element.focus();
    } else {
      (_b = dialogRef.current) === null || _b === void 0 ? void 0 : _b.focus(); // https://github.com/microsoft/fluentui/issues/25150

      if (process.env.NODE_ENV !== 'production') {
        // eslint-disable-next-line no-console
        console.warn(['@fluentui/react-dialog: a Dialog should have at least one focusable element inside DialogSurface.', 'Please add at least a close button either on `DialogTitle` action slot or inside `DialogActions`'].join('\n'));
      }
    }
  }, [findFirstFocusable, open, modalType, targetDocument]);
  return dialogRef;
}
//# sourceMappingURL=useFocusFirstElement.js.map