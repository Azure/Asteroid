{"version":3,"file":"ProviderContext.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-shared-contexts/src/ProviderContext/ProviderContext.ts"],"names":[],"mappings":";;;;IAUA;;OAEG;IACH,IAAM,eAAe,GAAG,KAAK,CAAC,aAAa,CACzC,SAAS,CAC6B,CAAC;IAEzC,IAAM,2BAA2B,GAAyB;QACxD,cAAc,EAAE,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;QACnE,GAAG,EAAE,KAAc;KACpB,CAAC;IAEF;;OAEG;IACU,QAAA,QAAQ,GAAG,eAAe,CAAC,QAAQ,CAAC;IAEjD,SAAgB,SAAS;;QACvB,OAAO,MAAA,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,mCAAI,2BAA2B,CAAC;IAC1E,CAAC;IAFD,8BAEC","sourcesContent":["import * as React from 'react';\n\nexport type ProviderContextValue = {\n  /** Sets the direction of text & generated styles. */\n  dir: 'ltr' | 'rtl';\n\n  /** Provides the document, can be undefined during SSR render. */\n  targetDocument?: Document;\n};\n\n/**\n * @internal\n */\nconst ProviderContext = React.createContext<ProviderContextValue | undefined>(\n  undefined,\n) as React.Context<ProviderContextValue>;\n\nconst providerContextDefaultValue: ProviderContextValue = {\n  targetDocument: typeof document === 'object' ? document : undefined,\n  dir: 'ltr' as const,\n};\n\n/**\n * @internal\n */\nexport const Provider = ProviderContext.Provider;\n\nexport function useFluent(): ProviderContextValue {\n  return React.useContext(ProviderContext) ?? providerContextDefaultValue;\n}\n"]}