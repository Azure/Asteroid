{"version":3,"sources":["packages/react-components/react-shared-contexts/src/TooltipVisibilityContext/TooltipContext.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,KAAA,gBAAA,OAAA,CAAA,OAAA,CAAA;AAeA;;;AAGG;;;AACH,MAAM,wBAAwB,gBAAG,KAAK,CAAC,aAAN,CAC/B,SAD+B,CAAjC;AAIA,MAAM,oCAAoC,GAAkC,EAA5E;AAEA;;AAEG;;AACU,OAAA,CAAA,yBAAA,GAA4B,wBAAwB,CAAC,QAArD;;AAEb,SAAgB,oBAAhB,GAAoC;;;EAClC,OAAO,CAAA,EAAA,GAAA,KAAK,CAAC,UAAN,CAAiB,wBAAjB,CAAA,MAA0C,IAA1C,IAA0C,EAAA,KAAA,KAAA,CAA1C,GAA0C,EAA1C,GAA8C,oCAArD;AACD;;AAFD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourcesContent":["import * as React from 'react';\n\n/**\n * The context provided by TooltipProvider\n */\nexport type TooltipVisibilityContextValue = {\n  /**\n   * When a tooltip is shown, it sets itself as the visibleTooltip.\n   * The next tooltip to become visible can use it to hide the previous tooltip immediately.\n   */\n  visibleTooltip?: {\n    hide: () => void;\n  };\n};\n\n/**\n * @internal\n * Context shared by all of the tooltips in the app\n */\nconst TooltipVisibilityContext = React.createContext<TooltipVisibilityContextValue | undefined>(\n  undefined,\n) as React.Context<TooltipVisibilityContextValue>;\n\nconst tooltipVisibilityContextDefaultValue: TooltipVisibilityContextValue = {};\n\n/**\n * @internal\n */\nexport const TooltipVisibilityProvider = TooltipVisibilityContext.Provider;\n\nexport function useTooltipVisibility(): TooltipVisibilityContextValue {\n  return React.useContext(TooltipVisibilityContext) ?? tooltipVisibilityContextDefaultValue;\n}\n"],"sourceRoot":"../src/"}