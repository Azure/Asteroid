{"version":3,"sources":["packages/react-components/react-shared-contexts/src/ProviderContext/ProviderContext.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAUA;;AAEG;;AACH,MAAM,eAAe,gBAAG,KAAK,CAAC,aAAN,CACtB,SADsB,CAAxB;AAIA,MAAM,2BAA2B,GAAyB;EACxD,cAAc,EAAE,OAAO,QAAP,KAAoB,QAApB,GAA+B,QAA/B,GAA0C,SADF;EAExD,GAAG,EAAE;AAFmD,CAA1D;AAKA;;AAEG;;AACH,OAAO,MAAM,QAAQ,GAAG,eAAe,CAAC,QAAjC;AAEP,OAAM,SAAU,SAAV,GAAmB;;;EACvB,OAAO,CAAA,EAAA,GAAA,KAAK,CAAC,UAAN,CAAiB,eAAjB,CAAA,MAAiC,IAAjC,IAAiC,EAAA,KAAA,KAAA,CAAjC,GAAiC,EAAjC,GAAqC,2BAA5C;AACD","sourcesContent":["import * as React from 'react';\n\nexport type ProviderContextValue = {\n  /** Sets the direction of text & generated styles. */\n  dir: 'ltr' | 'rtl';\n\n  /** Provides the document, can be undefined during SSR render. */\n  targetDocument?: Document;\n};\n\n/**\n * @internal\n */\nconst ProviderContext = React.createContext<ProviderContextValue | undefined>(\n  undefined,\n) as React.Context<ProviderContextValue>;\n\nconst providerContextDefaultValue: ProviderContextValue = {\n  targetDocument: typeof document === 'object' ? document : undefined,\n  dir: 'ltr' as const,\n};\n\n/**\n * @internal\n */\nexport const Provider = ProviderContext.Provider;\n\nexport function useFluent(): ProviderContextValue {\n  return React.useContext(ProviderContext) ?? providerContextDefaultValue;\n}\n"],"sourceRoot":"../src/"}