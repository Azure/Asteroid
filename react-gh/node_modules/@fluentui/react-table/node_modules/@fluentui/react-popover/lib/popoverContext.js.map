{"version":3,"sources":["packages/react-components/react-popover/src/popoverContext.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,EAAwB,kBAAxB,QAAkD,kCAAlD;AAIA,OAAO,MAAM,cAAc,gBAAiC,aAAa,CACvE,SADuE,CAAlE;AAGP,MAAM,0BAA0B,GAAwB;EACtD,IAAI,EAAE,KADgD;EAEtD,OAAO,EAAE,MAAM,IAFuC;EAGtD,UAAU,EAAE,MAAM,IAHoC;EAItD,UAAU,EAAE;IAAE,OAAO,EAAE;EAAX,CAJ0C;EAKtD,UAAU,EAAE;IAAE,OAAO,EAAE;EAAX,CAL0C;EAMtD,QAAQ,EAAE;IAAE,OAAO,EAAE;EAAX,CAN4C;EAOtD,aAAa,EAAE,KAPuC;EAQtD,WAAW,EAAE,KARyC;EAStD,IAAI,EAAE,QATgD;EAUtD,SAAS,EAAE,KAV2C;EAWtD,MAAM,EAAE;AAX8C,CAAxD;AAcA,OAAO,MAAM,eAAe,GAAG,cAAc,CAAC,QAAvC;AAwBP,OAAO,MAAM,0BAA0B,GAAO,QAAJ,IACxC,kBAAkB,CAAC,cAAD,EAAiB,CAAC,GAAG,GAAG,0BAAP,KAAsC,QAAQ,CAAC,GAAD,CAA/D,CADb","sourcesContent":["import { createContext, useContextSelector } from '@fluentui/react-context-selector';\nimport type { ContextSelector, Context } from '@fluentui/react-context-selector';\nimport type { PopoverState } from './components/Popover/index';\n\nexport const PopoverContext: Context<PopoverContextValue> = createContext<PopoverContextValue | undefined>(\n  undefined,\n) as Context<PopoverContextValue>;\nconst popoverContextDefaultValue: PopoverContextValue = {\n  open: false,\n  setOpen: () => null,\n  toggleOpen: () => null,\n  triggerRef: { current: null },\n  contentRef: { current: null },\n  arrowRef: { current: null },\n  openOnContext: false,\n  openOnHover: false,\n  size: 'medium' as const,\n  trapFocus: false,\n  inline: false,\n};\n\nexport const PopoverProvider = PopoverContext.Provider;\n\n/**\n * Context shared between Popover and its children components\n */\nexport type PopoverContextValue = Pick<\n  PopoverState,\n  | 'open'\n  | 'toggleOpen'\n  | 'setOpen'\n  | 'triggerRef'\n  | 'contentRef'\n  | 'openOnHover'\n  | 'openOnContext'\n  | 'mountNode'\n  | 'withArrow'\n  | 'arrowRef'\n  | 'size'\n  | 'appearance'\n  | 'trapFocus'\n  | 'legacyTrapFocus'\n  | 'inline'\n>;\n\nexport const usePopoverContext_unstable = <T>(selector: ContextSelector<PopoverContextValue, T>): T =>\n  useContextSelector(PopoverContext, (ctx = popoverContextDefaultValue) => selector(ctx));\n"],"sourceRoot":"../src/"}