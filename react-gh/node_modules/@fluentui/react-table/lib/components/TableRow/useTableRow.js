import { getNativeElementProps, useMergedRefs } from '@fluentui/react-utilities';
import { useTableContext } from '../../contexts/tableContext';
import { useFocusVisible, useFocusWithin } from '@fluentui/react-tabster';
/**
 * Create the state required to render TableRow.
 *
 * The returned state can be modified with hooks such as useTableRowStyles_unstable,
 * before being passed to renderTableRow_unstable.
 *
 * @param props - props from this instance of TableRow
 * @param ref - reference to root HTMLElement of TableRow
 */

export const useTableRow_unstable = (props, ref) => {
  var _a, _b;

  const {
    noNativeElements,
    size
  } = useTableContext();
  const rootComponent = ((_a = props.as) !== null && _a !== void 0 ? _a : noNativeElements) ? 'div' : 'tr';
  const focusVisibleRef = useFocusVisible();
  const focusWithinRef = useFocusWithin();
  return {
    components: {
      root: rootComponent
    },
    root: getNativeElementProps(rootComponent, {
      ref: useMergedRefs(ref, focusVisibleRef, focusWithinRef),
      role: rootComponent === 'div' ? 'row' : undefined,
      ...props
    }),
    size,
    noNativeElements,
    appearance: (_b = props.appearance) !== null && _b !== void 0 ? _b : 'none'
  };
};
//# sourceMappingURL=useTableRow.js.map