"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDataGrid_unstable = void 0;

const react_tabster_1 = /*#__PURE__*/require("@fluentui/react-tabster");

const useTable_1 = /*#__PURE__*/require("../Table/useTable");

const hooks_1 = /*#__PURE__*/require("../../hooks");
/**
 * Create the state required to render DataGrid.
 *
 * The returned state can be modified with hooks such as useDataGridStyles_unstable,
 * before being passed to renderDataGrid_unstable.
 *
 * @param props - props from this instance of DataGrid
 * @param ref - reference to root HTMLElement of DataGrid
 */


const useDataGrid_unstable = (props, ref) => {
  const {
    items,
    columns,
    focusMode = 'cell',
    selectionMode,
    onSortChange,
    onSelectionChange,
    defaultSortState,
    sortState,
    selectedItems,
    defaultSelectedItems,
    subtleSelection = false,
    selectionAppearance = 'brand',
    getRowId
  } = props;
  const navigable = focusMode !== 'none';
  const keyboardNavAttr = react_tabster_1.useArrowNavigationGroup({
    axis: 'grid'
  });
  const tableState = hooks_1.useTableFeatures({
    items,
    columns,
    getRowId
  }, [hooks_1.useTableSort({
    defaultSortState,
    sortState,
    onSortChange
  }), hooks_1.useTableSelection({
    defaultSelectedItems,
    selectedItems,
    onSelectionChange,
    selectionMode: selectionMode !== null && selectionMode !== void 0 ? selectionMode : 'multiselect'
  })]);
  const baseTableState = useTable_1.useTable_unstable({
    role: 'grid',
    as: 'div',
    noNativeElements: true,
    ...(navigable && keyboardNavAttr),
    ...props
  }, ref);
  return { ...baseTableState,
    focusMode,
    tableState,
    selectableRows: !!selectionMode,
    subtleSelection,
    selectionAppearance
  };
};

exports.useDataGrid_unstable = useDataGrid_unstable;
//# sourceMappingURL=useDataGrid.js.map