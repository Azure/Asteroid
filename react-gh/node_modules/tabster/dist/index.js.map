{"version":3,"file":"index.js","sources":["../src/Types.ts","../src/Instance.ts","../src/EventTarget.ts","../src/State/Subscribable.ts","../src/State/KeyboardNavigation.ts","../src/Utils.ts","../src/Root.ts","../src/Deloser.ts","../src/CrossOrigin.ts","../src/Focusable.ts","../src/Keys.ts","../src/State/FocusedElement.ts","../src/Groupper.ts","../src/Modalizer.ts","../src/Mover.ts","../src/MutationEvent.ts","../src/State/ObservedElement.ts","../src/Outline.ts","../src/Uncontrolled.ts","../src/Tabster.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const TabsterAttributeName = \"data-tabster\";\nexport const TabsterDummyInputAttributeName = \"data-tabster-dummy\";\nexport const DeloserEventName = \"tabster:deloser\";\nexport const ModalizerEventName = \"tabster:modalizer\";\nexport const MoverEventName = \"tabster:mover\";\n\nexport interface TabsterEventWithDetails<D> extends Event {\n    details: D;\n}\n\nexport interface TabsterDOMAttribute {\n    [TabsterAttributeName]: string | undefined;\n}\n\nexport interface TabsterCoreProps {\n    autoRoot?: RootProps;\n    /**\n     * Allows all tab key presses under the tabster root to be controlled by tabster\n     * @default true\n     */\n    controlTab?: boolean;\n    /**\n     * When controlTab is false, Root doesn't have dummy inputs by default.\n     * This option allows to enable dummy inputs on Root.\n     */\n    rootDummyInputs?: boolean;\n}\n\nexport type GetTabster = () => TabsterCore;\nexport type GetWindow = () => Window;\n\nexport type SubscribableCallback<A, B = undefined> = (\n    val: A,\n    details: B\n) => void;\n\nexport interface Disposable {\n    /** @internal */\n    dispose(): void;\n}\n\nexport interface Subscribable<A, B = undefined> {\n    subscribe(callback: SubscribableCallback<A, B>): void;\n    unsubscribe(callback: SubscribableCallback<A, B>): void;\n}\n\nexport interface KeyboardNavigationState\n    extends Subscribable<boolean>,\n        Disposable {\n    isNavigatingWithKeyboard(): boolean;\n}\n\nexport interface FocusedElementDetails {\n    relatedTarget?: HTMLElement;\n    isFocusedProgrammatically?: boolean;\n}\n\nexport interface FocusedElementState\n    extends Subscribable<HTMLElement | undefined, FocusedElementDetails>,\n        Disposable {\n    getFocusedElement(): HTMLElement | undefined;\n    getLastFocusedElement(): HTMLElement | undefined;\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    focusDefault(container: HTMLElement): boolean;\n    focusFirst(props: FindFirstProps): boolean;\n    focusLast(props: FindFirstProps): boolean;\n    resetFocus(container: HTMLElement): boolean;\n}\n\nexport interface WeakHTMLElement<D = undefined> {\n    get(): HTMLElement | undefined;\n    getData(): D | undefined;\n}\n\nexport interface TabsterPart<P> {\n    readonly id: string;\n    getElement(): HTMLElement | undefined;\n    getProps(): P;\n    setProps(props: P): void;\n}\n\nexport interface ObservedElementProps {\n    names: string[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n}\n\nexport interface ObservedElementDetails extends ObservedElementProps {\n    accessibility?: ObservedElementAccesibility;\n}\n\nexport interface ObservedElementAccesibilities {\n    Any: 0;\n    Accessible: 1;\n    Focusable: 2;\n}\nexport type ObservedElementAccesibility =\n    ObservedElementAccesibilities[keyof ObservedElementAccesibilities];\nexport const ObservedElementAccesibilities: ObservedElementAccesibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2,\n};\n\nexport interface ObservedElementAsyncRequest<T> {\n    result: Promise<T>;\n    cancel(): void;\n}\n\ninterface ObservedElementAPIInternal {\n    /** @internal */\n    onObservedElementUpdate(element: HTMLElement): void;\n}\n\nexport interface ObservedElementAPI\n    extends Subscribable<HTMLElement, ObservedElementDetails>,\n        Disposable,\n        ObservedElementAPIInternal {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): HTMLElement | null;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): ObservedElementAsyncRequest<HTMLElement | null>;\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): ObservedElementAsyncRequest<boolean>;\n}\n\nexport interface CrossOriginElement {\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginSentTo {\n    [id: string]: true;\n}\n\nexport interface CrossOriginTransactionTypes {\n    Bootstrap: 1;\n    FocusElement: 2;\n    State: 3;\n    GetElement: 4;\n    RestoreFocusInDeloser: 5;\n    Ping: 6;\n}\nexport type CrossOriginTransactionType =\n    CrossOriginTransactionTypes[keyof CrossOriginTransactionTypes];\n\nexport interface CrossOriginTransactionData<I, O> {\n    transaction: string;\n    type: CrossOriginTransactionType;\n    isResponse: boolean;\n    timestamp: number;\n    owner: string;\n    sentto: CrossOriginSentTo;\n    timeout?: number;\n    target?: string;\n    beginData?: I;\n    endData?: O;\n}\n\nexport type CrossOriginTransactionSend = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>\n) => void;\n\nexport interface CrossOriginMessage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>;\n    send: CrossOriginTransactionSend;\n}\n\nexport interface CrossOriginFocusedElementState\n    extends Subscribable<CrossOriginElement | undefined, FocusedElementDetails>,\n        Disposable {\n    focus(\n        element: CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, ObservedElementProps>,\n        Disposable {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    requestFocus(observedName: string, timeout: number): Promise<boolean>;\n}\n\nexport interface CrossOriginAPI {\n    focusedElement: CrossOriginFocusedElementState;\n    observedElement: CrossOriginObservedElementState;\n\n    setup(\n        sendUp?: CrossOriginTransactionSend | null\n    ): (msg: CrossOriginMessage) => void;\n    isSetUp(): boolean;\n    dispose(): void;\n}\n\nexport interface OutlineProps {\n    areaClass: string;\n    outlineClass: string;\n    outlineColor: string;\n    outlineWidth: number;\n    zIndex: number;\n}\n\nexport interface OutlinedElementProps {\n    isIgnored?: boolean;\n}\n\nexport interface OutlineAPI extends Disposable {\n    setup(props?: Partial<OutlineProps>): void;\n}\n\nexport interface DeloserElementActions {\n    focusDefault: () => boolean;\n    focusFirst: () => boolean;\n    resetFocus: () => boolean;\n    clearHistory: (preserveExisting?: boolean) => void;\n    setSnapshot: (index: number) => void;\n    isActive: () => boolean;\n}\n\nexport interface RestoreFocusOrders {\n    History: 0;\n    DeloserDefault: 1;\n    RootDefault: 2;\n    DeloserFirst: 3;\n    RootFirst: 4;\n}\nexport type RestoreFocusOrder = RestoreFocusOrders[keyof RestoreFocusOrders];\nexport const RestoreFocusOrders: RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4,\n};\n\nexport interface DeloserProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n    noSelectorCheck?: boolean;\n}\n\nexport interface Deloser extends TabsterPart<DeloserProps> {\n    readonly uid: string;\n    dispose(): void;\n    isActive(): boolean;\n    setActive(active: boolean): void;\n    getActions(): DeloserElementActions;\n    setSnapshot(index: number): void;\n    focusFirst(): boolean;\n    unshift(element: HTMLElement): void;\n    focusDefault(): boolean;\n    resetFocus(): boolean;\n    findAvailable(): HTMLElement | null;\n    clearHistory(preserveExisting?: boolean): void;\n    customFocusLostHandler(element: HTMLElement): boolean;\n}\n\nexport type DeloserConstructor = (\n    element: HTMLElement,\n    props: DeloserProps\n) => Deloser;\n\ninterface DeloserInterfaceInternal {\n    /** @internal */\n    createDeloser(element: HTMLElement, props: DeloserProps): Deloser;\n}\n\nexport interface DeloserAPI extends DeloserInterfaceInternal, Disposable {\n    getActions(element: HTMLElement): DeloserElementActions | undefined;\n    pause(): void;\n    resume(restore?: boolean): void;\n}\n\nexport interface FocusableProps {\n    isDefault?: boolean;\n    isIgnored?: boolean;\n    /**\n     * Do not determine an element's focusability based on aria-disabled.\n     */\n    ignoreAriaDisabled?: boolean;\n    /**\n     * Exclude element (and all subelements) from Mover navigation.\n     */\n    excludeFromMover?: boolean;\n    /**\n     * Prevents tabster from handling the keydown event\n     */\n    ignoreKeydown?: {\n        Tab?: boolean;\n        Escape?: boolean;\n        Enter?: boolean;\n    };\n}\n\nexport interface FocusableAcceptElementState {\n    container: HTMLElement;\n    currentCtx?: TabsterContext;\n    from: HTMLElement;\n    fromCtx?: TabsterContext;\n    isBackward?: boolean;\n    found?: boolean;\n    foundElement?: HTMLElement;\n    lastToIgnore?: HTMLElement;\n    uncontrolled?: HTMLElement;\n    nextUncontrolled?: HTMLElement;\n    acceptCondition: (el: HTMLElement) => boolean;\n    includeProgrammaticallyFocusable?: boolean;\n    ignoreUncontrolled?: boolean;\n    ignoreAccessibiliy?: boolean;\n    cachedGrouppers: {\n        [id: string]: {\n            isActive: boolean | undefined;\n            first?: HTMLElement | null;\n        };\n    };\n    isFindAll?: boolean;\n}\n\nexport interface FindFocusableProps {\n    /**\n     * The container used for the search\n     */\n    container?: HTMLElement;\n    /**\n     * The elemet to start from\n     */\n    currentElement?: HTMLElement;\n    /**\n     * includes elements that can be focused programmatically\n     */\n    includeProgrammaticallyFocusable?: boolean;\n    // ignoreGroupper?: boolean;\n    /**\n     * Ignore uncontrolled areas.\n     */\n    ignoreUncontrolled?: boolean;\n    /**\n     * Ignore accessibility check.\n     */\n    ignoreAccessibiliy?: boolean;\n    /**\n     * If true, find previous element instead of the next one.\n     */\n    isBackward?: boolean;\n    /**\n     * @param el element visited\n     * @returns if an element should be accepted\n     */\n    acceptCondition?(el: HTMLElement): boolean;\n    /**\n     * A callback that will be called if an uncontrolled area is met.\n     * @param el uncontrolled element.\n     */\n    onUncontrolled?(el: HTMLElement): void;\n    /**\n     * A callback that will be called for every focusable element found during findAll().\n     * If false is returned from this callback, the search will stop.\n     */\n    onElement?: FindElementCallback;\n}\n\nexport type FindFirstProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibiliy\"\n>;\n\nexport type FindNextProps = Pick<\n    FindFocusableProps,\n    | \"currentElement\"\n    | \"container\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibiliy\"\n    | \"onUncontrolled\"\n>;\n\nexport type FindDefaultProps = Pick<\n    FindFocusableProps,\n    \"container\" | \"includeProgrammaticallyFocusable\" | \"ignoreAccessibiliy\"\n>;\n\nexport type FindAllProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"currentElement\"\n    | \"isBackward\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"acceptCondition\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibiliy\"\n    | \"onElement\"\n> & {\n    container: HTMLElement;\n};\n\n/**\n * A callback that is called for every found element during search. Returning false stops search.\n */\nexport type FindElementCallback = (element: HTMLElement) => boolean;\n\nexport interface FocusableAPI extends Disposable {\n    getProps(element: HTMLElement): FocusableProps;\n\n    isFocusable(\n        element: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    isVisible(element: HTMLElement): boolean;\n    isAccessible(element: HTMLElement): boolean;\n    // find* return null when there is no element and undefined when there is an uncontrolled area.\n    findFirst(options: FindFirstProps): HTMLElement | null | undefined;\n    findLast(options: FindFirstProps): HTMLElement | null | undefined;\n    findNext(options: FindNextProps): HTMLElement | null | undefined;\n    findPrev(options: FindNextProps): HTMLElement | null | undefined;\n    findDefault(options: FindDefaultProps): HTMLElement | null;\n    /**\n     * @returns All focusables in a given context that satisfy an given condition\n     */\n    findAll(options: FindAllProps): HTMLElement[];\n    findElement(options: FindFocusableProps): HTMLElement | null | undefined;\n}\n\nexport interface DummyInputManager {\n    moveOutWithDefaultAction: (backwards: boolean) => void;\n}\n\nexport interface Visibilities {\n    Invisible: 0;\n    PartiallyVisible: 1;\n    Visible: 2;\n}\nexport const Visibilities: Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2,\n};\nexport type Visibility = Visibilities[keyof Visibilities];\n\nexport interface MoverElementState {\n    isCurrent: boolean | undefined; // Tri-state bool. Undefined when there is no current in the container.\n    visibility: Visibility;\n}\n\nexport interface MoverDirections {\n    Both: 0; // Default, both left/up keys move to the previous, right/down move to the next.\n    Vertical: 1; // Only up/down arrows move to the next/previous.\n    Horizontal: 2; // Only left/right arrows move to the next/previous.\n    Grid: 3; // Two-dimentional movement depending on the visual placement.\n}\nexport const MoverDirections: MoverDirections = {\n    Both: 0,\n    Vertical: 1,\n    Horizontal: 2,\n    Grid: 3,\n};\nexport type MoverDirection = MoverDirections[keyof MoverDirections];\n\nexport type NextTabbable = {\n    element: HTMLElement | null | undefined;\n    uncontrolled?: HTMLElement;\n    lastMoverOrGroupper?: Mover | Groupper;\n};\n\nexport interface MoverProps {\n    direction?: MoverDirection;\n    memorizeCurrent?: boolean;\n    tabbable?: boolean;\n    /**\n     * Whether to allow cyclic navigation in the mover\n     * Can only be applied if navigationType is MoverKeys.Arrows\n     *\n     * @defaultValue false\n     */\n    cyclic?: boolean;\n    /**\n     * In case we need a rich state of the elements inside a Mover,\n     * we can track it. It takes extra resourses and might affect\n     * performance when a Mover has many elements inside, so make sure\n     * you use this prop when it is really needed.\n     */\n    trackState?: boolean;\n    /**\n     * When set to Visibility.Visible or Visibility.PartiallyVisible,\n     * uses the visibility part of the trackState prop to be able to\n     * go to first/last visible element (instead of first/last focusable\n     * element in DOM) when tabbing from outside of the mover.\n     */\n    visibilityAware?: Visibility;\n    disableHomeEndKeys?: boolean;\n}\n\nexport type MoverEvent = TabsterEventWithDetails<MoverElementState>;\n\nexport interface Mover extends TabsterPart<MoverProps> {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    setCurrent(element: HTMLElement | undefined): void;\n    getCurrent(): HTMLElement | null;\n    getState(element: HTMLElement): MoverElementState | undefined;\n    findNextTabbable(\n        current?: HTMLElement,\n        isBackward?: boolean\n    ): NextTabbable | null;\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport type MoverConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: MoverProps\n) => Mover;\n\ninterface MoverAPIInternal {\n    /** @internal */\n    createMover(element: HTMLElement, props: MoverProps): Mover;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MoverAPI extends MoverAPIInternal, Disposable {}\n\nexport interface GroupperTabbabilities {\n    Unlimited: 0;\n    Limited: 1; // The tabbability is limited to the container and explicit Enter is needed to go inside.\n    LimitedTrapFocus: 2; // The focus is limited as above, plus trapped when inside.\n}\nexport const GroupperTabbabilities: GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1,\n    LimitedTrapFocus: 2,\n};\nexport type GroupperTabbability =\n    GroupperTabbabilities[keyof GroupperTabbabilities];\n\nexport interface GroupperProps {\n    tabbability?: GroupperTabbability;\n    delegated?: boolean; // This allows to tweak the groupper behaviour for the cases when\n    // the groupper container is not focusable and groupper has Limited or LimitedTrapFocus\n    // tabbability. By default, the groupper will automatically become active once the focus\n    // goes to first focusable element inside the groupper during tabbing. When true, the\n    // groupper will become active only after Enter is pressed on first focusable element\n    // inside the groupper.\n}\n\nexport interface Groupper extends TabsterPart<GroupperProps> {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    makeTabbable(isUnlimited: boolean): void;\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined; // Tri-state boolean, undefined when parent is not active, false when parent is active.\n    setFirst(element: HTMLElement | undefined): void;\n    getFirst(orContainer: boolean): HTMLElement | undefined;\n    findNextTabbable(\n        current?: HTMLElement,\n        isBackward?: boolean\n    ): NextTabbable | null;\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport type GroupperConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: GroupperProps\n) => Groupper;\n\nexport interface GroupperAPIInternal {\n    /** @internal */\n    createGroupper(element: HTMLElement, props: GroupperProps): Groupper;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GroupperAPI extends GroupperAPIInternal, Disposable {}\n\nexport interface GroupperAPIInternal {\n    forgetCurrentGrouppers(): void;\n}\n\nexport interface ModalizerProps {\n    id: string;\n    isOthersAccessible?: boolean;\n    isAlwaysAccessible?: boolean;\n    isNoFocusFirst?: boolean;\n    isNoFocusDefault?: boolean;\n    /** A focus trap variant, keeps focus inside the modal when tabbing */\n    isTrapped?: boolean;\n}\n\nexport type ModalizerEventDetails = { eventName: \"beforefocusout\" };\n\nexport type ModalizerEvent = TabsterEventWithDetails<ModalizerEventDetails>;\n\nexport interface Modalizer extends TabsterPart<ModalizerProps> {\n    readonly internalId: string;\n    readonly userId: string;\n    /**\n     * @returns - Whether the element is inside the modalizer\n     */\n    contains(element: HTMLElement): boolean;\n    dispose(): void;\n    isActive(): boolean;\n    onBeforeFocusOut(): boolean;\n    /**\n     * Sets the active state of the modalizr\n     * When active, sets `aria-hidden` on all other elements\n     * Reverts `aria-hidden` changes when set to inactive\n     *\n     * @param active Whether the modalizer is active\n     */\n    setActive(active: boolean): void;\n}\n\nexport type ModalizerConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: ModalizerProps\n) => Modalizer;\n\nexport interface RootProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n}\n\nexport interface Root extends TabsterPart<RootProps> {\n    readonly uid: string;\n    dispose(): void;\n    moveOutWithDefaultAction(backwards: boolean): void;\n}\n\nexport type RootConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: RootProps\n) => Root;\n\nexport interface GetTabsterContextOptions {\n    /**\n     * Should visit **all** element ancestors to verify if `dir='rtl'` is set\n     */\n    checkRtl?: boolean;\n}\n\nexport type TabsterContextMoverGroupper =\n    | { isMover: true; mover: Mover }\n    | { isMover: false; groupper: Groupper };\n\nexport interface TabsterContext {\n    root: Root;\n    modalizer?: Modalizer;\n    groupper?: Groupper;\n    mover?: Mover;\n    isGroupperFirst?: boolean;\n    /**\n     * Whether `dir='rtl'` is set on an ancestor\n     */\n    isRtl?: boolean;\n    /**\n     * The uncontrolled container of this element (if any).\n     */\n    uncontrolled?: HTMLElement;\n    isExcludedFromMover?: boolean;\n    ignoreKeydown: NonNullable<FocusableProps[\"ignoreKeydown\"]>;\n}\n\nexport interface RootFocusEventDetails {\n    element: HTMLElement;\n    fromAdjacent?: boolean;\n}\n\ninterface RootAPIInternal {\n    /**@internal*/\n    createRoot(element: HTMLElement, props: RootProps): Root;\n    /**@internal*/\n    onRoot(root: Root, removed?: boolean): void;\n}\n\nexport interface RootAPI extends Disposable, RootAPIInternal {\n    eventTarget: EventTarget;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface UncontrolledAPI {}\n\ninterface ModalizerAPIInternal {\n    /** @internal */\n    createModalizer(element: HTMLElement, props: ModalizerProps): Modalizer;\n    /** @internal */\n    updateModalizer: (modalizer: Modalizer, removed?: boolean) => void;\n}\n\nexport interface ModalizerAPI extends ModalizerAPIInternal, Disposable {\n    /**\n     * Activates a Modalizer and focuses the first or default element within\n     *\n     * @param elementFromModalizer An element that belongs to a Modalizer\n     * @param noFocusFirst Do not focus on the first element in the Modalizer\n     * @param noFocusDefault Do not focus the default element in the Modalizre\n     */\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean;\n}\n\nexport interface DeloserOnElement {\n    deloser: Deloser;\n}\n\nexport interface RootOnElement {\n    root: Root;\n}\n\nexport interface ModalizerOnElement {\n    modalizer: Modalizer;\n}\n\nexport interface FocusableOnElement {\n    focusable: FocusableProps;\n}\n\nexport interface MoverOnElement {\n    mover: Mover;\n}\n\nexport interface GroupperOnElement {\n    groupper: Groupper;\n}\n\nexport interface UncontrolledOnElement {\n    uncontrolled: Record<string, never>;\n}\n\nexport interface ObservedOnElement {\n    observed: ObservedElementProps;\n}\n\nexport interface OutlineOnElement {\n    outline: OutlinedElementProps;\n}\n\nexport type TabsterAttributeProps = Partial<{\n    deloser: DeloserProps;\n    root: RootProps;\n    uncontrolled: UncontrolledOnElement[\"uncontrolled\"];\n    modalizer: ModalizerProps;\n    focusable: FocusableProps;\n    groupper: GroupperProps;\n    mover: MoverProps;\n    observed: ObservedElementProps;\n    outline: OutlinedElementProps;\n}>;\n\nexport interface TabsterAttributeOnElement {\n    string: string;\n    object: TabsterAttributeProps;\n}\n\nexport interface TabsterAugmentedAttributes {\n    [name: string]: string | null;\n}\n\nexport type TabsterOnElement = Partial<\n    RootOnElement &\n        DeloserOnElement &\n        ModalizerOnElement &\n        FocusableOnElement &\n        MoverOnElement &\n        GroupperOnElement &\n        ObservedOnElement &\n        OutlineOnElement &\n        UncontrolledOnElement\n>;\n\nexport interface OutlineElements {\n    container: HTMLDivElement;\n    left: HTMLDivElement;\n    top: HTMLDivElement;\n    right: HTMLDivElement;\n    bottom: HTMLDivElement;\n}\n\nexport interface TabsterElementStorageEntry {\n    tabster?: TabsterOnElement;\n    attr?: TabsterAttributeOnElement;\n    aug?: TabsterAugmentedAttributes;\n}\n\nexport interface TabsterElementStorage {\n    [uid: string]: TabsterElementStorageEntry;\n}\n\nexport type DisposeFunc = () => void;\n\nexport interface InternalAPI {\n    stopObserver(): void;\n    resumeObserver(syncState: boolean): void;\n}\n\ninterface TabsterCoreInternal {\n    /** @internal */\n    groupper?: GroupperAPI;\n    /** @internal */\n    mover?: MoverAPI;\n    /** @internal */\n    outline?: OutlineAPI;\n    /** @internal */\n    deloser?: DeloserAPI;\n    /** @internal */\n    modalizer?: ModalizerAPI;\n    /** @internal */\n    observedElement?: ObservedElementAPI;\n    /** @internal */\n    crossOrigin?: CrossOriginAPI;\n    /** @internal */\n    internal: InternalAPI;\n\n    // The version of the tabster package this instance is on\n    /** @internal */\n    _version: string;\n\n    // No operation flag for the debugging purposes\n    /** @internal */\n    _noop: boolean;\n\n    /** @internal */\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): TabsterElementStorageEntry | undefined;\n    /** @internal */\n    getWindow: GetWindow;\n\n    /** @internal */\n    createTabster(noRefCount?: boolean): Tabster;\n    /** @internal */\n    disposeTabster(wrapper: Tabster, allInstances?: boolean): void;\n    /** @internal */\n    forceCleanup(): void;\n}\n\nexport interface Tabster {\n    keyboardNavigation: KeyboardNavigationState;\n    focusedElement: FocusedElementState;\n    focusable: FocusableAPI;\n    root: RootAPI;\n    uncontrolled: UncontrolledAPI;\n\n    /** @internal */\n    core: TabsterCore;\n}\n\nexport interface TabsterCore\n    extends Pick<TabsterCoreProps, \"controlTab\" | \"rootDummyInputs\">,\n        Disposable,\n        TabsterCoreInternal,\n        Omit<Tabster, \"core\"> {}\n\nexport interface TabsterCompat {\n    attributeTransform?: <P>(old: P) => TabsterAttributeProps;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport function getTabsterOnElement(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): Types.TabsterOnElement | undefined {\n    return tabster.storageEntry(element)?.tabster;\n}\n\nexport function updateTabsterByAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    dispose?: boolean\n): void {\n    const newAttrValue =\n        dispose || tabster._noop\n            ? undefined\n            : element.getAttribute(Types.TabsterAttributeName);\n\n    let entry = tabster.storageEntry(element);\n    let newAttr: Types.TabsterAttributeOnElement | undefined;\n\n    if (newAttrValue) {\n        if (newAttrValue !== entry?.attr?.string) {\n            try {\n                const newValue = JSON.parse(\n                    newAttrValue\n                ) as Types.TabsterAttributeProps;\n\n                if (typeof newValue !== \"object\") {\n                    throw new Error(\n                        `Value is not a JSON object, got '${newAttrValue}'.`\n                    );\n                }\n\n                newAttr = {\n                    string: newAttrValue,\n                    object: newValue,\n                };\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        } else {\n            return;\n        }\n    } else if (!entry) {\n        return;\n    }\n\n    if (!entry) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        entry = tabster.storageEntry(element, true)!;\n    }\n\n    if (!entry.tabster) {\n        entry.tabster = {};\n    }\n\n    const tabsterOnElement = entry.tabster || {};\n    const oldTabsterProps = entry.attr?.object || {};\n    const newTabsterProps = newAttr?.object || {};\n\n    for (const key of Object.keys(\n        oldTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        if (!newTabsterProps[key]) {\n            if (key === \"root\") {\n                const root = tabsterOnElement[key];\n\n                if (root) {\n                    tabster.root.onRoot(root, true);\n                }\n            } else if (key === \"modalizer\") {\n                const modalizer = tabsterOnElement.modalizer;\n\n                if (tabster.modalizer && modalizer) {\n                    tabster.modalizer.updateModalizer(modalizer, true);\n                }\n            }\n\n            switch (key) {\n                case \"deloser\":\n                case \"root\":\n                case \"groupper\":\n                case \"modalizer\":\n                case \"mover\":\n                    // eslint-disable-next-line no-case-declarations\n                    const part = tabsterOnElement[key];\n                    if (part) {\n                        part.dispose();\n                        delete tabsterOnElement[key];\n                    }\n                    break;\n\n                case \"observed\":\n                    delete tabsterOnElement[key];\n                    if (tabster.observedElement) {\n                        tabster.observedElement.onObservedElementUpdate(\n                            element\n                        );\n                    }\n                    break;\n\n                case \"focusable\":\n                case \"outline\":\n                case \"uncontrolled\":\n                    delete tabsterOnElement[key];\n                    break;\n            }\n        }\n    }\n\n    for (const key of Object.keys(\n        newTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        switch (key) {\n            case \"deloser\":\n                if (tabsterOnElement.deloser) {\n                    tabsterOnElement.deloser.setProps(\n                        newTabsterProps.deloser as Types.DeloserProps\n                    );\n                } else {\n                    if (tabster.deloser) {\n                        tabsterOnElement.deloser =\n                            tabster.deloser.createDeloser(\n                                element,\n                                newTabsterProps.deloser as Types.DeloserProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Deloser API used before initializing, please call `getDeloser()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"root\":\n                if (tabsterOnElement.root) {\n                    tabsterOnElement.root.setProps(\n                        newTabsterProps.root as Types.RootProps\n                    );\n                } else {\n                    tabsterOnElement.root = tabster.root.createRoot(\n                        element,\n                        newTabsterProps.root as Types.RootProps\n                    );\n                }\n                tabster.root.onRoot(tabsterOnElement.root);\n                break;\n\n            case \"modalizer\":\n                if (tabsterOnElement.modalizer) {\n                    tabsterOnElement.modalizer.setProps(\n                        newTabsterProps.modalizer as Types.ModalizerProps\n                    );\n                } else {\n                    if (tabster.modalizer) {\n                        tabsterOnElement.modalizer =\n                            tabster.modalizer.createModalizer(\n                                element,\n                                newTabsterProps.modalizer as Types.ModalizerProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Modalizer API used before initializing, please call `getModalizer()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"focusable\":\n                tabsterOnElement.focusable = newTabsterProps.focusable;\n                break;\n\n            case \"groupper\":\n                if (tabsterOnElement.groupper) {\n                    tabsterOnElement.groupper.setProps(\n                        newTabsterProps.groupper as Types.GroupperProps\n                    );\n                } else {\n                    if (tabster.groupper) {\n                        tabsterOnElement.groupper =\n                            tabster.groupper.createGroupper(\n                                element,\n                                newTabsterProps.groupper as Types.GroupperProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Groupper API used before initializing, please call `getGroupper()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"mover\":\n                if (tabsterOnElement.mover) {\n                    tabsterOnElement.mover.setProps(\n                        newTabsterProps.mover as Types.MoverProps\n                    );\n                } else {\n                    if (tabster.mover) {\n                        tabsterOnElement.mover = tabster.mover.createMover(\n                            element,\n                            newTabsterProps.mover as Types.MoverProps\n                        );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Mover API used before initializing, please call `getMover()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"observed\":\n                if (tabster.observedElement) {\n                    tabsterOnElement.observed = newTabsterProps.observed;\n                    tabster.observedElement.onObservedElementUpdate(element);\n                } else if (__DEV__) {\n                    console.error(\n                        \"ObservedElement API used before initializing, please call `getObservedElement()`\"\n                    );\n                }\n                break;\n\n            case \"uncontrolled\":\n                tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;\n                break;\n\n            case \"outline\":\n                if (tabster.outline) {\n                    tabsterOnElement.outline = newTabsterProps.outline;\n                } else if (__DEV__) {\n                    console.error(\n                        \"Outline API used before initializing, please call `getOutline()`\"\n                    );\n                }\n                break;\n\n            default:\n                console.error(\n                    `Unknown key '${key}' in data-tabster attribute value.`\n                );\n        }\n    }\n\n    if (newAttr) {\n        entry.attr = newAttr;\n    } else {\n        if (Object.keys(tabsterOnElement).length === 0) {\n            delete entry.tabster;\n            delete entry.attr;\n        }\n        tabster.storageEntry(element, false);\n    }\n}\n\nexport function augmentAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    name: string,\n    value?: string | null // Restore original value when undefined.\n): void {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entry = tabster.storageEntry(element, true)!;\n\n    if (!entry.aug) {\n        if (value === undefined) {\n            return;\n        }\n\n        entry.aug = {};\n    }\n\n    if (value === undefined) {\n        if (name in entry.aug) {\n            const origVal = entry.aug[name];\n\n            delete entry.aug[name];\n\n            if (origVal === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, origVal);\n            }\n        }\n    } else {\n        if (!(name in entry.aug)) {\n            entry.aug[name] = element.getAttribute(name);\n        }\n\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    if (value === undefined && Object.keys(entry.aug).length === 0) {\n        delete entry.aug;\n        tabster.storageEntry(element, false);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { GetWindow } from \"./Types\";\n\nexport function createEventTarget(getWindow: GetWindow): EventTarget {\n    const global = getWindow() as unknown as typeof globalThis;\n\n    if (global.EventTarget) {\n        return new global.EventTarget();\n    }\n\n    return global.document.createElement(\"div\");\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"../Types\";\n\nexport abstract class Subscribable<A, B = undefined>\n    implements Types.Subscribable<A, B>\n{\n    protected _val: A | undefined;\n    private _callbacks: Types.SubscribableCallback<A, B>[] = [];\n\n    dispose(): void {\n        this._callbacks = [];\n        delete this._val;\n    }\n\n    subscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index < 0) {\n            this._callbacks.push(callback);\n        }\n    }\n\n    unsubscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    protected setVal(val: A, details: B): void {\n        if (this._val === val) {\n            return;\n        }\n\n        this._val = val;\n\n        this._callCallbacks(val, details);\n    }\n\n    protected getVal(): A | undefined {\n        return this._val;\n    }\n\n    protected trigger(val: A, details: B): void {\n        this._callCallbacks(val, details);\n    }\n\n    private _callCallbacks(val: A, details: B): void {\n        this._callbacks.forEach((callback) => callback(val, details));\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createKeyborg, disposeKeyborg, Keyborg } from \"keyborg\";\n\nimport * as Types from \"../Types\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class KeyboardNavigationState\n    extends Subscribable<boolean>\n    implements Types.KeyboardNavigationState\n{\n    private _keyborg?: Keyborg;\n\n    constructor(getWindow: Types.GetWindow) {\n        super();\n        this._keyborg = createKeyborg(getWindow());\n        this._keyborg.subscribe(this._onChange);\n    }\n\n    dispose(): void {\n        super.dispose();\n\n        if (this._keyborg) {\n            this._keyborg.unsubscribe(this._onChange);\n\n            disposeKeyborg(this._keyborg);\n\n            delete this._keyborg;\n        }\n    }\n\n    private _onChange = (isNavigatingWithKeyboard: boolean) => {\n        this.setVal(isNavigatingWithKeyboard, undefined);\n    };\n\n    static setVal(instance: Types.KeyboardNavigationState, val: boolean): void {\n        (instance as KeyboardNavigationState)._keyborg?.setVal(val);\n    }\n\n    isNavigatingWithKeyboard(): boolean {\n        return !!this._keyborg?.isNavigatingWithKeyboard();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport * as Types from \"./Types\";\nimport { GetWindow, Visibilities, Visibility } from \"./Types\";\n\ninterface HTMLElementWithBoundingRectCacheId extends HTMLElement {\n    __tabsterCacheId?: string;\n}\n\ninterface FocusedElementWithIgnoreFlag extends HTMLElement {\n    __shouldIgnoreFocus: boolean;\n}\n\nexport interface WindowWithUID extends Window {\n    __tabsterCrossOriginWindowUID?: string;\n}\n\nexport interface HTMLElementWithUID extends HTMLElement {\n    __tabsterElementUID?: string;\n}\n\nexport interface HTMLElementWithDummyContainer extends HTMLElement {\n    __tabsterDummyContainer?: WeakHTMLElement;\n}\n\nexport interface TabsterDOMRect {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\nexport interface InstanceContext {\n    elementByUId: { [uid: string]: WeakHTMLElement<HTMLElementWithUID> };\n    basics: InternalBasics;\n    WeakRef?: WeakRefConstructor;\n    containerBoundingRectCache: {\n        [id: string]: {\n            rect: TabsterDOMRect;\n            element: HTMLElementWithBoundingRectCacheId;\n        };\n    };\n    lastContainerBoundingRectCacheId: number;\n    containerBoundingRectCacheTimer?: number;\n    fakeWeakRefs: TabsterWeakRef<unknown>[];\n    fakeWeakRefsTimer?: number;\n    fakeWeakRefsStarted: boolean;\n}\n\nlet _isBrokenIE11: boolean;\n\nconst _DOMRect =\n    typeof DOMRect !== \"undefined\"\n        ? DOMRect\n        : class {\n              readonly bottom: number;\n              readonly left: number;\n              readonly right: number;\n              readonly top: number;\n\n              constructor(\n                  x?: number,\n                  y?: number,\n                  width?: number,\n                  height?: number\n              ) {\n                  this.left = x || 0;\n                  this.top = y || 0;\n                  this.right = (x || 0) + (width || 0);\n                  this.bottom = (y || 0) + (height || 0);\n              }\n          };\n\nlet _uidCounter = 0;\n\ntry {\n    // IE11 only accepts `filter` argument as a function (not object with the `acceptNode`\n    // property as the docs define). Also `entityReferenceExpansion` argument is not\n    // optional. And it throws exception when the above arguments aren't there.\n    document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);\n    _isBrokenIE11 = false;\n} catch (e) {\n    _isBrokenIE11 = true;\n}\n\ninterface WindowWithUtilsConext extends Window {\n    __tabsterInstanceContext?: InstanceContext;\n    Promise: PromiseConstructor;\n    WeakRef: WeakRefConstructor;\n}\n\nexport function getInstanceContext(getWindow: GetWindow): InstanceContext {\n    const win = getWindow() as WindowWithUtilsConext;\n\n    let ctx = win.__tabsterInstanceContext;\n\n    if (!ctx) {\n        ctx = {\n            elementByUId: {},\n            basics: {\n                Promise: win.Promise || undefined,\n                WeakRef: win.WeakRef || undefined,\n            },\n            containerBoundingRectCache: {},\n            lastContainerBoundingRectCacheId: 0,\n            fakeWeakRefs: [],\n            fakeWeakRefsStarted: false,\n        };\n\n        win.__tabsterInstanceContext = ctx;\n    }\n\n    return ctx;\n}\n\nexport function disposeInstanceContext(win: Window): void {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n\n    if (ctx) {\n        ctx.elementByUId = {};\n\n        delete ctx.WeakRef;\n\n        ctx.containerBoundingRectCache = {};\n\n        if (ctx.containerBoundingRectCacheTimer) {\n            win.clearTimeout(ctx.containerBoundingRectCacheTimer);\n        }\n\n        if (ctx.fakeWeakRefsTimer) {\n            win.clearTimeout(ctx.fakeWeakRefsTimer);\n        }\n\n        ctx.fakeWeakRefs = [];\n\n        delete (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    }\n}\n\nexport function createWeakMap<K extends object, V>(win: Window): WeakMap<K, V> {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    return new (ctx?.basics.WeakMap || WeakMap)();\n}\n\ninterface TabsterWeakRef<T> {\n    deref(): T | undefined;\n}\n\nclass FakeWeakRef<T extends HTMLElement = HTMLElement>\n    implements TabsterWeakRef<T>\n{\n    private _target: T | undefined;\n\n    constructor(target: T) {\n        this._target = target;\n    }\n\n    deref(): T | undefined {\n        return this._target;\n    }\n\n    static cleanup(fwr: FakeWeakRef, forceRemove?: boolean): boolean {\n        if (!fwr._target) {\n            return true;\n        }\n\n        if (\n            forceRemove ||\n            !documentContains(fwr._target.ownerDocument, fwr._target)\n        ) {\n            delete fwr._target;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class WeakHTMLElement<T extends HTMLElement = HTMLElement, D = undefined>\n    implements Types.WeakHTMLElement<D>\n{\n    private _ref: TabsterWeakRef<T> | undefined;\n    private _data: D | undefined;\n\n    constructor(getWindow: GetWindow, element: T, data?: D) {\n        const context = getInstanceContext(getWindow);\n\n        let ref: TabsterWeakRef<T>;\n        if (context.WeakRef) {\n            ref = new context.WeakRef(element);\n        } else {\n            ref = new FakeWeakRef(element);\n            context.fakeWeakRefs.push(ref);\n        }\n\n        this._ref = ref;\n        this._data = data;\n    }\n\n    get(): T | undefined {\n        const ref = this._ref;\n        let element: T | undefined;\n\n        if (ref) {\n            element = ref.deref();\n\n            if (!element) {\n                delete this._ref;\n            }\n        }\n\n        return element;\n    }\n\n    getData(): D | undefined {\n        return this._data;\n    }\n}\n\nexport function cleanupFakeWeakRefs(\n    getWindow: GetWindow,\n    forceRemove?: boolean\n): void {\n    const context = getInstanceContext(getWindow);\n    context.fakeWeakRefs = context.fakeWeakRefs.filter(\n        (e) => !FakeWeakRef.cleanup(e as FakeWeakRef, forceRemove)\n    );\n}\n\nexport function startFakeWeakRefsCleanup(getWindow: GetWindow): void {\n    const context = getInstanceContext(getWindow);\n\n    if (!context.fakeWeakRefsStarted) {\n        context.fakeWeakRefsStarted = true;\n        context.WeakRef = getWeakRef(context);\n    }\n\n    if (!context.fakeWeakRefsTimer) {\n        context.fakeWeakRefsTimer = getWindow().setTimeout(() => {\n            context.fakeWeakRefsTimer = undefined;\n            cleanupFakeWeakRefs(getWindow);\n            startFakeWeakRefsCleanup(getWindow);\n        }, 2 * 60 * 1000); // 2 minutes.\n    }\n}\n\nexport function stopFakeWeakRefsCleanupAndClearStorage(\n    getWindow: GetWindow\n): void {\n    const context = getInstanceContext(getWindow);\n\n    context.fakeWeakRefsStarted = false;\n\n    if (context.fakeWeakRefsTimer) {\n        getWindow().clearTimeout(context.fakeWeakRefsTimer);\n        context.fakeWeakRefsTimer = undefined;\n        context.fakeWeakRefs = [];\n    }\n}\n\nexport function createElementTreeWalker(\n    doc: Document,\n    root: Node,\n    acceptNode: (node: Node) => number\n): TreeWalker | undefined {\n    // IE11 will throw an exception when the TreeWalker root is not an Element.\n    if (root.nodeType !== Node.ELEMENT_NODE) {\n        return undefined;\n    }\n\n    // TypeScript isn't aware of IE11 behaving badly.\n    const filter = (_isBrokenIE11\n        ? acceptNode\n        : ({ acceptNode } as NodeFilter)) as unknown as NodeFilter;\n\n    return doc.createTreeWalker(\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        filter,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.\n        false /* Last argument is not optional for IE11! */\n    );\n}\n\nexport function getBoundingRect(\n    getWindow: GetWindow,\n    element: HTMLElementWithBoundingRectCacheId\n): TabsterDOMRect {\n    let cacheId = element.__tabsterCacheId;\n    const context = getInstanceContext(getWindow);\n    const cached = cacheId\n        ? context.containerBoundingRectCache[cacheId]\n        : undefined;\n\n    if (cached) {\n        return cached.rect;\n    }\n\n    const scrollingElement =\n        element.ownerDocument && element.ownerDocument.documentElement;\n\n    if (!scrollingElement) {\n        return new _DOMRect();\n    }\n\n    // A bounding rect of the top-level element contains the whole page regardless of the\n    // scrollbar. So, we improvise a little and limiting the final result...\n    let left = 0;\n    let top = 0;\n    let right = scrollingElement.clientWidth;\n    let bottom = scrollingElement.clientHeight;\n\n    if (element !== scrollingElement) {\n        const r = element.getBoundingClientRect();\n        left = Math.max(left, r.left);\n        top = Math.max(top, r.top);\n        right = Math.min(right, r.right);\n        bottom = Math.min(bottom, r.bottom);\n    }\n\n    const rect = new _DOMRect(\n        left < right ? left : -1,\n        top < bottom ? top : -1,\n        left < right ? right - left : 0,\n        top < bottom ? bottom - top : 0\n    );\n\n    if (!cacheId) {\n        cacheId = \"r-\" + ++context.lastContainerBoundingRectCacheId;\n        element.__tabsterCacheId = cacheId;\n    }\n\n    context.containerBoundingRectCache[cacheId] = {\n        rect,\n        element,\n    };\n\n    if (!context.containerBoundingRectCacheTimer) {\n        context.containerBoundingRectCacheTimer = window.setTimeout(() => {\n            context.containerBoundingRectCacheTimer = undefined;\n\n            for (const cId of Object.keys(context.containerBoundingRectCache)) {\n                delete context.containerBoundingRectCache[cId].element\n                    .__tabsterCacheId;\n            }\n\n            context.containerBoundingRectCache = {};\n        }, 50);\n    }\n\n    return rect;\n}\n\nexport function isElementVerticallyVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement\n): boolean {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        return (\n            elementRect.top >= containerRect.top &&\n            elementRect.bottom <= containerRect.bottom\n        );\n    }\n\n    return false;\n}\n\nexport function isElementVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    gap = 0\n): Visibility {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (\n            elementRect.left > containerRect.right ||\n            elementRect.top > containerRect.bottom ||\n            elementRect.bottom < containerRect.top ||\n            elementRect.right < containerRect.left\n        ) {\n            return Visibilities.Invisible;\n        }\n\n        if (\n            elementRect.top + gap >= containerRect.top &&\n            elementRect.top <= containerRect.bottom &&\n            elementRect.bottom >= containerRect.top &&\n            elementRect.bottom - gap <= containerRect.bottom &&\n            elementRect.left + gap >= containerRect.left &&\n            elementRect.left <= containerRect.right &&\n            elementRect.right >= containerRect.left &&\n            elementRect.right - gap <= containerRect.right\n        ) {\n            return Visibilities.Visible;\n        }\n\n        return Visibilities.PartiallyVisible;\n    }\n\n    return Visibilities.Invisible;\n}\n\nexport function scrollIntoView(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    alignToTop: boolean\n): void {\n    // Built-in DOM's scrollIntoView() is cool, but when we have nested containers,\n    // it scrolls all of them, not just the deepest one. So, trying to work it around.\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (alignToTop) {\n            container.scrollTop += elementRect.top - containerRect.top;\n        } else {\n            container.scrollTop += elementRect.bottom - containerRect.bottom;\n        }\n    }\n}\n\nexport function getScrollableContainer(\n    element: HTMLElement\n): HTMLElement | null {\n    const doc = element.ownerDocument;\n\n    if (doc) {\n        for (\n            let el: HTMLElement | null = element.parentElement;\n            el;\n            el = el.parentElement\n        ) {\n            if (\n                el.scrollWidth > el.clientWidth ||\n                el.scrollHeight > el.clientHeight\n            ) {\n                return el;\n            }\n        }\n\n        return doc.documentElement;\n    }\n\n    return null;\n}\n\nexport function makeFocusIgnored(element: HTMLElement): void {\n    (element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus = true;\n}\n\nexport function shouldIgnoreFocus(element: HTMLElement): boolean {\n    return !!(element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus;\n}\n\nexport function getUId(wnd: Window & { msCrypto?: Crypto }): string {\n    const rnd = new Uint32Array(4);\n\n    if (wnd.crypto && wnd.crypto.getRandomValues) {\n        wnd.crypto.getRandomValues(rnd);\n    } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {\n        wnd.msCrypto.getRandomValues(rnd);\n    } else {\n        for (let i = 0; i < rnd.length; i++) {\n            rnd[i] = 0xffffffff * Math.random();\n        }\n    }\n\n    const srnd: string[] = [];\n\n    for (let i = 0; i < rnd.length; i++) {\n        srnd.push(rnd[i].toString(36));\n    }\n\n    srnd.push(\"|\");\n    srnd.push((++_uidCounter).toString(36));\n    srnd.push(\"|\");\n    srnd.push(Date.now().toString(36));\n\n    return srnd.join(\"\");\n}\n\nexport function getElementUId(\n    getWindow: GetWindow,\n    element: HTMLElementWithUID\n): string {\n    const context = getInstanceContext(getWindow);\n    let uid = element.__tabsterElementUID;\n\n    if (!uid) {\n        uid = element.__tabsterElementUID = getUId(getWindow());\n    }\n\n    if (\n        !context.elementByUId[uid] &&\n        documentContains(element.ownerDocument, element)\n    ) {\n        context.elementByUId[uid] = new WeakHTMLElement(getWindow, element);\n    }\n\n    return uid;\n}\n\nexport function getElementByUId(\n    context: InstanceContext,\n    uid: string\n): WeakHTMLElement<HTMLElementWithUID, undefined> | undefined {\n    return context.elementByUId[uid];\n}\n\nexport function getWindowUId(win: WindowWithUID): string {\n    let uid = win.__tabsterCrossOriginWindowUID;\n\n    if (!uid) {\n        uid = win.__tabsterCrossOriginWindowUID = getUId(win);\n    }\n\n    return uid;\n}\n\nexport function clearElementCache(\n    getWindow: GetWindow,\n    parent?: HTMLElement\n): void {\n    const context = getInstanceContext(getWindow);\n\n    for (const key of Object.keys(context.elementByUId)) {\n        const wel = context.elementByUId[key];\n        const el = wel && wel.get();\n\n        if (el && parent) {\n            if (!parent.contains(el)) {\n                continue;\n            }\n        }\n\n        delete context.elementByUId[key];\n    }\n}\n\n// IE11 doesn't have document.contains()...\nexport function documentContains(\n    doc: HTMLDocument | null | undefined,\n    element: HTMLElement\n): boolean {\n    return !!doc?.body?.contains(element);\n}\n\nexport function matchesSelector(\n    element: HTMLElement,\n    selector: string\n): boolean {\n    interface HTMLElementWithMatches extends HTMLElement {\n        matchesSelector?: typeof HTMLElement.prototype.matches;\n        msMatchesSelector?: typeof HTMLElement.prototype.matches;\n    }\n\n    const matches =\n        element.matches ||\n        (element as HTMLElementWithMatches).matchesSelector ||\n        (element as HTMLElementWithMatches).msMatchesSelector ||\n        element.webkitMatchesSelector;\n\n    return matches && matches.call(element, selector);\n}\n\nexport function getPromise(getWindow: GetWindow): PromiseConstructor {\n    const context = getInstanceContext(getWindow);\n    if (context.basics.Promise) {\n        return context.basics.Promise;\n    }\n\n    throw new Error(\"No Promise defined.\");\n}\n\nexport function getWeakRef(\n    context: InstanceContext\n): WeakRefConstructor | undefined {\n    return context.basics.WeakRef;\n}\n\ninterface InternalBasics {\n    Promise?: PromiseConstructor;\n    WeakRef?: WeakRefConstructor;\n    WeakMap?: WeakMapConstructor;\n}\n\nexport function setBasics(win: Window, basics: InternalBasics): void {\n    const context = getInstanceContext(() => win);\n\n    let key: keyof InternalBasics;\n\n    key = \"Promise\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakRef\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakMap\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n}\n\nlet _lastTabsterPartId = 0;\n\nexport abstract class TabsterPart<P, D = undefined>\n    implements Types.TabsterPart<P>\n{\n    protected _tabster: Types.TabsterCore;\n    protected _element: WeakHTMLElement<HTMLElement, D>;\n    protected _props: P;\n\n    readonly id: string;\n\n    constructor(tabster: Types.TabsterCore, element: HTMLElement, props: P) {\n        const getWindow = tabster.getWindow;\n        this._tabster = tabster;\n        this._element = new WeakHTMLElement(getWindow, element);\n        this._props = { ...props };\n        this.id = \"i\" + ++_lastTabsterPartId;\n    }\n\n    getElement(): HTMLElement | undefined {\n        return this._element.get();\n    }\n\n    getProps(): P {\n        return this._props;\n    }\n\n    setProps(props: P): void {\n        this._props = { ...props };\n    }\n}\n\nexport interface DummyInputProps {\n    /** The input is created to be used only once and autoremoved when focused. */\n    isPhantom?: boolean;\n    /** Whether the input is before or after the content it is guarding.  */\n    isFirst: boolean;\n}\n\nexport type DummyInputFocusCallback = (\n    dummyInput: DummyInput,\n    isBackward: boolean,\n    relatedTarget: HTMLElement | null\n) => void;\n\n/**\n * Dummy HTML elements that are used as focus sentinels for the DOM enclosed within them\n */\nexport class DummyInput {\n    private _isPhantom: DummyInputProps[\"isPhantom\"];\n    private _disposeTimer: number | undefined;\n    private _clearDisposeTimeout: (() => void) | undefined;\n\n    input: HTMLElement | undefined;\n    /** Flag that indicates focus is leaving the boundary of the dummy input */\n    shouldMoveOut?: boolean;\n    isFirst: DummyInputProps[\"isFirst\"];\n    isOutside: boolean;\n    /** Called when the input is focused */\n    onFocusIn?: DummyInputFocusCallback;\n    /** Called when the input is blurred */\n    onFocusOut?: DummyInputFocusCallback;\n\n    constructor(\n        getWindow: Types.GetWindow,\n        isOutside: boolean,\n        props: DummyInputProps,\n        element?: WeakHTMLElement\n    ) {\n        const win = getWindow();\n        const input = win.document.createElement(\"i\");\n\n        input.tabIndex = 0;\n        input.setAttribute(\"role\", \"none\");\n\n        input.setAttribute(Types.TabsterDummyInputAttributeName, \"\");\n        input.setAttribute(\"aria-hidden\", \"true\");\n\n        const style = input.style;\n        style.position = \"fixed\";\n        style.width = style.height = \"1px\";\n        style.opacity = \"0.001\";\n        style.zIndex = \"-1\";\n        style.setProperty(\"content-visibility\", \"hidden\");\n\n        makeFocusIgnored(input);\n\n        this.input = input;\n        this.isFirst = props.isFirst;\n        this.isOutside = isOutside;\n        this._isPhantom = props.isPhantom ?? false;\n\n        input.addEventListener(\"focusin\", this._focusIn);\n        input.addEventListener(\"focusout\", this._focusOut);\n\n        (input as HTMLElementWithDummyContainer).__tabsterDummyContainer =\n            element;\n\n        if (this._isPhantom) {\n            this._disposeTimer = win.setTimeout(() => {\n                delete this._disposeTimer;\n                this.dispose();\n            }, 0);\n\n            this._clearDisposeTimeout = () => {\n                if (this._disposeTimer) {\n                    win.clearTimeout(this._disposeTimer);\n                    delete this._disposeTimer;\n                }\n\n                delete this._clearDisposeTimeout;\n            };\n        }\n    }\n\n    dispose(): void {\n        if (this._clearDisposeTimeout) {\n            this._clearDisposeTimeout();\n        }\n\n        const input = this.input;\n\n        if (!input) {\n            return;\n        }\n\n        delete this.onFocusIn;\n        delete this.onFocusOut;\n        delete this.input;\n\n        input.removeEventListener(\"focusin\", this._focusIn);\n        input.removeEventListener(\"focusout\", this._focusOut);\n\n        delete (input as HTMLElementWithDummyContainer).__tabsterDummyContainer;\n\n        input.parentElement?.removeChild(input);\n    }\n\n    setTopLeft(top: number, left: number): void {\n        const style = this.input?.style;\n\n        if (style) {\n            style.top = `${top}px`;\n            style.left = `${left}px`;\n        }\n    }\n\n    private _isBackward(\n        isIn: boolean,\n        current: HTMLElement,\n        previous: HTMLElement | null\n    ): boolean {\n        return isIn && !previous\n            ? !this.isFirst\n            : !!(\n                  previous &&\n                  current.compareDocumentPosition(previous) &\n                      Node.DOCUMENT_POSITION_FOLLOWING\n              );\n    }\n\n    private _focusIn = (e: FocusEvent): void => {\n        const input = this.input;\n\n        if (this.onFocusIn && input) {\n            const relatedTarget =\n                DummyInputManager.getLastPhantomFrom() ||\n                (e.relatedTarget as HTMLElement | null);\n\n            this.onFocusIn(\n                this,\n                this._isBackward(true, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n\n    private _focusOut = (e: FocusEvent): void => {\n        this.shouldMoveOut = false;\n\n        const input = this.input;\n\n        if (this.onFocusOut && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusOut(\n                this,\n                this._isBackward(false, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n}\n\ninterface HTMLElementWithDummyInputs extends HTMLElement {\n    __tabsterDummy?: DummyInputManagerCore;\n}\n\nexport const DummyInputManagerPriorities = {\n    Root: 1,\n    Modalizer: 2,\n    Mover: 3,\n    Groupper: 4,\n};\n\nexport class DummyInputManager {\n    private _instance?: DummyInputManagerCore;\n    private _onFocusIn?: DummyInputFocusCallback;\n    private _onFocusOut?: DummyInputFocusCallback;\n    protected _element: WeakHTMLElement;\n    private static _lastPhantomFrom: HTMLElement | undefined;\n\n    moveOutWithDefaultAction: DummyInputManagerCore[\"moveOutWithDefaultAction\"];\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        priority: number,\n        outsideByDefault?: boolean\n    ) {\n        this._element = element;\n\n        this._instance = new DummyInputManagerCore(\n            tabster,\n            element,\n            this,\n            priority,\n            outsideByDefault\n        );\n\n        this.moveOutWithDefaultAction = (backwards: boolean) => {\n            this._instance?.moveOutWithDefaultAction(backwards);\n        };\n    }\n\n    protected _setHandlers(\n        onFocusIn?: DummyInputFocusCallback,\n        onFocusOut?: DummyInputFocusCallback\n    ): void {\n        this._onFocusIn = onFocusIn;\n        this._onFocusOut = onFocusOut;\n    }\n\n    getHandler(isIn: boolean): DummyInputFocusCallback | undefined {\n        return isIn ? this._onFocusIn : this._onFocusOut;\n    }\n\n    setTabbable(tabbable: boolean) {\n        this._instance?.setTabbable(this, tabbable);\n    }\n\n    dispose(): void {\n        if (this._instance) {\n            this._instance.dispose(this);\n            delete this._instance;\n        }\n\n        delete this._onFocusIn;\n        delete this._onFocusOut;\n    }\n\n    static getLastPhantomFrom(): HTMLElement | undefined {\n        const ret = DummyInputManager._lastPhantomFrom;\n        delete DummyInputManager._lastPhantomFrom;\n        return ret;\n    }\n\n    static moveWithPhantomDummy(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        moveOutside: boolean,\n        isBackward: boolean\n    ): void {\n        const dummy: DummyInput = new DummyInput(tabster.getWindow, true, {\n            isPhantom: true,\n            isFirst: true,\n        });\n\n        const input = dummy.input;\n\n        if (input) {\n            const parent = element.parentElement;\n\n            if (parent) {\n                let insertBefore = (\n                    (moveOutside && !isBackward) || (!moveOutside && isBackward)\n                        ? element.nextElementSibling\n                        : element\n                ) as HTMLElementWithDummyContainer | null;\n\n                if (insertBefore) {\n                    if (isBackward) {\n                        const beforeBefore =\n                            insertBefore.previousElementSibling as HTMLElementWithDummyContainer | null;\n\n                        if (\n                            beforeBefore &&\n                            beforeBefore.__tabsterDummyContainer\n                        ) {\n                            insertBefore = beforeBefore;\n                        }\n                    } else if (insertBefore.__tabsterDummyContainer) {\n                        insertBefore =\n                            insertBefore.nextElementSibling as HTMLElementWithDummyContainer | null;\n                    }\n                }\n\n                parent.insertBefore(input, insertBefore);\n\n                DummyInputManager._lastPhantomFrom = element;\n\n                tabster.getWindow().setTimeout(() => {\n                    delete DummyInputManager._lastPhantomFrom;\n                }, 0);\n\n                nativeFocus(input);\n            }\n        }\n    }\n}\n\ninterface DummyInputWrapper {\n    manager: DummyInputManager;\n    priority: number;\n    tabbable: boolean;\n}\n\n/**\n * Parent class that encapsulates the behaviour of dummy inputs (focus sentinels)\n */\nclass DummyInputManagerCore {\n    private _unobserve: (() => void) | undefined;\n    private _addTimer: number | undefined;\n    private _getWindow: Types.GetWindow;\n    private _wrappers: DummyInputWrapper[] = [];\n    private _element: WeakHTMLElement | undefined;\n    private _isOutside = false;\n    private _firstDummy: DummyInput | undefined;\n    private _lastDummy: DummyInput | undefined;\n    private _transformElements: HTMLElement[] = [];\n    private _scrollTimer: number | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        manager: DummyInputManager,\n        priority: number,\n        outsideByDefault?: boolean\n    ) {\n        const el = element.get() as HTMLElementWithDummyInputs;\n\n        if (!el) {\n            throw new Error(\"No element\");\n        }\n\n        this._getWindow = tabster.getWindow;\n\n        const instance = el.__tabsterDummy;\n\n        (instance || this)._wrappers.push({\n            manager,\n            priority,\n            tabbable: true,\n        });\n\n        if (instance) {\n            return instance;\n        }\n\n        el.__tabsterDummy = this;\n\n        this._firstDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: true,\n            },\n            element\n        );\n\n        this._lastDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: false,\n            },\n            element\n        );\n\n        this._firstDummy.onFocusIn = this._onFocusIn;\n        this._firstDummy.onFocusOut = this._onFocusOut;\n        this._lastDummy.onFocusIn = this._onFocusIn;\n        this._lastDummy.onFocusOut = this._onFocusOut;\n\n        this._element = element;\n        this._addDummyInputs();\n\n        // Some elements allow only specific types of direct descendants and we need to\n        // put our dummy inputs inside or outside of the element accordingly.\n        const tagName = element.get()?.tagName;\n        this._isOutside =\n            (outsideByDefault ||\n                tagName === \"UL\" ||\n                tagName === \"OL\" ||\n                tagName === \"TABLE\") &&\n            !(tagName === \"LI\" || tagName === \"TD\" || tagName === \"TH\");\n\n        // older versions of testing frameworks like JSDOM don't support MutationObserver\n        // https://github.com/jsdom/jsdom/issues/639\n        // use this way of getting NODE_ENV because tsdx does not support a test environment\n        // https://github.com/jaredpalmer/tsdx/issues/167\n        if (\n            typeof process === \"undefined\" ||\n            process.env[\"NODE_ENV\"] !== \"test\"\n        ) {\n            this._observeMutations();\n        }\n    }\n\n    dispose(manager: DummyInputManager, force?: boolean): void {\n        const wrappers = (this._wrappers = this._wrappers.filter(\n            (w) => w.manager !== manager && !force\n        ));\n\n        if (wrappers.length === 0) {\n            delete (this._element?.get() as HTMLElementWithDummyInputs)\n                .__tabsterDummy;\n            if (this._unobserve) {\n                this._unobserve();\n                delete this._unobserve;\n            }\n\n            for (const el of this._transformElements) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n            this._transformElements = [];\n\n            const win = this._getWindow();\n\n            if (this._scrollTimer) {\n                win.clearTimeout(this._scrollTimer);\n                delete this._scrollTimer;\n            }\n\n            if (this._addTimer) {\n                win.clearTimeout(this._addTimer);\n                delete this._addTimer;\n            }\n\n            this._firstDummy?.dispose();\n            this._lastDummy?.dispose();\n        }\n    }\n\n    private _onFocus(\n        isIn: boolean,\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void {\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            wrapper.manager.getHandler(isIn)?.(\n                dummyInput,\n                isBackward,\n                relatedTarget\n            );\n        }\n    }\n\n    private _onFocusIn = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(true, dummyInput, isBackward, relatedTarget);\n    };\n\n    private _onFocusOut = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(false, dummyInput, isBackward, relatedTarget);\n    };\n\n    /**\n     * Prepares to move focus out of the given element by focusing\n     * one of the dummy inputs and setting the `shouldMoveOut` flag\n     * @param backwards focus moving to an element behind the given element\n     */\n    moveOutWithDefaultAction = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first?.input && last?.input) {\n            if (backwards) {\n                first.shouldMoveOut = true;\n                first.input.tabIndex = 0;\n                first.input.focus();\n            } else {\n                last.shouldMoveOut = true;\n                last.input.tabIndex = 0;\n                last.input.focus();\n            }\n        }\n    };\n\n    setTabbable = (manager: DummyInputManager, tabbable: boolean) => {\n        for (const w of this._wrappers) {\n            if (w.manager === manager) {\n                w.tabbable = tabbable;\n                break;\n            }\n        }\n\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            const tabIndex = wrapper.tabbable ? 0 : -1;\n\n            let input = this._firstDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n\n            input = this._lastDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n        }\n    };\n\n    private _getCurrent(): DummyInputWrapper | undefined {\n        this._wrappers.sort((a, b) => {\n            if (a.tabbable !== b.tabbable) {\n                return a.tabbable ? -1 : 1;\n            }\n\n            return a.priority - b.priority;\n        });\n\n        return this._wrappers[0];\n    }\n\n    /**\n     * Adds dummy inputs as the first and last child of the given element\n     * Called each time the children under the element is mutated\n     */\n    private _addDummyInputs() {\n        if (this._addTimer) {\n            return;\n        }\n\n        this._addTimer = this._getWindow().setTimeout(() => {\n            delete this._addTimer;\n\n            const element = this._element?.get();\n            const dif = this._firstDummy?.input;\n            const dil = this._lastDummy?.input;\n\n            if (!element || !dif || !dil) {\n                return;\n            }\n\n            if (this._isOutside) {\n                const elementParent = element.parentElement;\n\n                if (elementParent) {\n                    const nextSibling = element.nextElementSibling;\n\n                    if (nextSibling !== dil) {\n                        elementParent.insertBefore(dil, nextSibling);\n                    }\n\n                    if (element.previousElementSibling !== dif) {\n                        elementParent.insertBefore(dif, element);\n                    }\n                }\n            } else {\n                if (element.lastElementChild !== dil) {\n                    element.appendChild(dil);\n                }\n\n                const firstElementChild = element.firstElementChild;\n\n                if (firstElementChild && firstElementChild !== dif) {\n                    element.insertBefore(dif, firstElementChild);\n                }\n            }\n\n            this._addTransformOffsets();\n        }, 0);\n    }\n\n    /**\n     * Creates a mutation observer to ensure that on DOM changes, the dummy inputs\n     * stay as the first and last child elements\n     */\n    private _observeMutations(): void {\n        if (this._unobserve) {\n            return;\n        }\n\n        const observer = new MutationObserver(() => {\n            if (this._unobserve) {\n                this._addDummyInputs();\n            }\n        });\n\n        const element = this._element?.get();\n        const actualElement = this._isOutside\n            ? element?.parentElement\n            : element;\n\n        if (actualElement) {\n            observer.observe(actualElement, { childList: true });\n\n            this._unobserve = () => {\n                observer.disconnect();\n            };\n        }\n    }\n\n    private _addTransformOffsets = (): void => {\n        const win = this._getWindow();\n\n        if (this._scrollTimer) {\n            win.clearTimeout(this._scrollTimer);\n        }\n\n        // Making sure we're not updating the dummy inputs while scrolling to avoid excessive reflows.\n        this._scrollTimer = win.setTimeout(() => {\n            delete this._scrollTimer;\n            this._reallyAddTransformOffsets();\n        }, 100);\n    };\n\n    private _reallyAddTransformOffsets(): void {\n        const from = this._firstDummy?.input || this._lastDummy?.input;\n        const transformElements = this._transformElements;\n        const newTransformElements: HTMLElement[] = [];\n        const transformElementsMap = new WeakMap<HTMLElement, HTMLElement>();\n        const newTransformElementsMap = new WeakMap<HTMLElement, HTMLElement>();\n        let scrollTop = 0;\n        let scrollLeft = 0;\n\n        for (const el of transformElements) {\n            transformElementsMap.set(el, el);\n        }\n\n        const win = this._getWindow();\n\n        for (\n            let element: HTMLElement | undefined | null = from;\n            element;\n            element = element.parentElement\n        ) {\n            const transform = win.getComputedStyle(element).transform;\n            if (transform && transform !== \"none\") {\n                let el = transformElementsMap.get(element);\n\n                if (!el) {\n                    el = element;\n                    el.addEventListener(\"scroll\", this._addTransformOffsets);\n                }\n\n                newTransformElements.push(el);\n                newTransformElementsMap.set(el, el);\n\n                scrollTop += el.scrollTop;\n                scrollLeft += el.scrollLeft;\n            }\n        }\n\n        for (const el of transformElements) {\n            if (!newTransformElementsMap.get(el)) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n        }\n\n        this._transformElements = newTransformElements;\n\n        this._firstDummy?.setTopLeft(scrollTop, scrollLeft);\n        this._lastDummy?.setTopLeft(scrollTop, scrollLeft);\n    }\n}\n\nexport function getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (let i = container.lastElementChild; i; i = i.lastElementChild) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport function getAdjacentElement(\n    from: HTMLElement,\n    prev?: boolean\n): HTMLElement | undefined {\n    let cur: HTMLElement | null = from;\n    let adjacent: HTMLElement | null = null;\n\n    while (cur && !adjacent) {\n        adjacent = (\n            prev ? cur.previousElementSibling : cur.nextElementSibling\n        ) as HTMLElement | null;\n        cur = cur.parentElement;\n    }\n\n    return adjacent || undefined;\n}\n\nexport function triggerEvent<D>(\n    target: HTMLElement | EventTarget,\n    name: string,\n    details: D\n): boolean {\n    const event = document.createEvent(\n        \"HTMLEvents\"\n    ) as Types.TabsterEventWithDetails<D>;\n\n    event.initEvent(name, true, true);\n\n    event.details = details;\n\n    target.dispatchEvent(event);\n\n    return !event.defaultPrevented;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createEventTarget } from \"./EventTarget\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport * as Types from \"./Types\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nexport interface WindowWithTabsterInstance extends Window {\n    __tabsterInstance?: Types.TabsterCore;\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    id?: string\n) {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-root\");\n            } else {\n                element.style.setProperty(\"--tabster-root\", id + \",\");\n            }\n        }\n    }\n}\n\nclass RootDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _setFocused: (focused: boolean, fromAdjacent?: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        setFocused: (focused: boolean, fromAdjacent?: boolean) => void\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Root);\n\n        this._setHandlers(this._onDummyInputFocus);\n\n        this._tabster = tabster;\n        this._setFocused = setFocused;\n    }\n\n    private _onDummyInputFocus = (dummyInput: DummyInput): void => {\n        if (dummyInput.shouldMoveOut) {\n            // When we've reached the last focusable element, we want to let the browser\n            // to move the focus outside of the page. In order to do that we're synchronously\n            // calling focus() of the dummy input from the Tab key handler and allowing\n            // the default action to move the focus out.\n            this._setFocused(false, true);\n        } else {\n            // The only way a dummy input gets focused is during the keyboard navigation.\n            KeyboardNavigationState.setVal(\n                this._tabster.keyboardNavigation,\n                true\n            );\n\n            const element = this._element.get();\n\n            if (element) {\n                this._setFocused(true, true);\n\n                const hasFocused = dummyInput.isFirst\n                    ? this._tabster.focusedElement.focusFirst({\n                          container: element,\n                      })\n                    : this._tabster.focusedElement.focusLast({\n                          container: element,\n                      });\n\n                if (hasFocused) {\n                    return;\n                }\n            }\n\n            dummyInput.input?.blur();\n        }\n    };\n}\n\nexport class Root\n    extends TabsterPart<Types.RootProps, undefined>\n    implements Types.Root\n{\n    readonly uid: string;\n\n    private _dummyManager?: RootDummyManager;\n    private _isFocused = false;\n    private _setFocusedTimer: number | undefined;\n    private _setTabbableTimer: number | undefined;\n    private _onDispose: (root: Root) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (root: Root) => void,\n        props: Types.RootProps\n    ) {\n        super(tabster, element, props);\n\n        this._onDispose = onDispose;\n\n        const win = tabster.getWindow;\n        this.uid = getElementUId(win, element);\n\n        if (tabster.controlTab || tabster.rootDummyInputs) {\n            this._dummyManager = new RootDummyManager(\n                tabster,\n                this._element,\n                this._setFocused\n            );\n        }\n\n        tabster.focusedElement.subscribe(this._onFocus);\n\n        this._add();\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const win = this._tabster.getWindow();\n\n        if (this._setFocusedTimer) {\n            win.clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._setTabbableTimer) {\n            win.clearTimeout(this._setTabbableTimer);\n            delete this._setTabbableTimer;\n        }\n\n        this._dummyManager?.dispose();\n        this._remove();\n    }\n\n    moveOutWithDefaultAction(isBackward: boolean) {\n        const dummyManager = this._dummyManager;\n\n        if (dummyManager) {\n            dummyManager.moveOutWithDefaultAction(isBackward);\n        } else {\n            const el = this.getElement();\n\n            if (el) {\n                RootDummyManager.moveWithPhantomDummy(\n                    this._tabster,\n                    el,\n                    true,\n                    isBackward\n                );\n            }\n        }\n    }\n\n    private _setFocused = (\n        hasFocused: boolean,\n        fromAdjacent?: boolean\n    ): void => {\n        if (this._setFocusedTimer) {\n            this._tabster.getWindow().clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._isFocused === hasFocused) {\n            return;\n        }\n\n        const element = this._element.get();\n\n        if (element) {\n            if (hasFocused) {\n                this._isFocused = true;\n                triggerEvent<Types.RootFocusEventDetails>(\n                    this._tabster.root.eventTarget,\n                    \"focus\",\n                    { element, fromAdjacent }\n                );\n            } else {\n                this._setFocusedTimer = this._tabster\n                    .getWindow()\n                    .setTimeout(() => {\n                        delete this._setFocusedTimer;\n                        this._isFocused = false;\n                        triggerEvent<Types.RootFocusEventDetails>(\n                            this._tabster.root.eventTarget,\n                            \"blur\",\n                            { element, fromAdjacent }\n                        );\n                    }, 0);\n            }\n        }\n    };\n\n    private _onFocus = (e: HTMLElement | undefined) => {\n        const win = this._tabster.getWindow();\n\n        if (this._setTabbableTimer) {\n            win.clearTimeout(this._setTabbableTimer);\n            delete this._setTabbableTimer;\n        }\n\n        if (e) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, e);\n\n            if (ctx) {\n                this._setFocused(ctx.root.getElement() === this._element.get());\n            }\n\n            if (!ctx || ctx.uncontrolled || this._tabster.rootDummyInputs) {\n                this._dummyManager?.setTabbable(false);\n                return;\n            }\n        } else {\n            this._setFocused(false);\n        }\n\n        this._setTabbableTimer = win.setTimeout(() => {\n            delete this._setTabbableTimer;\n            this._dummyManager?.setTabbable(true);\n        }, 0);\n    };\n\n    private _add(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, false, this.uid);\n        }\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRootProps(props: Types.RootProps): void {\n    // TODO: Implement validation.\n}\n\nexport class RootAPI implements Types.RootAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _initTimer: number | undefined;\n    private _autoRoot: Types.RootProps | undefined;\n    private _autoRootInstance: Root | undefined;\n    private _roots: Record<string, Types.Root> = {};\n    rootById: { [id: string]: Types.Root } = {};\n    eventTarget: EventTarget;\n\n    constructor(tabster: Types.TabsterCore, autoRoot?: Types.RootProps) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._initTimer = this._win().setTimeout(this._init, 0);\n        this._autoRoot = autoRoot;\n        this.eventTarget = createEventTarget(this._win);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._autoRootInstance) {\n            this._autoRootInstance.dispose();\n            delete this._autoRootInstance;\n            delete this._autoRoot;\n        }\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        Object.keys(this._roots).forEach((rootId) => {\n            if (this._roots[rootId]) {\n                this._roots[rootId].dispose();\n                delete this._roots[rootId];\n            }\n        });\n\n        this.rootById = {};\n    }\n\n    createRoot(element: HTMLElement, props: Types.RootProps): Types.Root {\n        if (__DEV__) {\n            validateRootProps(props);\n        }\n\n        const newRoot = new Root(\n            this._tabster,\n            element,\n            this._onRootDispose,\n            props\n        ) as Types.Root;\n\n        this._roots[newRoot.id] = newRoot;\n\n        return newRoot;\n    }\n\n    static getRootByUId(\n        getWindow: Types.GetWindow,\n        id: string\n    ): Types.Root | undefined {\n        const tabster = (getWindow() as WindowWithTabsterInstance)\n            .__tabsterInstance;\n        return tabster && (tabster.root as RootAPI).rootById[id];\n    }\n\n    /**\n     * Fetches the tabster context for an element walking up its ancestors\n     *\n     * @param tabster Tabster instance\n     * @param element The element the tabster context should represent\n     * @param options Additional options\n     * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations\n     */\n    static getTabsterContext(\n        tabster: Types.TabsterCore,\n        element: Node,\n        options: Types.GetTabsterContextOptions = {}\n    ): Types.TabsterContext | undefined {\n        if (!element.ownerDocument) {\n            return undefined;\n        }\n\n        const checkRtl = options.checkRtl;\n        let root: Types.Root | undefined;\n        let modalizer: Types.Modalizer | undefined;\n        let groupper: Types.Groupper | undefined;\n        let mover: Types.Mover | undefined;\n        let isExcludedFromMover = false;\n        let isGroupperFirst: boolean | undefined;\n        let isRtl: boolean | undefined;\n        let uncontrolled: HTMLElement | undefined;\n        let curElement: Node | null = element;\n        const ignoreKeydown: Types.FocusableProps[\"ignoreKeydown\"] = {};\n\n        while (curElement && (!root || checkRtl)) {\n            const tabsterOnElement = getTabsterOnElement(\n                tabster,\n                curElement as HTMLElement\n            );\n\n            if (checkRtl && isRtl === undefined) {\n                const dir = (curElement as HTMLElement).dir;\n\n                if (dir) {\n                    isRtl = dir.toLowerCase() === \"rtl\";\n                }\n            }\n\n            if (!tabsterOnElement) {\n                curElement = curElement.parentElement;\n                continue;\n            }\n\n            if (tabsterOnElement.uncontrolled) {\n                uncontrolled = curElement as HTMLElement;\n            }\n\n            if (\n                !mover &&\n                tabsterOnElement.focusable?.excludeFromMover &&\n                !groupper\n            ) {\n                isExcludedFromMover = true;\n            }\n\n            const curGroupper = tabsterOnElement.groupper;\n            const curMover = tabsterOnElement.mover;\n\n            if (!groupper && curGroupper) {\n                groupper = curGroupper;\n            }\n\n            if (!mover && curMover) {\n                mover = curMover;\n                isGroupperFirst = !!groupper;\n            }\n\n            if (!modalizer && tabsterOnElement.modalizer) {\n                modalizer = tabsterOnElement.modalizer;\n            }\n\n            if (tabsterOnElement.root) {\n                root = tabsterOnElement.root;\n            }\n\n            if (tabsterOnElement.focusable?.ignoreKeydown) {\n                Object.assign(\n                    ignoreKeydown,\n                    tabsterOnElement.focusable.ignoreKeydown\n                );\n            }\n\n            curElement = curElement.parentElement;\n        }\n\n        // No root element could be found, try to get an auto root\n        if (!root) {\n            const rootAPI = tabster.root as RootAPI;\n            const autoRoot = rootAPI._autoRoot;\n\n            if (autoRoot && !rootAPI._autoRootInstance) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    rootAPI._autoRootInstance = new Root(\n                        rootAPI._tabster,\n                        body,\n                        rootAPI._onRootDispose,\n                        autoRoot\n                    );\n                }\n            }\n\n            root = rootAPI._autoRootInstance;\n        }\n\n        if (groupper && !mover) {\n            isGroupperFirst = true;\n        }\n\n        return root\n            ? {\n                  root,\n                  modalizer,\n                  groupper,\n                  mover,\n                  isGroupperFirst,\n                  isRtl: checkRtl ? !!isRtl : undefined,\n                  uncontrolled,\n                  isExcludedFromMover,\n                  ignoreKeydown,\n              }\n            : undefined;\n    }\n\n    onRoot(root: Types.Root, removed?: boolean): void {\n        if (removed) {\n            delete this.rootById[root.uid];\n        } else {\n            this.rootById[root.uid] = root;\n        }\n    }\n\n    private _onRootDispose = (root: Root) => {\n        delete this._roots[root.id];\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nconst _containerHistoryLength = 10;\n\nexport abstract class DeloserItemBase<C> {\n    abstract resetFocus(): Promise<boolean>;\n    abstract belongsTo(deloser: C): boolean;\n}\n\nexport class DeloserItem extends DeloserItemBase<Types.Deloser> {\n    readonly uid: string;\n    private _tabster: Types.TabsterCore;\n    private _deloser: Types.Deloser;\n\n    constructor(tabster: Types.TabsterCore, deloser: Types.Deloser) {\n        super();\n        this.uid = deloser.uid;\n        this._tabster = tabster;\n        this._deloser = deloser;\n    }\n\n    belongsTo(deloser: Types.Deloser): boolean {\n        return deloser === this._deloser;\n    }\n\n    unshift(element: HTMLElement): void {\n        this._deloser.unshift(element);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const available = this._deloser.findAvailable();\n        return available\n            ? this._tabster.focusedElement.focus(available)\n            : false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const getWindow = this._tabster.getWindow;\n        return getPromise(getWindow).resolve(this._deloser.resetFocus());\n    }\n}\n\nexport abstract class DeloserHistoryByRootBase<\n    I,\n    D extends DeloserItemBase<I>\n> {\n    protected _tabster: Types.TabsterCore;\n    protected _history: D[] = [];\n    readonly rootUId: string;\n\n    constructor(tabster: Types.TabsterCore, rootUId: string) {\n        this._tabster = tabster;\n        this.rootUId = rootUId;\n    }\n\n    getLength(): number {\n        return this._history.length;\n    }\n\n    removeDeloser(deloser: I): void {\n        this._history = this._history.filter((c) => !c.belongsTo(deloser));\n    }\n\n    hasDeloser(deloser: I): boolean {\n        return this._history.some((d) => d.belongsTo(deloser));\n    }\n\n    abstract focusAvailable(from: I | null): Promise<boolean>;\n    abstract resetFocus(from: I | null): Promise<boolean>;\n}\n\nclass DeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    Types.Deloser,\n    DeloserItem\n> {\n    unshiftToDeloser(deloser: Types.Deloser, element: HTMLElement): void {\n        let item: DeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new DeloserItem(this._tabster, deloser);\n        }\n\n        item.unshift(element);\n\n        this._history.unshift(item);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await i.focusAvailable())) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n        const resetQueue: { [id: string]: DeloserItem } = {};\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && !resetQueue[i.uid]) {\n                resetQueue[i.uid] = i;\n            }\n        }\n\n        // Nothing is found, at least try to reset.\n        for (const id of Object.keys(resetQueue)) {\n            if (await resetQueue[id].resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nexport class DeloserHistory {\n    private _tabster: Types.TabsterCore;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _history: DeloserHistoryByRootBase<\n        unknown,\n        DeloserItemBase<unknown>\n    >[] = [];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        this._history = [];\n    }\n\n    process(element: HTMLElement): Types.Deloser | undefined {\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n        const rootUId = ctx && ctx.root.uid;\n        const deloser = DeloserAPI.getDeloser(this._tabster, element);\n\n        if (!rootUId || !deloser) {\n            return undefined;\n        }\n\n        const historyByRoot = this.make(\n            rootUId,\n            () => new DeloserHistoryByRoot(this._tabster, rootUId)\n        );\n\n        if (!ctx || !ctx.modalizer || ctx.modalizer?.isActive()) {\n            historyByRoot.unshiftToDeloser(deloser, element);\n        }\n\n        return deloser;\n    }\n\n    make<\n        I,\n        D extends DeloserItemBase<I>,\n        C extends DeloserHistoryByRootBase<I, D>\n    >(rootUId: string, createInstance: () => C): C {\n        let historyByRoot: C | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            const hbr = this._history[i] as C;\n\n            if (hbr.rootUId === rootUId) {\n                historyByRoot = hbr;\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!historyByRoot) {\n            historyByRoot = createInstance();\n        }\n\n        this._history.unshift(historyByRoot);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n\n        return historyByRoot;\n    }\n\n    removeDeloser(deloser: Types.Deloser): void {\n        this._history.forEach((i) => {\n            i.removeDeloser(deloser);\n        });\n\n        this._history = this._history.filter((i) => i.getLength() > 0);\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.focusAvailable(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.resetFocus(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    isActive?: boolean,\n    snapshotIndex?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-deloser\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-deloser\",\n                    (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        (\"snapshot-\" + snapshotIndex)\n                );\n            }\n        }\n    }\n}\n\nfunction buildElementSelector(\n    element: HTMLElement,\n    withClass?: boolean,\n    withIndex?: boolean\n): string {\n    const selector: string[] = [];\n    const escapeRegExp = /(:|\\.|\\[|\\]|,|=|@)/g;\n    const escapeReplaceValue = \"\\\\$1\";\n\n    if (element.id) {\n        selector.push(\n            \"#\" + element.id.replace(escapeRegExp, escapeReplaceValue)\n        );\n    }\n\n    if (withClass !== false && element.className) {\n        element.className.split(\" \").forEach((cls) => {\n            cls = cls.trim();\n\n            if (cls) {\n                selector.push(\n                    \".\" + cls.replace(escapeRegExp, escapeReplaceValue)\n                );\n            }\n        });\n    }\n\n    let index = 0;\n    let el: Element | null;\n\n    if (withIndex !== false && selector.length === 0) {\n        el = element;\n        while (el) {\n            index++;\n            el = el.previousElementSibling;\n        }\n        selector.unshift(\":nth-child(\" + index + \")\");\n    }\n\n    selector.unshift(element.tagName.toLowerCase());\n\n    return selector.join(\"\");\n}\n\nfunction buildSelector(element: HTMLElement): string | undefined {\n    if (!documentContains(element.ownerDocument, element)) {\n        return undefined;\n    }\n\n    const selector: string[] = [buildElementSelector(element)];\n\n    let el = element.parentElement;\n\n    while (el) {\n        const isBody = el.tagName === \"BODY\";\n        selector.unshift(buildElementSelector(el, false, !isBody));\n\n        if (isBody) {\n            break;\n        }\n\n        el = el.parentElement;\n    }\n\n    return selector.join(\" \");\n}\n\nexport class Deloser\n    extends TabsterPart<Types.DeloserProps>\n    implements Types.Deloser\n{\n    readonly uid: string;\n    private _isActive = false;\n    private _history: WeakHTMLElement<HTMLElement, string>[][] = [[]];\n    private _snapshotIndex = 0;\n    private _onDispose: (deloser: Deloser) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (deloser: Deloser) => void,\n        props: Types.DeloserProps\n    ) {\n        super(tabster, element, props);\n\n        this.uid = getElementUId(tabster.getWindow, element);\n        this._onDispose = onDispose;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    dispose(): void {\n        this._remove();\n\n        this._onDispose(this);\n\n        this._isActive = false;\n        this._snapshotIndex = 0;\n\n        this._props = {};\n        this._history = [];\n    }\n\n    isActive = (): boolean => {\n        return this._isActive;\n    };\n\n    setActive(active: boolean): void {\n        this._isActive = active;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    getActions(): Types.DeloserElementActions {\n        return {\n            focusDefault: this.focusDefault,\n            focusFirst: this.focusFirst,\n            resetFocus: this.resetFocus,\n            clearHistory: this.clearHistory,\n            setSnapshot: this.setSnapshot,\n            isActive: this.isActive,\n        };\n    }\n\n    setSnapshot = (index: number): void => {\n        this._snapshotIndex = index;\n\n        if (this._history.length > index + 1) {\n            this._history.splice(index + 1, this._history.length - index - 1);\n        }\n\n        if (!this._history[index]) {\n            this._history[index] = [];\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    };\n\n    focusFirst = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusFirst({ container: e });\n    };\n\n    unshift(element: HTMLElement): void {\n        let cur = this._history[this._snapshotIndex];\n\n        cur = this._history[this._snapshotIndex] = cur.filter((we) => {\n            const e = we.get();\n            return e && e !== element;\n        });\n\n        cur.unshift(\n            new WeakHTMLElement(\n                this._tabster.getWindow,\n                element,\n                buildSelector(element)\n            )\n        );\n\n        while (cur.length > _containerHistoryLength) {\n            cur.pop();\n        }\n    }\n\n    focusDefault = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusDefault(e);\n    };\n\n    resetFocus = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.resetFocus(e);\n    };\n\n    findAvailable(): HTMLElement | null {\n        const element = this._element.get();\n\n        if (!element || !this._tabster.focusable.isVisible(element)) {\n            return null;\n        }\n\n        let restoreFocusOrder = this._props.restoreFocusOrder;\n        let available: HTMLElement | null = null;\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n        if (!ctx) {\n            return null;\n        }\n\n        const root = ctx.root;\n        const rootElement = root.getElement();\n\n        if (!rootElement) {\n            return null;\n        }\n\n        if (restoreFocusOrder === undefined) {\n            restoreFocusOrder = root.getProps().restoreFocusOrder;\n        }\n\n        if (restoreFocusOrder === Types.RestoreFocusOrders.RootDefault) {\n            available = this._tabster.focusable.findDefault({\n                container: rootElement,\n            });\n        }\n\n        if (\n            !available &&\n            restoreFocusOrder === Types.RestoreFocusOrders.RootFirst\n        ) {\n            available = this._findFirst(rootElement);\n        }\n\n        if (available) {\n            return available;\n        }\n\n        const availableInHistory = this._findInHistory();\n        const availableDefault = this._tabster.focusable.findDefault({\n            container: element,\n        });\n        const availableFirst = this._findFirst(element);\n\n        if (\n            availableInHistory &&\n            restoreFocusOrder === Types.RestoreFocusOrders.History\n        ) {\n            return availableInHistory;\n        }\n\n        if (\n            availableDefault &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserDefault\n        ) {\n            return availableDefault;\n        }\n\n        if (\n            availableFirst &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserFirst\n        ) {\n            return availableFirst;\n        }\n\n        return availableDefault || availableInHistory || availableFirst || null;\n    }\n\n    clearHistory = (preserveExisting?: boolean): void => {\n        const element = this._element.get();\n\n        if (!element) {\n            this._history[this._snapshotIndex] = [];\n\n            return;\n        }\n\n        this._history[this._snapshotIndex] = this._history[\n            this._snapshotIndex\n        ].filter((we) => {\n            const e = we.get();\n            return e && preserveExisting ? element.contains(e) : false;\n        });\n    };\n\n    customFocusLostHandler(element: HTMLElement): boolean {\n        return triggerEvent(element, Types.DeloserEventName, this.getActions());\n    }\n\n    private _findInHistory(): HTMLElement | null {\n        const cur = this._history[this._snapshotIndex].slice(0);\n\n        this.clearHistory(true);\n\n        for (let i = 0; i < cur.length; i++) {\n            const we = cur[i];\n            const e = we.get();\n            const element = this._element.get();\n\n            if (e && element && element.contains(e)) {\n                if (this._tabster.focusable.isFocusable(e)) {\n                    return e;\n                }\n            } else if (!this._props.noSelectorCheck) {\n                // Element is not in the DOM, try to locate the node by it's\n                // selector. This might return not exactly the right node,\n                // but it would be easily fixable by having more detailed selectors.\n                const selector = we.getData();\n\n                if (selector && element) {\n                    let els: NodeListOf<Element>;\n\n                    try {\n                        els = element.ownerDocument.querySelectorAll(selector);\n                    } catch (e) {\n                        if (__DEV__) {\n                            // This should never happen, unless there is some bug in buildElementSelector().\n                            console.error(\n                                `Failed to querySelectorAll('${selector}')`\n                            );\n                        }\n                        continue;\n                    }\n\n                    for (let i = 0; i < els.length; i++) {\n                        const el = els[i] as HTMLElement;\n\n                        if (el && this._tabster.focusable.isFocusable(el)) {\n                            return el;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _findFirst(element: HTMLElement): HTMLElement | null {\n        if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            const first = this._tabster.focusable.findFirst({\n                container: element,\n            });\n\n            if (first) {\n                return first;\n            }\n        }\n\n        return null;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateDeloserProps(props: Types.DeloserProps): void {\n    // TODO: Implement validation.\n}\n\nexport class DeloserAPI implements Types.DeloserAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _initTimer: number | undefined;\n    /**\n     * Tracks if focus is inside a deloser\n     */\n    private _inDeloser = false;\n    private _curDeloser: Types.Deloser | undefined;\n    private _history: DeloserHistory;\n    private _restoreFocusTimer: number | undefined;\n    private _isRestoringFocus = false;\n    private _isPaused = false;\n    private _autoDeloser: Types.DeloserProps | undefined;\n    private _autoDeloserInstance: Deloser | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        props?: { autoDeloser: Types.DeloserProps }\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._history = new DeloserHistory(tabster);\n        this._initTimer = this._win().setTimeout(this._init, 0);\n\n        const autoDeloser = props?.autoDeloser;\n        if (autoDeloser) {\n            this._autoDeloser = autoDeloser;\n        }\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        if (this._restoreFocusTimer) {\n            win.clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (this._autoDeloserInstance) {\n            this._autoDeloserInstance.dispose();\n            delete this._autoDeloserInstance;\n            delete this._autoDeloser;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._history.dispose();\n\n        delete this._curDeloser;\n    }\n\n    createDeloser(\n        element: HTMLElement,\n        props: Types.DeloserProps\n    ): Types.Deloser {\n        if (__DEV__) {\n            validateDeloserProps(props);\n        }\n\n        const deloser = new Deloser(\n            this._tabster,\n            element,\n            this._onDeloserDispose,\n            props\n        );\n\n        if (\n            element.contains(\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            this._activate(deloser);\n        }\n\n        return deloser;\n    }\n\n    getActions(element: HTMLElement): Types.DeloserElementActions | undefined {\n        for (let e: HTMLElement | null = element; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser.getActions();\n            }\n        }\n\n        return undefined;\n    }\n\n    pause(): void {\n        this._isPaused = true;\n\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n    }\n\n    resume(restore?: boolean): void {\n        this._isPaused = false;\n\n        if (restore) {\n            this._scheduleRestoreFocus();\n        }\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (!e) {\n            this._scheduleRestoreFocus();\n\n            return;\n        }\n\n        const deloser = this._history.process(e);\n\n        if (deloser) {\n            this._activate(deloser);\n        } else {\n            this._deactivate();\n        }\n    };\n\n    /**\n     * Activates and sets the current deloser\n     */\n    private _activate(deloser: Types.Deloser) {\n        const curDeloser = this._curDeloser;\n        if (curDeloser !== deloser) {\n            this._inDeloser = true;\n            curDeloser?.setActive(false);\n            deloser.setActive(true);\n            this._curDeloser = deloser;\n        }\n    }\n\n    /**\n     * Called when focus should no longer be in a deloser\n     */\n    private _deactivate() {\n        this._inDeloser = false;\n        this._curDeloser?.setActive(false);\n        this._curDeloser = undefined;\n    }\n\n    private _scheduleRestoreFocus(force?: boolean): void {\n        if (this._isPaused || this._isRestoringFocus) {\n            return;\n        }\n\n        const restoreFocus = async () => {\n            this._restoreFocusTimer = undefined;\n            const lastFocused =\n                this._tabster.focusedElement.getLastFocusedElement();\n\n            if (\n                !force &&\n                (this._isRestoringFocus ||\n                    !this._inDeloser ||\n                    !!lastFocused?.offsetParent)\n            ) {\n                return;\n            }\n\n            const curDeloser = this._curDeloser;\n            if (curDeloser) {\n                if (\n                    lastFocused &&\n                    curDeloser.customFocusLostHandler(lastFocused)\n                ) {\n                    return;\n                }\n\n                const el = curDeloser.findAvailable();\n\n                if (el && this._tabster.focusedElement.focus(el)) {\n                    return;\n                }\n            }\n\n            this._deactivate();\n\n            this._isRestoringFocus = true;\n\n            if (!(await this._history.focusAvailable(null))) {\n                await this._history.resetFocus(null);\n            }\n\n            this._isRestoringFocus = false;\n        };\n\n        if (force) {\n            restoreFocus();\n        } else {\n            this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);\n        }\n    }\n\n    static getDeloser(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Deloser | undefined {\n        for (let e: HTMLElement | null = element; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser;\n            }\n        }\n\n        const deloserAPI = tabster.deloser && (tabster.deloser as DeloserAPI);\n\n        if (deloserAPI) {\n            if (deloserAPI._autoDeloserInstance) {\n                return deloserAPI._autoDeloserInstance;\n            }\n\n            const autoDeloserProps = deloserAPI._autoDeloser;\n\n            if (!deloserAPI._autoDeloserInstance && autoDeloserProps) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    deloserAPI._autoDeloserInstance = new Deloser(\n                        tabster,\n                        body,\n                        (tabster.deloser as DeloserAPI)._onDeloserDispose,\n                        autoDeloserProps\n                    );\n                }\n            }\n\n            return deloserAPI._autoDeloserInstance;\n        }\n\n        return undefined;\n    }\n\n    private _onDeloserDispose = (deloser: Deloser) => {\n        this._history.removeDeloser(deloser);\n\n        if (deloser.isActive()) {\n            this._scheduleRestoreFocus();\n        }\n    };\n\n    static getHistory(instance: Types.DeloserAPI): DeloserHistory {\n        return (instance as DeloserAPI)._history;\n    }\n\n    static forceRestoreFocus(instance: Types.DeloserAPI): void {\n        (instance as DeloserAPI)._scheduleRestoreFocus(true);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DeloserAPI,\n    DeloserHistoryByRootBase,\n    DeloserItemBase,\n} from \"./Deloser\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { RootAPI } from \"./Root\";\nimport { Subscribable } from \"./State/Subscribable\";\nimport * as Types from \"./Types\";\nimport {\n    getElementUId,\n    getInstanceContext,\n    getPromise,\n    getUId,\n    getWindowUId,\n    HTMLElementWithUID,\n} from \"./Utils\";\n\nconst _transactionTimeout = 1500;\nconst _pingTimeout = 3000;\n\nconst _targetIdUp = \"up\";\n\nconst CrossOriginTransactionTypes: Types.CrossOriginTransactionTypes = {\n    Bootstrap: 1,\n    FocusElement: 2,\n    State: 3,\n    GetElement: 4,\n    RestoreFocusInDeloser: 5,\n    Ping: 6,\n};\n\ninterface CrossOriginInstanceContext {\n    ignoreKeyboardNavigationStateUpdate: boolean;\n    focusOwner?: string;\n    focusOwnerTimestamp?: number;\n    deloserByUId: { [uid: string]: Types.Deloser };\n    origOutlineSetup?: (props?: Partial<Types.OutlineProps>) => void;\n}\n\ninterface KnownTargets {\n    [id: string]: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        send: (payload: Types.CrossOriginTransactionData<any, any>) => void;\n        last?: number;\n    };\n}\n\nclass CrossOriginDeloserItem extends DeloserItemBase<CrossOriginDeloser> {\n    private _deloser: CrossOriginDeloser;\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        deloser: CrossOriginDeloser,\n        trasactions: CrossOriginTransactions\n    ) {\n        super();\n        this._deloser = deloser;\n        this._transactions = trasactions;\n    }\n\n    belongsTo(deloser: CrossOriginDeloser): boolean {\n        return deloser.deloserUId === this._deloser.deloserUId;\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: false,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: true,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n}\n\nclass CrossOriginDeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    CrossOriginDeloser,\n    CrossOriginDeloserItem\n> {\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        rootUId: string,\n        transactions: CrossOriginTransactions\n    ) {\n        super(tabster, rootUId);\n        this._transactions = transactions;\n    }\n\n    unshift(deloser: CrossOriginDeloser): void {\n        let item: CrossOriginDeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new CrossOriginDeloserItem(\n                this._tabster,\n                deloser,\n                this._transactions\n            );\n        }\n\n        this._history.unshift(item);\n\n        this._history.splice(10, this._history.length - 10);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.focusAvailable()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nabstract class CrossOriginTransaction<I, O> {\n    abstract type: Types.CrossOriginTransactionType;\n    readonly id: string;\n    readonly beginData: I;\n    readonly timeout?: number;\n    protected tabster: Types.TabsterCore;\n    protected endData: O | undefined;\n    protected owner: Types.GetWindow;\n    protected ownerId: string;\n    protected sendUp: Types.CrossOriginTransactionSend | undefined;\n    private _promise: Promise<O>;\n    protected _resolve: ((endData?: O | PromiseLike<O>) => void) | undefined;\n    private _reject: ((reason: string) => void) | undefined;\n    private _knownTargets: KnownTargets;\n    private _sentTo: Types.CrossOriginSentTo;\n    protected targetId: string | undefined;\n    private _inProgress: { [id: string]: boolean } = {};\n    private _isDone = false;\n    private _isSelfResponding = false;\n    private _sentCount = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ) {\n        this.tabster = tabster;\n        this.owner = getOwner;\n        this.ownerId = getWindowUId(getOwner());\n        this.id = getUId(getOwner());\n        this.beginData = value;\n        this._knownTargets = knownTargets;\n        this._sentTo = sentTo || { [this.ownerId]: true };\n        this.targetId = targetId;\n        this.sendUp = sendUp;\n        this.timeout = timeout;\n        this._promise = new (getPromise(getOwner))<O>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    protected getTargets(knownTargets: KnownTargets): KnownTargets | null {\n        return this.targetId === _targetIdUp\n            ? this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : null\n            : this.targetId\n            ? knownTargets[this.targetId]\n                ? {\n                      [this.targetId]: {\n                          send: knownTargets[this.targetId].send,\n                      },\n                  }\n                : null\n            : Object.keys(knownTargets).length === 0 && this.sendUp\n            ? { [_targetIdUp]: { send: this.sendUp } }\n            : Object.keys(knownTargets).length > 0\n            ? knownTargets\n            : null;\n    }\n\n    begin(\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>\n    ): Promise<O | undefined> {\n        const targets = this.getTargets(this._knownTargets);\n        const sentTo: Types.CrossOriginSentTo = { ...this._sentTo };\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                sentTo[id] = true;\n            }\n        }\n\n        const data: Types.CrossOriginTransactionData<I, O> = {\n            transaction: this.id,\n            type: this.type,\n            isResponse: false,\n            timestamp: Date.now(),\n            owner: this.ownerId,\n            sentto: sentTo,\n            timeout: this.timeout,\n            beginData: this.beginData,\n        };\n\n        if (this.targetId) {\n            data.target = this.targetId;\n        }\n\n        if (selfResponse) {\n            this._isSelfResponding = true;\n\n            selfResponse(data).then((value) => {\n                this._isSelfResponding = false;\n\n                if (value !== undefined) {\n                    if (!this.endData) {\n                        this.endData = value;\n                    }\n                }\n\n                if (this.endData || this._sentCount === 0) {\n                    this.end();\n                }\n            });\n        }\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                if (!(id in this._sentTo)) {\n                    this._send(targets[id].send, id, data);\n                }\n            }\n        }\n\n        if (this._sentCount === 0 && !this._isSelfResponding) {\n            this.end();\n        }\n\n        return this._promise;\n    }\n\n    private _send(\n        send: (data: Types.CrossOriginTransactionData<I, O>) => void,\n        targetId: string,\n        data: Types.CrossOriginTransactionData<I, O>\n    ) {\n        if (this._inProgress[targetId] === undefined) {\n            this._inProgress[targetId] = true;\n            this._sentCount++;\n            send(data);\n        }\n    }\n\n    end(error?: string): void {\n        if (this._isDone) {\n            return;\n        }\n\n        this._isDone = true;\n\n        if (this.endData === undefined && error) {\n            if (this._reject) {\n                this._reject(error);\n            }\n        } else if (this._resolve) {\n            this._resolve(this.endData);\n        }\n    }\n\n    onResponse(data: Types.CrossOriginTransactionData<I, O>): void {\n        const endData = data.endData;\n\n        if (endData !== undefined && !this.endData) {\n            this.endData = endData;\n        }\n\n        const inProgressId =\n            data.target === _targetIdUp ? _targetIdUp : data.owner;\n\n        if (this._inProgress[inProgressId]) {\n            this._inProgress[inProgressId] = false;\n            this._sentCount--;\n\n            if (\n                this.endData ||\n                (this._sentCount === 0 && !this._isSelfResponding)\n            ) {\n                this.end();\n            }\n        }\n    }\n}\n\ninterface CrossOriginTransactionClass<I, O> {\n    new (\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ): CrossOriginTransaction<I, O>;\n    shouldForward?(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n    makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<O | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<O>;\n    shouldSelfRespond?(\n        tabster: Types.TabsterCore,\n        data: I,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n}\n\ninterface BootstrapTransactionContents {\n    isNavigatingWithKeyboard: boolean;\n}\n\nclass BootstrapTransaction extends CrossOriginTransaction<\n    undefined,\n    BootstrapTransactionContents\n> {\n    type = CrossOriginTransactionTypes.Bootstrap;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore\n    ): Promise<BootstrapTransactionContents> {\n        return {\n            isNavigatingWithKeyboard:\n                tabster.keyboardNavigation.isNavigatingWithKeyboard(),\n        };\n    }\n}\n\ninterface CrossOriginElementDataIn {\n    uid?: string;\n    id?: string;\n    rootId?: string;\n    ownerId?: string;\n    observedName?: string;\n    /**\n     * Optionally wait if the element is accessible or focusable before returning it\n     */\n    accessibility?: Types.ObservedElementAccesibility;\n}\n\ninterface FocusElementData extends CrossOriginElementDataIn {\n    noFocusedProgrammaticallyFlag?: boolean;\n    noAccessibleCheck?: boolean;\n}\n\nclass FocusElementTransaction extends CrossOriginTransaction<\n    FocusElementData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.FocusElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static shouldForward(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow\n    ): boolean {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return !el || !tabster.focusable.isFocusable(el);\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return (\n            (!!el && tabster.focusedElement.focus(el, true)) ||\n            !!(await forwardResult)\n        );\n    }\n}\n\nconst CrossOriginStates: {\n    Focused: 1;\n    Blurred: 2;\n    Observed: 3;\n    DeadWindow: 4;\n    KeyboardNavigation: 5;\n    Outline: 6;\n} = {\n    Focused: 1,\n    Blurred: 2,\n    Observed: 3,\n    DeadWindow: 4,\n    KeyboardNavigation: 5,\n    Outline: 6,\n};\ntype CrossOriginState =\n    typeof CrossOriginStates[keyof typeof CrossOriginStates];\n\ninterface CrossOriginElementDataOut {\n    ownerUId: string;\n    uid?: string;\n    id?: string;\n    rootUId?: string;\n    deloserUId?: string;\n    observedName?: string;\n    observedDetails?: string;\n}\n\ninterface CrossOriginStateData extends CrossOriginElementDataOut {\n    state: CrossOriginState;\n    isFocusedProgrammatically?: boolean;\n    force?: boolean;\n    isNavigatingWithKeyboard?: boolean;\n    outline?: Partial<Types.OutlineProps>;\n}\n\nclass StateTransaction extends CrossOriginTransaction<\n    CrossOriginStateData,\n    true\n> {\n    type = CrossOriginTransactionTypes.State;\n\n    static shouldSelfRespond(\n        tabster: Types.TabsterCore,\n        data: CrossOriginStateData\n    ): boolean {\n        return (\n            data.state !== CrossOriginStates.DeadWindow &&\n            data.state !== CrossOriginStates.KeyboardNavigation\n        );\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<CrossOriginStateData, true>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const timestamp = data.timestamp;\n        const beginData = data.beginData;\n\n        if (timestamp && beginData) {\n            switch (beginData.state) {\n                case CrossOriginStates.Focused:\n                    return StateTransaction._makeFocusedResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions,\n                        isSelfResponse\n                    );\n                case CrossOriginStates.Blurred:\n                    return StateTransaction._makeBlurredResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions.ctx\n                    );\n                case CrossOriginStates.Observed:\n                    return StateTransaction._makeObservedResponse(\n                        tabster,\n                        beginData\n                    );\n                case CrossOriginStates.DeadWindow:\n                    return StateTransaction._makeDeadWindowResponse(\n                        tabster,\n                        beginData,\n                        transactions,\n                        forwardResult\n                    );\n                case CrossOriginStates.KeyboardNavigation:\n                    return StateTransaction._makeKeyboardNavigationResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.isNavigatingWithKeyboard\n                    );\n                case CrossOriginStates.Outline:\n                    return StateTransaction._makeOutlineResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.outline\n                    );\n            }\n        }\n\n        return true;\n    }\n\n    static createElement(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginElementDataOut\n    ): CrossOriginElement | null {\n        return beginData.uid\n            ? new CrossOriginElement(\n                  tabster,\n                  beginData.uid,\n                  beginData.ownerUId,\n                  beginData.id,\n                  beginData.rootUId,\n                  beginData.observedName,\n                  beginData.observedDetails\n              )\n            : null;\n    }\n\n    private static async _makeFocusedResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (beginData && beginData.ownerUId && element) {\n            transactions.ctx.focusOwner = beginData.ownerUId;\n            transactions.ctx.focusOwnerTimestamp = timestamp;\n\n            if (!isSelfResponse && beginData.rootUId && beginData.deloserUId) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    const history = DeloserAPI.getHistory(deloserAPI);\n\n                    const deloser: CrossOriginDeloser = {\n                        ownerUId: beginData.ownerUId,\n                        deloserUId: beginData.deloserUId,\n                        rootUId: beginData.rootUId,\n                    };\n\n                    const historyItem = history.make(\n                        beginData.rootUId,\n                        () =>\n                            new CrossOriginDeloserHistoryByRoot(\n                                tabster,\n                                deloser.rootUId,\n                                transactions\n                            )\n                    );\n\n                    historyItem.unshift(deloser);\n                }\n            }\n\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                element,\n                {\n                    isFocusedProgrammatically:\n                        beginData.isFocusedProgrammatically,\n                }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeBlurredResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        context: CrossOriginInstanceContext\n    ): Promise<true> {\n        if (\n            beginData &&\n            (beginData.ownerUId === context.focusOwner || beginData.force) &&\n            (!context.focusOwnerTimestamp ||\n                context.focusOwnerTimestamp < timestamp)\n        ) {\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                undefined,\n                {}\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeObservedResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData\n    ): Promise<true> {\n        const name = beginData.observedName;\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (name && element) {\n            CrossOriginObservedElementState.trigger(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.observedElement,\n                element,\n                { names: [name], details: beginData.observedDetails }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeDeadWindowResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>\n    ): Promise<true> {\n        const deadUId = beginData && beginData.ownerUId;\n\n        if (deadUId) {\n            transactions.removeTarget(deadUId);\n        }\n\n        return forwardResult.then(() => {\n            if (deadUId === transactions.ctx.focusOwner) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n            return true;\n        });\n    }\n\n    private static async _makeKeyboardNavigationResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        isNavigatingWithKeyboard?: boolean\n    ): Promise<true> {\n        if (\n            isNavigatingWithKeyboard !== undefined &&\n            tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                isNavigatingWithKeyboard\n        ) {\n            context.ignoreKeyboardNavigationStateUpdate = true;\n            KeyboardNavigationState.setVal(\n                tabster.keyboardNavigation,\n                isNavigatingWithKeyboard\n            );\n            context.ignoreKeyboardNavigationStateUpdate = false;\n        }\n        return true;\n    }\n\n    private static async _makeOutlineResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        props?: Partial<Types.OutlineProps>\n    ): Promise<true> {\n        if (context.origOutlineSetup) {\n            context.origOutlineSetup.call(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.outline!,\n                props\n            );\n        }\n        return true;\n    }\n}\n\nclass GetElementTransaction extends CrossOriginTransaction<\n    CrossOriginElementDataIn | undefined,\n    CrossOriginElementDataOut\n> {\n    type = CrossOriginTransactionTypes.GetElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static findElement(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        data?: CrossOriginElementDataIn\n    ): HTMLElement | null {\n        let element: HTMLElement | null | undefined;\n\n        if (\n            data &&\n            (!data.ownerId || data.ownerId === getWindowUId(getOwner()))\n        ) {\n            if (data.id) {\n                element = getOwner().document.getElementById(data.id);\n\n                if (element && data.rootId) {\n                    const ctx = RootAPI.getTabsterContext(tabster, element);\n\n                    if (!ctx || ctx.root.uid !== data.rootId) {\n                        return null;\n                    }\n                }\n            } else if (data.uid) {\n                const ref = getInstanceContext(getOwner).elementByUId[data.uid];\n                element = ref && ref.get();\n            } else if (data.observedName) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                element = tabster.observedElement!.getElement(\n                    data.observedName\n                );\n            }\n        }\n\n        return element || null;\n    }\n\n    static getElementData(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext,\n        ownerUId: string\n    ): CrossOriginElementDataOut {\n        const deloser = DeloserAPI.getDeloser(tabster, element);\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const tabsterOnElement = getTabsterOnElement(tabster, element);\n        const observed = tabsterOnElement && tabsterOnElement.observed;\n\n        return {\n            uid: getElementUId(getOwner, element),\n            ownerUId,\n            id: element.id || undefined,\n            rootUId: ctx ? ctx.root.uid : undefined,\n            deloserUId: deloser\n                ? getDeloserUID(getOwner, context, deloser)\n                : undefined,\n            observedName: observed && observed.names && observed.names[0],\n            observedDetails: observed && observed.details,\n        };\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            CrossOriginElementDataIn | undefined,\n            CrossOriginElementDataOut\n        >,\n        getOwner: Types.GetWindow,\n        ownerUId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<CrossOriginElementDataOut | undefined>\n    ): Promise<CrossOriginElementDataOut | undefined> {\n        const beginData = data.beginData;\n        let element: HTMLElement | undefined;\n        let dataOut: CrossOriginElementDataOut | undefined;\n\n        if (beginData === undefined) {\n            element = tabster.focusedElement.getFocusedElement();\n        } else if (beginData) {\n            element =\n                GetElementTransaction.findElement(\n                    tabster,\n                    getOwner,\n                    beginData\n                ) || undefined;\n        }\n\n        if (!element && beginData) {\n            const name = beginData.observedName;\n            const timeout = data.timeout;\n            const accessibility = beginData.accessibility;\n\n            if (name && timeout) {\n                const e: {\n                    element?: HTMLElement | null;\n                    crossOrigin?: CrossOriginElementDataOut;\n                } = await new (getPromise(getOwner))((resolve) => {\n                    let isWaitElementResolved = false;\n                    let isForwardResolved = false;\n                    let isResolved = false;\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tabster\n                        .observedElement!.waitElement(\n                            name,\n                            timeout,\n                            accessibility\n                        )\n                        .result.then((value) => {\n                            isWaitElementResolved = true;\n\n                            if (!isResolved && (value || isForwardResolved)) {\n                                isResolved = true;\n                                resolve({ element: value });\n                            }\n                        });\n\n                    forwardResult.then((value) => {\n                        isForwardResolved = true;\n\n                        if (!isResolved && (value || isWaitElementResolved)) {\n                            isResolved = true;\n                            resolve({ crossOrigin: value });\n                        }\n                    });\n                });\n\n                if (e.element) {\n                    element = e.element;\n                } else if (e.crossOrigin) {\n                    dataOut = e.crossOrigin;\n                }\n            }\n        }\n\n        return element\n            ? GetElementTransaction.getElementData(\n                  tabster,\n                  element,\n                  getOwner,\n                  transactions.ctx,\n                  ownerUId\n              )\n            : dataOut;\n    }\n}\n\ninterface CrossOriginDeloser {\n    ownerUId: string;\n    deloserUId: string;\n    rootUId: string;\n}\n\ninterface RestoreFocusInDeloserTransactionData extends CrossOriginDeloser {\n    reset: boolean;\n}\n\nclass RestoreFocusInDeloserTransaction extends CrossOriginTransaction<\n    RestoreFocusInDeloserTransactionData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.RestoreFocusInDeloser;\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            RestoreFocusInDeloserTransactionData,\n            boolean\n        >,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const forwardRet = await forwardResult;\n        const begin = !forwardRet && data.beginData;\n        const uid = begin && begin.deloserUId;\n        const deloser = uid && transactions.ctx.deloserByUId[uid];\n        const deloserAPI = tabster.deloser;\n\n        if (begin && deloser && deloserAPI) {\n            const history = DeloserAPI.getHistory(deloserAPI);\n            return begin.reset\n                ? history.resetFocus(deloser)\n                : history.focusAvailable(deloser);\n        }\n\n        return !!forwardRet;\n    }\n}\n\nclass PingTransaction extends CrossOriginTransaction<undefined, true> {\n    type = CrossOriginTransactionTypes.Ping;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(): Promise<true> {\n        return true;\n    }\n}\n\ninterface CrossOriginTransactionWrapper<I, O> {\n    transaction: CrossOriginTransaction<I, O>;\n    timer?: number;\n}\n\nclass CrossOriginTransactions {\n    private _owner: Types.GetWindow;\n    private _ownerUId: string;\n    private _knownTargets: KnownTargets = {};\n    private _transactions: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [id: string]: CrossOriginTransactionWrapper<any, any>;\n    } = {};\n    private _tabster: Types.TabsterCore;\n    private _pingTimer: number | undefined;\n    private _isDefaultSendUp = false;\n    private _deadPromise: Promise<true | undefined> | undefined;\n    isSetUp = false;\n    sendUp: Types.CrossOriginTransactionSend | undefined;\n    ctx: CrossOriginInstanceContext;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext\n    ) {\n        this._tabster = tabster;\n        this._owner = getOwner;\n        this._ownerUId = getWindowUId(getOwner());\n        this.ctx = context;\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp) {\n            if (__DEV__) {\n                console.error(\"CrossOrigin is already set up.\");\n            }\n        } else {\n            this.isSetUp = true;\n\n            this.setSendUp(sendUp);\n\n            this._owner().addEventListener(\"pagehide\", this._onPageHide);\n\n            this._ping();\n        }\n\n        return this._onMessage;\n    }\n\n    setSendUp(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (!this.isSetUp) {\n            throw new Error(\"CrossOrigin is not set up.\");\n        }\n\n        this.sendUp = sendUp || undefined;\n\n        const owner = this._owner();\n\n        if (sendUp === undefined) {\n            if (!this._isDefaultSendUp) {\n                if (owner.document) {\n                    this._isDefaultSendUp = true;\n\n                    if (\n                        owner.parent &&\n                        owner.parent !== owner &&\n                        owner.parent.postMessage\n                    ) {\n                        this.sendUp = (\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data: Types.CrossOriginTransactionData<any, any>\n                        ) => {\n                            owner.parent.postMessage(JSON.stringify(data), \"*\");\n                        };\n                    }\n\n                    owner.addEventListener(\"message\", this._onBrowserMessage);\n                }\n            }\n        } else if (this._isDefaultSendUp) {\n            owner.removeEventListener(\"message\", this._onBrowserMessage);\n            this._isDefaultSendUp = false;\n        }\n\n        return this._onMessage;\n    }\n\n    async dispose(): Promise<void> {\n        const owner = this._owner();\n\n        if (this._pingTimer) {\n            owner.clearTimeout(this._pingTimer);\n            this._pingTimer = undefined;\n        }\n\n        owner.removeEventListener(\"message\", this._onBrowserMessage);\n        owner.removeEventListener(\"pagehide\", this._onPageHide);\n\n        await this._dead();\n\n        delete this._deadPromise;\n\n        for (const id of Object.keys(this._transactions)) {\n            const t = this._transactions[id];\n\n            if (t.timer) {\n                owner.clearTimeout(t.timer);\n                delete t.timer;\n            }\n\n            t.transaction.end();\n        }\n\n        this._knownTargets = {};\n\n        delete this.sendUp;\n    }\n\n    beginTransaction<I, O>(\n        Transaction: CrossOriginTransactionClass<I, O>,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        if (!this._owner) {\n            return getPromise(this._owner).reject();\n        }\n\n        const transaction = new Transaction(\n            this._tabster,\n            this._owner,\n            this._knownTargets,\n            value,\n            timeout,\n            sentTo,\n            targetId,\n            this.sendUp\n        );\n        let selfResponse:\n            | ((\n                  data: Types.CrossOriginTransactionData<I, O>\n              ) => Promise<O | undefined>)\n            | undefined;\n\n        if (\n            Transaction.shouldSelfRespond &&\n            Transaction.shouldSelfRespond(\n                this._tabster,\n                value,\n                this._owner,\n                this._ownerUId\n            )\n        ) {\n            selfResponse = (data: Types.CrossOriginTransactionData<I, O>) => {\n                return Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    getPromise(this._owner).resolve(undefined),\n                    true\n                );\n            };\n        }\n\n        return this._beginTransaction(\n            transaction,\n            timeout,\n            selfResponse,\n            withReject\n        );\n    }\n\n    removeTarget(uid: string): void {\n        delete this._knownTargets[uid];\n    }\n\n    private _beginTransaction<I, O>(\n        transaction: CrossOriginTransaction<I, O>,\n        timeout?: number,\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        const owner = this._owner();\n\n        const wrapper: CrossOriginTransactionWrapper<I, O> = {\n            transaction,\n            timer: owner.setTimeout(() => {\n                delete wrapper.timer;\n                transaction.end(\"Cross origin transaction timed out.\");\n            }, _transactionTimeout + (timeout || 0)),\n        };\n\n        this._transactions[transaction.id] = wrapper;\n\n        const ret = transaction.begin(selfResponse);\n\n        ret.catch(() => {\n            /**/\n        }).finally(() => {\n            if (wrapper.timer) {\n                owner.clearTimeout(wrapper.timer);\n            }\n            delete this._transactions[transaction.id];\n        });\n\n        return ret.then(\n            (value) => value,\n            withReject ? undefined : () => undefined\n        );\n    }\n\n    forwardTransaction(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: Types.CrossOriginTransactionData<any, any>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any> {\n        const owner = this._owner;\n        let targetId = data.target;\n\n        if (targetId === this._ownerUId) {\n            return getPromise(owner).resolve();\n        }\n\n        const Transaction = this._getTransactionClass(data.type);\n\n        if (Transaction) {\n            if (\n                Transaction.shouldForward === undefined ||\n                Transaction.shouldForward(\n                    this._tabster,\n                    data,\n                    owner,\n                    this._ownerUId\n                )\n            ) {\n                const sentTo = data.sentto;\n\n                if (targetId === _targetIdUp) {\n                    targetId = undefined;\n                    sentTo[this._ownerUId] = true;\n                }\n\n                delete sentTo[_targetIdUp];\n\n                return this._beginTransaction(\n                    new Transaction(\n                        this._tabster,\n                        owner,\n                        this._knownTargets,\n                        data.beginData,\n                        data.timeout,\n                        sentTo,\n                        targetId,\n                        this.sendUp\n                    ),\n                    data.timeout\n                );\n            } else {\n                return getPromise(owner).resolve();\n            }\n        }\n\n        return getPromise(owner).reject(\n            `Unknown transaction type ${data.type}`\n        );\n    }\n\n    private _getTransactionClass(\n        type: Types.CrossOriginTransactionType\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): CrossOriginTransactionClass<any, any> | null {\n        switch (type) {\n            case CrossOriginTransactionTypes.Bootstrap:\n                return BootstrapTransaction;\n            case CrossOriginTransactionTypes.FocusElement:\n                return FocusElementTransaction;\n            case CrossOriginTransactionTypes.State:\n                return StateTransaction;\n            case CrossOriginTransactionTypes.GetElement:\n                return GetElementTransaction;\n            case CrossOriginTransactionTypes.RestoreFocusInDeloser:\n                return RestoreFocusInDeloserTransaction;\n            case CrossOriginTransactionTypes.Ping:\n                return PingTransaction;\n            default:\n                return null;\n        }\n    }\n\n    private _onMessage = (e: Types.CrossOriginMessage) => {\n        if (e.data.owner === this._ownerUId || !this._tabster) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: Types.CrossOriginTransactionData<any, any> = e.data;\n        let transactionId: string;\n\n        if (\n            !data ||\n            !(transactionId = data.transaction) ||\n            !data.type ||\n            !data.timestamp ||\n            !data.owner ||\n            !data.sentto\n        ) {\n            return;\n        }\n\n        let knownTarget = this._knownTargets[data.owner];\n\n        if (!knownTarget && e.send && data.owner !== this._ownerUId) {\n            knownTarget = this._knownTargets[data.owner] = { send: e.send };\n        }\n\n        if (knownTarget) {\n            knownTarget.last = Date.now();\n        }\n\n        if (data.isResponse) {\n            const t = this._transactions[transactionId];\n\n            if (t && t.transaction && t.transaction.type === data.type) {\n                t.transaction.onResponse(data);\n            }\n        } else {\n            const Transaction = this._getTransactionClass(data.type);\n\n            const forwardResult = this.forwardTransaction(data);\n\n            if (Transaction && e.send) {\n                Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    forwardResult,\n                    false\n                ).then((r) => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const response: Types.CrossOriginTransactionData<any, any> =\n                        {\n                            transaction: data.transaction,\n                            type: data.type,\n                            isResponse: true,\n                            timestamp: Date.now(),\n                            owner: this._ownerUId,\n                            timeout: data.timeout,\n                            sentto: {},\n                            target:\n                                data.target === _targetIdUp\n                                    ? _targetIdUp\n                                    : data.owner,\n                            endData: r,\n                        };\n\n                    e.send(response);\n                });\n            }\n        }\n    };\n\n    private _onPageHide = () => {\n        this._dead();\n    };\n\n    private async _dead(): Promise<void> {\n        if (!this._deadPromise && this.ctx.focusOwner === this._ownerUId) {\n            this._deadPromise = this.beginTransaction(StateTransaction, {\n                ownerUId: this._ownerUId,\n                state: CrossOriginStates.DeadWindow,\n            });\n        }\n\n        if (this._deadPromise) {\n            await this._deadPromise;\n        }\n    }\n\n    private async _ping(): Promise<void> {\n        if (this._pingTimer) {\n            return;\n        }\n\n        let deadWindows: { [key: string]: boolean } | undefined;\n        const now = Date.now();\n        const targets = Object.keys(this._knownTargets).filter(\n            (uid) => now - (this._knownTargets[uid].last || 0) > _pingTimeout\n        );\n\n        if (this.sendUp) {\n            targets.push(_targetIdUp);\n        }\n\n        if (targets.length) {\n            await getPromise(this._owner).all(\n                targets.map((uid) =>\n                    this.beginTransaction(\n                        PingTransaction,\n                        undefined,\n                        undefined,\n                        undefined,\n                        uid,\n                        true\n                    ).then(\n                        () => true,\n                        () => {\n                            if (uid !== _targetIdUp) {\n                                if (!deadWindows) {\n                                    deadWindows = {};\n                                }\n                                deadWindows[uid] = true;\n                                delete this._knownTargets[uid];\n                            }\n                            return false;\n                        }\n                    )\n                )\n            );\n        }\n\n        if (deadWindows) {\n            const focused = await this.beginTransaction(\n                GetElementTransaction,\n                undefined\n            );\n\n            if (\n                !focused &&\n                this.ctx.focusOwner &&\n                this.ctx.focusOwner in deadWindows\n            ) {\n                await this.beginTransaction(StateTransaction, {\n                    ownerUId: this._ownerUId,\n                    state: CrossOriginStates.Blurred,\n                    force: true,\n                });\n\n                const deloserAPI = this._tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n        }\n\n        this._pingTimer = this._owner().setTimeout(() => {\n            this._pingTimer = undefined;\n            this._ping();\n        }, _pingTimeout);\n    }\n\n    private _onBrowserMessage = (e: MessageEvent) => {\n        if (e.source === this._owner()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const send = (data: Types.CrossOriginTransactionData<any, any>) => {\n            if (e.source && e.source.postMessage) {\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                (e.source.postMessage as Function)(JSON.stringify(data), \"*\");\n            }\n        };\n\n        try {\n            this._onMessage({\n                data: JSON.parse(e.data),\n                send,\n            });\n        } catch (e) {\n            /* Ignore */\n        }\n    };\n}\n\nexport class CrossOriginElement implements Types.CrossOriginElement {\n    private _tabster: Types.TabsterCore;\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        uid: string,\n        ownerId: string,\n        id?: string,\n        rootId?: string,\n        observedName?: string,\n        observedDetails?: string\n    ) {\n        this._tabster = tabster;\n        this.uid = uid;\n        this.ownerId = ownerId;\n        this.id = id;\n        this.rootId = rootId;\n        this.observedName = observedName;\n        this.observedDetails = observedDetails;\n    }\n\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tabster.crossOrigin!.focusedElement.focus(\n            this,\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n}\n\nexport class CrossOriginFocusedElementState\n    extends Subscribable<\n        CrossOriginElement | undefined,\n        Types.FocusedElementDetails\n    >\n    implements Types.CrossOriginFocusedElementState\n{\n    private _transactions: CrossOriginTransactions;\n\n    constructor(transactions: CrossOriginTransactions) {\n        super();\n        this._transactions = transactions;\n    }\n\n    async focus(\n        element: Types.CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            {\n                uid: element.uid,\n                id: element.id,\n                rootId: element.rootId,\n                ownerId: element.ownerId,\n                observedName: element.observedName,\n            },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { id: elementId, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { observedName, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck,\n            timeout\n        );\n    }\n\n    private async _focus(\n        elementData: CrossOriginElementDataIn,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        timeout?: number\n    ): Promise<boolean> {\n        return this._transactions\n            .beginTransaction(\n                FocusElementTransaction,\n                {\n                    ...elementData,\n                    noFocusedProgrammaticallyFlag,\n                    noAccessibleCheck,\n                },\n                timeout\n            )\n            .then((value) => !!value);\n    }\n\n    static setVal(\n        instance: Types.CrossOriginFocusedElementState,\n        val: CrossOriginElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        (instance as CrossOriginFocusedElementState).setVal(val, details);\n    }\n}\n\nexport class CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, Types.ObservedElementProps>\n    implements Types.CrossOriginObservedElementState\n{\n    private _tabster: Types.TabsterCore;\n    private _transactions: CrossOriginTransactions;\n    private _lastRequestFocusId = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        transactions: CrossOriginTransactions\n    ) {\n        super();\n        this._tabster = tabster;\n        this._transactions = transactions;\n    }\n\n    async getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this.waitElement(observedName, 0, accessibility);\n    }\n\n    async waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this._transactions\n            .beginTransaction(\n                GetElementTransaction,\n                {\n                    observedName,\n                    accessibility,\n                },\n                timeout\n            )\n            .then((value) =>\n                value\n                    ? StateTransaction.createElement(this._tabster, value)\n                    : null\n            );\n    }\n\n    async requestFocus(\n        observedName: string,\n        timeout: number\n    ): Promise<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        return this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        ).then((element) =>\n            this._lastRequestFocusId === requestId && element\n                ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this._tabster.crossOrigin!.focusedElement.focus(element, true)\n                : false\n        );\n    }\n\n    static trigger(\n        instance: Types.CrossOriginObservedElementState,\n        element: CrossOriginElement,\n        details: Types.ObservedElementProps\n    ): void {\n        (instance as CrossOriginObservedElementState).trigger(element, details);\n    }\n}\n\nexport class CrossOriginAPI implements Types.CrossOriginAPI {\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _transactions: CrossOriginTransactions;\n    private _blurTimer: number | undefined;\n    private _ctx: CrossOriginInstanceContext;\n\n    focusedElement: Types.CrossOriginFocusedElementState;\n    observedElement: Types.CrossOriginObservedElementState;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._ctx = {\n            ignoreKeyboardNavigationStateUpdate: false,\n            deloserByUId: {},\n        };\n\n        this._transactions = new CrossOriginTransactions(\n            tabster,\n            this._win,\n            this._ctx\n        );\n        this.focusedElement = new CrossOriginFocusedElementState(\n            this._transactions\n        );\n        this.observedElement = new CrossOriginObservedElementState(\n            tabster,\n            this._transactions\n        );\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp()) {\n            return this._transactions.setSendUp(sendUp);\n        } else {\n            this._initTimer = this._win().setTimeout(this._init, 0);\n            return this._transactions.setup(sendUp);\n        }\n    }\n\n    isSetUp(): boolean {\n        return this._transactions.isSetUp;\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.subscribe(this._onFocus);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tabster.observedElement!.subscribe(this._onObserved);\n\n        if (!this._ctx.origOutlineSetup) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this._ctx.origOutlineSetup = tabster.outline!.setup;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tabster.outline!.setup = this._outlineSetup;\n        }\n\n        this._transactions\n            .beginTransaction(\n                BootstrapTransaction,\n                undefined,\n                undefined,\n                undefined,\n                _targetIdUp\n            )\n            .then((data) => {\n                if (\n                    data &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                        data.isNavigatingWithKeyboard\n                ) {\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = true;\n                    KeyboardNavigationState.setVal(\n                        this._tabster.keyboardNavigation,\n                        data.isNavigatingWithKeyboard\n                    );\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = false;\n                }\n            });\n    };\n\n    dispose(): void {\n        if (this._initTimer) {\n            this._win().clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.unsubscribe(this._onFocus);\n        tabster.observedElement?.unsubscribe(this._onObserved);\n\n        this._transactions.dispose();\n        this.focusedElement.dispose();\n        this.observedElement.dispose();\n\n        this._ctx.deloserByUId = {};\n    }\n\n    private _onKeyboardNavigationStateChanged = (value: boolean): void => {\n        if (!this._ctx.ignoreKeyboardNavigationStateUpdate) {\n            this._transactions.beginTransaction(StateTransaction, {\n                state: CrossOriginStates.KeyboardNavigation,\n                ownerUId: getWindowUId(this._win()),\n                isNavigatingWithKeyboard: value,\n            });\n        }\n    };\n\n    private _onFocus = (element: HTMLElementWithUID | undefined): void => {\n        const win = this._win();\n\n        const ownerUId = getWindowUId(win);\n\n        if (this._blurTimer) {\n            win.clearTimeout(this._blurTimer);\n            this._blurTimer = undefined;\n        }\n\n        if (element) {\n            this._transactions.beginTransaction(StateTransaction, {\n                ...GetElementTransaction.getElementData(\n                    this._tabster,\n                    element,\n                    this._win,\n                    this._ctx,\n                    ownerUId\n                ),\n                state: CrossOriginStates.Focused,\n            });\n        } else {\n            this._blurTimer = win.setTimeout(() => {\n                this._blurTimer = undefined;\n\n                if (this._ctx.focusOwner && this._ctx.focusOwner === ownerUId) {\n                    this._transactions\n                        .beginTransaction(GetElementTransaction, undefined)\n                        .then((value) => {\n                            if (!value && this._ctx.focusOwner === ownerUId) {\n                                this._transactions.beginTransaction(\n                                    StateTransaction,\n                                    {\n                                        ownerUId,\n                                        state: CrossOriginStates.Blurred,\n                                        force: false,\n                                    }\n                                );\n                            }\n                        });\n                }\n            }, 0);\n        }\n    };\n\n    private _onObserved = (\n        element: HTMLElement,\n        details: Types.ObservedElementProps\n    ): void => {\n        const d = GetElementTransaction.getElementData(\n            this._tabster,\n            element,\n            this._win,\n            this._ctx,\n            getWindowUId(this._win())\n        ) as CrossOriginStateData;\n\n        d.state = CrossOriginStates.Observed;\n        d.observedName = details.names?.[0];\n        d.observedDetails = details.details;\n\n        this._transactions.beginTransaction(StateTransaction, d);\n    };\n\n    private _outlineSetup = (props?: Partial<Types.OutlineProps>): void => {\n        this._transactions.beginTransaction(StateTransaction, {\n            state: CrossOriginStates.Outline,\n            ownerUId: getWindowUId(this._win()),\n            outline: props,\n        });\n    };\n}\n\nfunction getDeloserUID(\n    getWindow: Types.GetWindow,\n    context: CrossOriginInstanceContext,\n    deloser: Types.Deloser\n): string | undefined {\n    const deloserElement = deloser.getElement();\n\n    if (deloserElement) {\n        const uid = getElementUId(getWindow, deloserElement);\n\n        if (!context.deloserByUId[uid]) {\n            context.deloserByUId[uid] = deloser;\n        }\n\n        return uid;\n    }\n\n    return undefined;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getLastChild,\n    matchesSelector,\n    shouldIgnoreFocus,\n    HTMLElementWithDummyContainer,\n} from \"./Utils\";\n\nconst _focusableSelector = [\n    \"a[href]\",\n    \"button:not([disabled])\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"*[tabindex]\",\n    \"*[contenteditable]\",\n].join(\", \");\n\nexport class FocusableAPI implements Types.FocusableAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n    }\n\n    dispose(): void {\n        /**/\n    }\n\n    private _getBody(): HTMLElement | undefined {\n        const last = this._tabster.focusedElement.getLastFocusedElement();\n\n        if (last && last.ownerDocument) {\n            return last.ownerDocument.body;\n        }\n\n        return this._win().document.body;\n    }\n\n    getProps(element: HTMLElement): Types.FocusableProps {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n        return (tabsterOnElement && tabsterOnElement.focusable) || {};\n    }\n\n    isFocusable(\n        el: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            matchesSelector(el, _focusableSelector) &&\n            (includeProgrammaticallyFocusable || el.tabIndex !== -1)\n        ) {\n            return (\n                (noVisibleCheck || this.isVisible(el)) &&\n                (noAccessibleCheck || this.isAccessible(el))\n            );\n        }\n\n        return false;\n    }\n\n    isVisible(el: HTMLElement): boolean {\n        if (!el.ownerDocument) {\n            return false;\n        }\n\n        if (el.offsetParent === null && el.ownerDocument.body !== el) {\n            return false;\n        }\n\n        const win = el.ownerDocument.defaultView;\n\n        if (!win) {\n            return false;\n        }\n\n        const rect = el.ownerDocument.body.getBoundingClientRect();\n\n        if (rect.width === 0 && rect.height === 0) {\n            // This might happen, for example, if our <body> is in hidden <iframe>.\n            return false;\n        }\n\n        const computedStyle = win.getComputedStyle(el);\n\n        if (computedStyle.visibility === \"hidden\") {\n            return false;\n        }\n\n        return true;\n    }\n\n    isAccessible(el: HTMLElement): boolean {\n        for (let e: HTMLElement | null = el; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (this._isHidden(e)) {\n                return false;\n            }\n\n            const ignoreDisabled =\n                tabsterOnElement?.focusable?.ignoreAriaDisabled;\n\n            if (!ignoreDisabled && this._isDisabled(e)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _isDisabled(el: HTMLElement): boolean {\n        return el.hasAttribute(\"disabled\");\n    }\n\n    private _isHidden(el: HTMLElement): boolean {\n        const attrVal = el.getAttribute(\"aria-hidden\");\n\n        if (attrVal && attrVal.toLowerCase() === \"true\") {\n            return true;\n        }\n\n        return false;\n    }\n\n    findFirst(options: Types.FindFirstProps): HTMLElement | null | undefined {\n        return this.findElement({\n            container: this._getBody(),\n            ...options,\n        });\n    }\n\n    findLast(options: Types.FindFirstProps): HTMLElement | null | undefined {\n        return this.findElement({\n            container: this._getBody(),\n            isBackward: true,\n            ...options,\n        });\n    }\n\n    findNext(options: Types.FindNextProps): HTMLElement | null | undefined {\n        return this.findElement({\n            container: this._getBody(),\n            ...options,\n        });\n    }\n\n    findPrev(options: Types.FindNextProps): HTMLElement | null | undefined {\n        return this.findElement({\n            container: this._getBody(),\n            isBackward: true,\n            ...options,\n        });\n    }\n\n    findDefault(options: Types.FindDefaultProps): HTMLElement | null {\n        return (\n            this.findElement({\n                ...options,\n                acceptCondition: (el) =>\n                    this._tabster.focusable.isFocusable(\n                        el,\n                        options.includeProgrammaticallyFocusable\n                    ) && !!this.getProps(el).isDefault,\n            }) || null\n        );\n    }\n\n    findAll(options: Types.FindAllProps): HTMLElement[] {\n        return this._findElements(true, options) || [];\n    }\n\n    findElement(\n        options: Types.FindFocusableProps\n    ): HTMLElement | null | undefined {\n        const found = this._findElements(false, options);\n        return found ? found[0] : found;\n    }\n\n    private _findElements(\n        findAll: boolean,\n        options: Types.FindFocusableProps\n    ): HTMLElement[] | null | undefined {\n        const {\n            container,\n            currentElement = null,\n            includeProgrammaticallyFocusable,\n            ignoreUncontrolled,\n            ignoreAccessibiliy,\n            isBackward,\n            onUncontrolled,\n            onElement,\n        } = options;\n\n        const elements: HTMLElement[] = [];\n\n        let { acceptCondition } = options;\n\n        if (!container) {\n            return null;\n        }\n\n        if (!acceptCondition) {\n            acceptCondition = (el) =>\n                this._tabster.focusable.isFocusable(\n                    el,\n                    includeProgrammaticallyFocusable,\n                    ignoreAccessibiliy,\n                    ignoreAccessibiliy\n                );\n        }\n\n        const acceptElementState: Types.FocusableAcceptElementState = {\n            container,\n            from: currentElement || container,\n            isBackward,\n            acceptCondition,\n            includeProgrammaticallyFocusable,\n            ignoreUncontrolled,\n            ignoreAccessibiliy,\n            cachedGrouppers: {},\n        };\n\n        const walker = createElementTreeWalker(\n            container.ownerDocument,\n            container,\n            (node) =>\n                this._acceptElement(node as HTMLElement, acceptElementState)\n        );\n\n        if (!walker) {\n            return null;\n        }\n\n        const prepareForNextElement = (\n            shouldContinueIfNotFound?: boolean\n        ): boolean => {\n            const foundElement = acceptElementState.foundElement;\n\n            if (foundElement) {\n                elements.push(foundElement);\n            }\n\n            if (findAll) {\n                if (foundElement) {\n                    acceptElementState.found = false;\n                    delete acceptElementState.foundElement;\n                    delete acceptElementState.fromCtx;\n                    acceptElementState.from = foundElement;\n\n                    if (onElement && !onElement(foundElement)) {\n                        return false;\n                    }\n                }\n\n                return !!(foundElement || shouldContinueIfNotFound);\n            } else {\n                return !!(shouldContinueIfNotFound && !foundElement);\n            }\n        };\n\n        if (currentElement) {\n            walker.currentNode = currentElement;\n        } else if (isBackward) {\n            const lastChild = getLastChild(container);\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (\n                this._acceptElement(lastChild, acceptElementState) ===\n                    NodeFilter.FILTER_ACCEPT &&\n                !prepareForNextElement(true)\n            ) {\n                return elements;\n            }\n\n            walker.currentNode = lastChild;\n        }\n\n        let foundElement: HTMLElement | null | undefined;\n        do {\n            foundElement =\n                ((isBackward\n                    ? walker.previousNode()\n                    : walker.nextNode()) as HTMLElement | null) || undefined;\n        } while (prepareForNextElement());\n\n        if (!findAll) {\n            const nextUncontrolled = acceptElementState.nextUncontrolled;\n\n            if (nextUncontrolled) {\n                if (onUncontrolled) {\n                    onUncontrolled(nextUncontrolled);\n                }\n\n                if (foundElement) {\n                    // We have an uncontrolled area and there is a controlled element after it.\n                    // Return undefined for the default Tab action.\n                    return undefined;\n                } else {\n                    // Otherwise, return null to moveOutWithDefaultAction().\n                    return null;\n                }\n            }\n        }\n\n        return elements.length ? elements : null;\n    }\n\n    private _acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number {\n        if (state.found) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const container = state.container;\n\n        if (element === container) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (!container.contains(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (\n            (element as HTMLElementWithDummyContainer).__tabsterDummyContainer\n        ) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let lastToIgnore = state.lastToIgnore;\n\n        if (lastToIgnore) {\n            if (lastToIgnore.contains(element)) {\n                return NodeFilter.FILTER_REJECT;\n            } else {\n                lastToIgnore = state.lastToIgnore = undefined;\n            }\n        }\n\n        const ctx = (state.currentCtx = RootAPI.getTabsterContext(\n            this._tabster,\n            element\n        ));\n\n        // Tabster is opt in, if it is not managed, don't try and get do anything special\n        if (!ctx) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (state.ignoreUncontrolled) {\n            if (shouldIgnoreFocus(element)) {\n                return NodeFilter.FILTER_SKIP;\n            }\n        } else if (\n            ctx.uncontrolled &&\n            !state.nextUncontrolled &&\n            this._tabster.focusable.isFocusable(element, undefined, true, true)\n        ) {\n            if (!ctx.groupper && !ctx.mover) {\n                state.nextUncontrolled = ctx.uncontrolled;\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        // We assume iframes are focusable because native tab behaviour would tab inside\n        if (element.tagName === \"IFRAME\" || element.tagName === \"WEBVIEW\") {\n            state.found = true;\n            state.lastToIgnore = state.foundElement = element;\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        if (!state.ignoreAccessibiliy && !this.isAccessible(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let result: number | undefined;\n\n        let fromCtx = state.fromCtx;\n\n        if (!fromCtx) {\n            fromCtx = state.fromCtx = RootAPI.getTabsterContext(\n                this._tabster,\n                state.from\n            );\n        }\n\n        const fromMover = fromCtx?.mover;\n        let groupper = ctx.groupper;\n        let mover = ctx.mover;\n\n        if (groupper || mover || fromMover) {\n            const groupperElement = groupper?.getElement();\n            const fromMoverElement = fromMover?.getElement();\n            let moverElement = mover?.getElement();\n\n            if (\n                moverElement &&\n                fromMoverElement &&\n                container.contains(fromMoverElement) &&\n                (!groupperElement ||\n                    !mover ||\n                    fromMoverElement.contains(groupperElement))\n            ) {\n                mover = fromMover;\n                moverElement = fromMoverElement;\n            }\n\n            if (\n                groupperElement &&\n                (groupperElement === container ||\n                    !container.contains(groupperElement))\n            ) {\n                groupper = undefined;\n            }\n\n            if (moverElement && !container.contains(moverElement)) {\n                mover = undefined;\n            }\n\n            if (groupper && mover) {\n                if (\n                    moverElement &&\n                    groupperElement &&\n                    !groupperElement.contains(moverElement)\n                ) {\n                    mover = undefined;\n                } else {\n                    groupper = undefined;\n                }\n            }\n\n            if (groupper) {\n                result = groupper.acceptElement(element, state);\n            }\n\n            if (mover) {\n                result = mover.acceptElement(element, state);\n            }\n        }\n\n        if (result === undefined) {\n            result = state.acceptCondition(element)\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_SKIP;\n        }\n\n        if (result === NodeFilter.FILTER_ACCEPT && !state.found) {\n            state.found = true;\n            state.foundElement = element;\n        }\n\n        return result;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Keys: {\n    Tab: 9;\n    Enter: 13;\n    Esc: 27;\n    Space: 32;\n    PageUp: 33;\n    PageDown: 34;\n    End: 35;\n    Home: 36;\n    Left: 37;\n    Up: 38;\n    Right: 39;\n    Down: 40;\n} = {\n    Tab: 9,\n    Enter: 13,\n    Esc: 27,\n    Space: 32,\n    PageUp: 33,\n    PageDown: 34,\n    End: 35,\n    Home: 36,\n    Left: 37,\n    Up: 38,\n    Right: 39,\n    Down: 40,\n};\n\nexport type Key = typeof Keys[keyof typeof Keys];\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { KeyborgFocusInEvent, KEYBORG_FOCUSIN, nativeFocus } from \"keyborg\";\n\nimport { Keys } from \"../Keys\";\nimport { RootAPI } from \"../Root\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    DummyInputManager,\n    getLastChild,\n    getAdjacentElement,\n    shouldIgnoreFocus,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class FocusedElementState\n    extends Subscribable<HTMLElement | undefined, Types.FocusedElementDetails>\n    implements Types.FocusedElementState\n{\n    private static _lastResetElement: WeakHTMLElement | undefined;\n    private static _isTabbingTimer: number | undefined;\n    static isTabbing = false;\n\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _nextVal:\n        | {\n              element: WeakHTMLElement | undefined;\n              details: Types.FocusedElementDetails;\n          }\n        | undefined;\n    private _lastVal: WeakHTMLElement | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        super();\n\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._initTimer = getWindow().setTimeout(this._init, 0);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        const win = this._win();\n\n        // Add these event listeners as capture - we want Tabster to run before user event handlers\n        win.document.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        win.document.addEventListener(\"focusout\", this._onFocusOut, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n    };\n\n    dispose(): void {\n        super.dispose();\n\n        const win = this._win();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        win.document.removeEventListener(\n            KEYBORG_FOCUSIN,\n            this._onFocusIn,\n            true\n        );\n        win.document.removeEventListener(\"focusout\", this._onFocusOut, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        delete FocusedElementState._lastResetElement;\n\n        delete this._nextVal;\n        delete this._lastVal;\n    }\n\n    static forgetMemorized(\n        instance: Types.FocusedElementState,\n        parent: HTMLElement\n    ): void {\n        let wel = FocusedElementState._lastResetElement;\n        let el = wel && wel.get();\n        if (el && parent.contains(el)) {\n            delete FocusedElementState._lastResetElement;\n        }\n\n        el = (instance as FocusedElementState)._nextVal?.element?.get();\n        if (el && parent.contains(el)) {\n            delete (instance as FocusedElementState)._nextVal;\n        }\n\n        wel = (instance as FocusedElementState)._lastVal;\n        el = wel && wel.get();\n        if (el && parent.contains(el)) {\n            delete (instance as FocusedElementState)._lastVal;\n        }\n    }\n\n    getFocusedElement(): HTMLElement | undefined {\n        return this.getVal();\n    }\n\n    getLastFocusedElement(): HTMLElement | undefined {\n        let el = this._lastVal?.get();\n\n        if (!el || (el && !documentContains(el.ownerDocument, el))) {\n            this._lastVal = el = undefined;\n        }\n\n        return el;\n    }\n\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            !this._tabster.focusable.isFocusable(\n                element,\n                noFocusedProgrammaticallyFlag,\n                false,\n                noAccessibleCheck\n            )\n        ) {\n            return false;\n        }\n\n        element.focus();\n\n        return true;\n    }\n\n    focusDefault(container: HTMLElement): boolean {\n        const el = this._tabster.focusable.findDefault({ container });\n\n        if (el) {\n            this._tabster.focusedElement.focus(el);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _focusFirstOrLast(\n        isFirst: boolean,\n        props: Types.FindFirstProps\n    ): boolean {\n        const tabsterFocusable = this._tabster.focusable;\n        const container = props.container;\n        let uncontrolled: HTMLElement | undefined;\n        let toFocus: HTMLElement | null | undefined;\n\n        if (container) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            if (ctx) {\n                let next = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    container,\n                    undefined,\n                    !isFirst\n                );\n\n                if (next) {\n                    toFocus = next.element;\n                    uncontrolled = next.uncontrolled;\n\n                    while (!toFocus && uncontrolled) {\n                        if (\n                            tabsterFocusable.isFocusable(\n                                uncontrolled,\n                                false,\n                                true,\n                                true\n                            )\n                        ) {\n                            toFocus = uncontrolled;\n                        } else {\n                            toFocus = tabsterFocusable[\n                                isFirst ? \"findFirst\" : \"findLast\"\n                            ]({\n                                container: uncontrolled,\n                                ignoreUncontrolled: true,\n                                ignoreAccessibiliy: true,\n                            });\n                        }\n\n                        if (!toFocus) {\n                            next = FocusedElementState.findNextTabbable(\n                                this._tabster,\n                                ctx,\n                                uncontrolled,\n                                undefined,\n                                !isFirst\n                            );\n\n                            if (next) {\n                                toFocus = next.element;\n                                uncontrolled = next.uncontrolled;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (toFocus && !container?.contains(toFocus)) {\n            toFocus = undefined;\n        }\n\n        if (toFocus) {\n            this.focus(toFocus, false, true);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    focusFirst(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(true, props);\n    }\n\n    focusLast(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(false, props);\n    }\n\n    resetFocus(container: HTMLElement): boolean {\n        if (!this._tabster.focusable.isVisible(container)) {\n            return false;\n        }\n\n        if (!this._tabster.focusable.isFocusable(container, true, true, true)) {\n            const prevTabIndex = container.getAttribute(\"tabindex\");\n            const prevAriaHidden = container.getAttribute(\"aria-hidden\");\n\n            container.tabIndex = -1;\n            container.setAttribute(\"aria-hidden\", \"true\");\n\n            FocusedElementState._lastResetElement = new WeakHTMLElement(\n                this._win,\n                container\n            );\n\n            this.focus(container, true, true);\n\n            this._setOrRemoveAttribute(container, \"tabindex\", prevTabIndex);\n            this._setOrRemoveAttribute(\n                container,\n                \"aria-hidden\",\n                prevAriaHidden\n            );\n        } else {\n            this.focus(container);\n        }\n\n        return true;\n    }\n\n    private _setOrRemoveAttribute(\n        element: HTMLElement,\n        name: string,\n        value: string | null\n    ): void {\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    private _setFocusedElement(\n        element?: HTMLElement,\n        relatedTarget?: HTMLElement,\n        isFocusedProgrammatically?: boolean\n    ): void {\n        if (this._tabster._noop) {\n            return;\n        }\n\n        const details: Types.FocusedElementDetails = { relatedTarget };\n\n        if (element) {\n            const lastResetElement =\n                FocusedElementState._lastResetElement?.get();\n            FocusedElementState._lastResetElement = undefined;\n\n            if (lastResetElement === element || shouldIgnoreFocus(element)) {\n                return;\n            }\n\n            details.isFocusedProgrammatically = isFocusedProgrammatically;\n        }\n\n        const nextVal = (this._nextVal = {\n            element: element\n                ? new WeakHTMLElement(this._win, element)\n                : undefined,\n            details,\n        });\n\n        if (element && element !== this._val) {\n            this._validateFocusedElement(element);\n        }\n\n        // _validateFocusedElement() might cause the refocus which will trigger\n        // another call to this function. Making sure that the value is correct.\n        if (this._nextVal === nextVal) {\n            this.setVal(element, details);\n        }\n\n        this._nextVal = undefined;\n    }\n\n    protected setVal(\n        val: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        super.setVal(val, details);\n\n        if (val) {\n            this._lastVal = new WeakHTMLElement(this._win, val);\n        }\n    }\n\n    private _onFocusIn = (e: KeyborgFocusInEvent): void => {\n        this._setFocusedElement(\n            e.target as HTMLElement,\n            e.details.relatedTarget as HTMLElement | undefined,\n            e.details.isFocusedProgrammatically\n        );\n    };\n\n    private _onFocusOut = (e: FocusEvent): void => {\n        this._setFocusedElement(\n            undefined,\n            e.relatedTarget as HTMLElement | undefined\n        );\n    };\n\n    static findNextTabbable(\n        tabster: Types.TabsterCore,\n        ctx: Types.TabsterContext,\n        container?: HTMLElement,\n        currentElement?: HTMLElement,\n        isBackward?: boolean\n    ): Types.NextTabbable | null {\n        const actualContainer = container || ctx.root.getElement();\n\n        if (!actualContainer) {\n            return null;\n        }\n\n        let next: Types.NextTabbable | null = null;\n\n        const isTabbingTimer = FocusedElementState._isTabbingTimer;\n        const win = tabster.getWindow();\n\n        if (isTabbingTimer) {\n            win.clearTimeout(isTabbingTimer);\n        }\n\n        FocusedElementState.isTabbing = true;\n        FocusedElementState._isTabbingTimer = win.setTimeout(() => {\n            delete FocusedElementState._isTabbingTimer;\n            FocusedElementState.isTabbing = false;\n        }, 0);\n\n        const callFindNext = (what: Types.Groupper | Types.Mover) => {\n            next = what.findNextTabbable(currentElement, isBackward);\n        };\n\n        if (ctx.groupper && ctx.mover) {\n            let isGroupperFirst = ctx.isGroupperFirst;\n\n            if (isGroupperFirst && currentElement) {\n                const fromCtx = RootAPI.getTabsterContext(\n                    tabster,\n                    currentElement\n                );\n\n                if (fromCtx?.groupper !== ctx.groupper) {\n                    isGroupperFirst = false;\n                }\n            }\n\n            callFindNext(isGroupperFirst ? ctx.groupper : ctx.mover);\n        } else if (ctx.groupper) {\n            callFindNext(ctx.groupper);\n        } else if (ctx.mover) {\n            callFindNext(ctx.mover);\n        } else {\n            let uncontrolled: HTMLElement | undefined;\n            const onUncontrolled = (el: HTMLElement) => {\n                uncontrolled = el;\n            };\n            const nextElement = isBackward\n                ? tabster.focusable.findPrev({\n                      container: actualContainer,\n                      currentElement,\n                      onUncontrolled,\n                  })\n                : tabster.focusable.findNext({\n                      container: actualContainer,\n                      currentElement,\n                      onUncontrolled,\n                  });\n\n            next = {\n                element: uncontrolled ? undefined : nextElement,\n                uncontrolled,\n            };\n        }\n\n        const lastMoverOrGroupperElement =\n            next?.lastMoverOrGroupper?.getElement();\n\n        if (lastMoverOrGroupperElement) {\n            next = null;\n\n            const adjacentElement = getAdjacentElement(\n                lastMoverOrGroupperElement,\n                isBackward\n            );\n\n            if (adjacentElement) {\n                const adjacentCtx = RootAPI.getTabsterContext(\n                    tabster,\n                    adjacentElement,\n                    {\n                        checkRtl: true,\n                    }\n                );\n\n                if (adjacentCtx) {\n                    let adjacentFrom = getAdjacentElement(\n                        adjacentElement,\n                        !isBackward\n                    );\n\n                    if (adjacentFrom) {\n                        if (!isBackward) {\n                            adjacentFrom = getLastChild(adjacentFrom);\n                        }\n\n                        next = FocusedElementState.findNextTabbable(\n                            tabster,\n                            adjacentCtx,\n                            actualContainer,\n                            adjacentFrom,\n                            isBackward\n                        );\n                    }\n                }\n            }\n        }\n\n        return next;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _validateFocusedElement = (element: HTMLElement): void => {\n        // TODO: Make sure this is not needed anymore and write tests.\n    };\n\n    private _onKeyDown = (e: KeyboardEvent): void => {\n        if (e.keyCode !== Keys.Tab || e.ctrlKey) {\n            return;\n        }\n\n        const currentElement = this.getVal();\n\n        if (\n            !currentElement ||\n            !currentElement.ownerDocument ||\n            currentElement.contentEditable === \"true\"\n        ) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const controlTab = tabster.controlTab;\n        const ctx = RootAPI.getTabsterContext(tabster, currentElement);\n\n        if (\n            !ctx ||\n            (!controlTab && !ctx.groupper && !ctx.mover) ||\n            ctx.ignoreKeydown[e.key as \"Tab\"]\n        ) {\n            return;\n        }\n\n        const isBackward = e.shiftKey;\n\n        const next = FocusedElementState.findNextTabbable(\n            tabster,\n            ctx,\n            undefined,\n            currentElement,\n            isBackward\n        );\n\n        if (!next || (!controlTab && !next.element)) {\n            if (!controlTab) {\n                const lastMoverOrGroupper = next?.lastMoverOrGroupper;\n\n                if (lastMoverOrGroupper) {\n                    lastMoverOrGroupper.dummyManager?.moveOutWithDefaultAction(\n                        isBackward\n                    );\n\n                    return;\n                }\n            }\n        }\n\n        let nextElement: HTMLElement | null | undefined;\n\n        if (next) {\n            let uncontrolled = next.uncontrolled;\n\n            if (uncontrolled) {\n                const isGroupperFirst = ctx.isGroupperFirst;\n                let moveOutside = false;\n\n                if (isGroupperFirst !== undefined) {\n                    const groupper = ctx.groupper?.getElement();\n                    const mover = ctx.mover?.getElement();\n                    let moveFrom: HTMLElement | undefined;\n\n                    if (\n                        isGroupperFirst &&\n                        groupper &&\n                        uncontrolled.contains(groupper)\n                    ) {\n                        moveFrom = groupper;\n                    } else if (\n                        !isGroupperFirst &&\n                        mover &&\n                        uncontrolled.contains(mover)\n                    ) {\n                        moveFrom = mover;\n                    }\n\n                    if (moveFrom) {\n                        uncontrolled = moveFrom;\n                        moveOutside = true;\n                    }\n                }\n\n                if (uncontrolled && ctx.uncontrolled !== uncontrolled) {\n                    // We have met an uncontrolled area, just allow default action.\n                    DummyInputManager.moveWithPhantomDummy(\n                        this._tabster,\n                        uncontrolled,\n                        moveOutside,\n                        isBackward\n                    );\n                }\n\n                return;\n            }\n\n            nextElement = next.element;\n\n            if (ctx.modalizer) {\n                const nextElementCtx =\n                    nextElement &&\n                    RootAPI.getTabsterContext(tabster, nextElement);\n\n                if (\n                    !nextElementCtx ||\n                    ctx.root.uid !== nextElementCtx.root.uid ||\n                    !nextElementCtx.modalizer?.isActive()\n                ) {\n                    if (ctx.modalizer.onBeforeFocusOut()) {\n                        e.preventDefault();\n\n                        return;\n                    }\n                }\n\n                // circular focus trap for modalizer\n                if (\n                    !nextElement &&\n                    ctx.modalizer.isActive() &&\n                    ctx.modalizer.getProps().isTrapped\n                ) {\n                    const findFn = isBackward ? \"findLast\" : \"findFirst\";\n                    nextElement = tabster.focusable[findFn]({\n                        container: ctx.modalizer.getElement(),\n                    });\n                }\n            }\n        }\n\n        if (nextElement) {\n            // For iframes just allow normal Tab behaviour\n            if (nextElement.tagName !== \"IFRAME\") {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n\n                nativeFocus(nextElement);\n            }\n        } else {\n            ctx.root.moveOutWithDefaultAction(isBackward);\n        }\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    TabsterPart,\n    WeakHTMLElement,\n    getAdjacentElement,\n} from \"./Utils\";\n\nclass GroupperDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        groupper: Groupper,\n        tabster: Types.TabsterCore\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Groupper, true);\n\n        this._setHandlers(\n            (\n                dummyInput: DummyInput,\n                isBackward: boolean,\n                relatedTarget: HTMLElement | null\n            ) => {\n                const container = element.get();\n\n                if (container && !dummyInput.shouldMoveOut) {\n                    const input = dummyInput.input;\n\n                    if (input) {\n                        const ctx = RootAPI.getTabsterContext(tabster, input);\n\n                        if (ctx) {\n                            let next: HTMLElement | null | undefined;\n\n                            if (\n                                relatedTarget &&\n                                relatedTarget.contentEditable === \"true\" &&\n                                groupper.getProps().tabbability ===\n                                    Types.GroupperTabbabilities\n                                        .LimitedTrapFocus &&\n                                container.contains(relatedTarget)\n                            ) {\n                                next = groupper.findNextTabbable(\n                                    relatedTarget,\n                                    isBackward\n                                )?.element;\n                            }\n\n                            if (!next) {\n                                next = FocusedElementState.findNextTabbable(\n                                    tabster,\n                                    ctx,\n                                    undefined,\n                                    dummyInput.isOutside\n                                        ? input\n                                        : getAdjacentElement(\n                                              container,\n                                              !isBackward\n                                          ),\n                                    isBackward\n                                )?.element;\n                            }\n\n                            if (next) {\n                                tabster.focusedElement.focus(next);\n                            }\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n\nexport class Groupper\n    extends TabsterPart<Types.GroupperProps>\n    implements Types.Groupper\n{\n    private _shouldTabInside = false;\n    private _first: WeakHTMLElement | undefined;\n    private _onDispose: (groupper: Groupper) => void;\n\n    dummyManager: GroupperDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (groupper: Groupper) => void,\n        props: Types.GroupperProps\n    ) {\n        super(tabster, element, props);\n        this.makeTabbable(false);\n\n        this._onDispose = onDispose;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new GroupperDummyManager(\n                this._element,\n                this,\n                tabster\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const element = this._element.get();\n        this.dummyManager?.dispose();\n\n        if (element) {\n            if (__DEV__) {\n                _setInformativeStyle(this._element, true);\n            }\n        }\n\n        delete this._first;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        isBackward?: boolean\n    ): Types.NextTabbable | null {\n        const groupperElement = this.getElement();\n\n        if (!groupperElement) {\n            return null;\n        }\n\n        const groupperFirstFocusable = this.getFirst(true);\n\n        if (!currentElement || !groupperElement.contains(currentElement)) {\n            return {\n                element: groupperFirstFocusable,\n                lastMoverOrGroupper: groupperFirstFocusable ? undefined : this,\n            };\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let uncontrolled: HTMLElement | undefined;\n        const onUncontrolled = (el: HTMLElement) => {\n            uncontrolled = el;\n        };\n\n        if (this._shouldTabInside && groupperFirstFocusable) {\n            next = isBackward\n                ? tabster.focusable.findPrev({\n                      container: groupperElement,\n                      currentElement,\n                      onUncontrolled,\n                  })\n                : tabster.focusable.findNext({\n                      container: groupperElement,\n                      currentElement,\n                      onUncontrolled,\n                  });\n\n            if (\n                !uncontrolled &&\n                !next &&\n                this._props.tabbability ===\n                    Types.GroupperTabbabilities.LimitedTrapFocus\n            ) {\n                next = isBackward\n                    ? tabster.focusable.findLast({\n                          container: groupperElement,\n                      })\n                    : tabster.focusable.findFirst({\n                          container: groupperElement,\n                      });\n            }\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            lastMoverOrGroupper: next || uncontrolled ? undefined : this,\n        };\n    }\n\n    makeTabbable(isTabbable: boolean): void {\n        this._shouldTabInside = isTabbable || !this._props.tabbability;\n\n        if (__DEV__) {\n            _setInformativeStyle(this._element, !this._shouldTabInside);\n        }\n    }\n\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined {\n        const element = this.getElement() || null;\n        let isParentActive = true;\n\n        for (let e = element?.parentElement; e; e = e.parentElement) {\n            const g = getTabsterOnElement(this._tabster, e)?.groupper as\n                | Groupper\n                | undefined;\n\n            if (g) {\n                if (!g._shouldTabInside) {\n                    isParentActive = false;\n                }\n            }\n        }\n\n        let ret = isParentActive\n            ? this._props.tabbability\n                ? this._shouldTabInside\n                : false\n            : undefined;\n\n        if (ret && noIfFirstIsFocused) {\n            const focused = this._tabster.focusedElement.getFocusedElement();\n\n            if (focused) {\n                ret = focused !== this.getFirst(true);\n            }\n        }\n\n        return ret;\n    }\n\n    getFirst(orContainer: boolean): HTMLElement | undefined {\n        const groupperElement = this.getElement();\n        let first: HTMLElement | undefined;\n\n        if (groupperElement) {\n            if (\n                orContainer &&\n                this._tabster.focusable.isFocusable(groupperElement)\n            ) {\n                return groupperElement;\n            }\n\n            first = this._first?.get();\n\n            if (!first) {\n                first =\n                    this._tabster.focusable.findFirst({\n                        container: groupperElement,\n                        ignoreUncontrolled: true,\n                    }) || undefined;\n\n                if (first) {\n                    this.setFirst(first);\n                }\n            }\n        }\n\n        return first;\n    }\n\n    setFirst(element: HTMLElement | undefined): void {\n        if (element) {\n            this._first = new WeakHTMLElement(this._tabster.getWindow, element);\n        } else {\n            delete this._first;\n        }\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const cachedGrouppers = state.cachedGrouppers;\n\n        let cached = cachedGrouppers[this.id];\n        let isActive: boolean | undefined;\n\n        if (cached) {\n            isActive = cached.isActive;\n        } else {\n            isActive = this.isActive(true);\n\n            cached = cachedGrouppers[this.id] = {\n                isActive,\n            };\n        }\n\n        const groupperElement = this.getElement();\n\n        if (groupperElement) {\n            if (isActive !== true) {\n                if (groupperElement.contains(state.from)) {\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                let first: HTMLElement | null | undefined;\n\n                if (\"first\" in cached) {\n                    first = cached.first;\n                } else {\n                    first = cached.first = this.getFirst(true);\n                }\n\n                if (first && state.acceptCondition(first)) {\n                    state.lastToIgnore = groupperElement;\n\n                    if (first !== state.from) {\n                        state.found = true;\n                        state.foundElement = first;\n                        return NodeFilter.FILTER_ACCEPT;\n                    } else {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateGroupperProps(props: Types.GroupperProps): void {\n    // TODO: Implement validation.\n}\n\nexport class GroupperAPI implements Types.GroupperAPI {\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _current: Record<string, Types.Groupper> = {};\n    private _grouppers: Record<string, Types.Groupper> = {};\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._initTimer = getWindow().setTimeout(this._init, 0);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        const win = this._win();\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        win.document.addEventListener(\"mousedown\", this._onMouseDown, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._current = {};\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\"mousedown\", this._onMouseDown, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        Object.keys(this._grouppers).forEach((groupperId) => {\n            if (this._grouppers[groupperId]) {\n                this._grouppers[groupperId].dispose();\n                delete this._grouppers[groupperId];\n            }\n        });\n    }\n\n    createGroupper(element: HTMLElement, props: Types.GroupperProps) {\n        if (__DEV__) {\n            validateGroupperProps(props);\n        }\n\n        const newGroupper = new Groupper(\n            this._tabster,\n            element,\n            this._onGroupperDispose,\n            props\n        );\n\n        this._grouppers[newGroupper.id] = newGroupper;\n\n        return newGroupper;\n    }\n\n    forgetCurrentGrouppers(): void {\n        this._current = {};\n    }\n\n    private _onGroupperDispose = (groupper: Groupper) => {\n        delete this._grouppers[groupper.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        if (element) {\n            this._updateCurrent(element, true, true);\n        }\n    };\n\n    private _onMouseDown = (e: MouseEvent): void => {\n        if (e.target) {\n            this._updateCurrent(e.target as HTMLElement, true);\n        }\n    };\n\n    private _updateCurrent(\n        element: HTMLElement,\n        includeTarget?: boolean,\n        checkTarget?: boolean\n    ): void {\n        const newIds: Record<string, true> = {};\n\n        let isTarget = true;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = el.parentElement\n        ) {\n            const groupper = getTabsterOnElement(this._tabster, el)?.groupper;\n\n            if (groupper) {\n                newIds[groupper.id] = true;\n\n                if (isTarget && checkTarget && el !== element) {\n                    isTarget = false;\n                }\n\n                if (includeTarget || !isTarget) {\n                    this._current[groupper.id] = groupper;\n                    const isTabbable =\n                        groupper.isActive() ||\n                        (element !== el &&\n                            (!groupper.getProps().delegated ||\n                                groupper.getFirst(false) !== element));\n\n                    groupper.makeTabbable(isTabbable);\n                }\n\n                isTarget = false;\n            }\n        }\n\n        for (const id of Object.keys(this._current)) {\n            const groupper = this._current[id];\n\n            if (!(groupper.id in newIds)) {\n                groupper.makeTabbable(false);\n                groupper.setFirst(undefined);\n                delete this._current[id];\n            }\n        }\n    }\n\n    private _onKeyDown = (e: KeyboardEvent): void => {\n        if (e.keyCode !== Keys.Enter && e.keyCode !== Keys.Esc) {\n            return;\n        }\n\n        const element = this._tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, element);\n            let groupper = ctx?.groupper;\n\n            if (ctx && groupper) {\n                let next: HTMLElement | null | undefined;\n\n                const groupperElement = groupper.getElement();\n\n                if (e.keyCode === Keys.Enter) {\n                    if (ctx.ignoreKeydown.Enter) {\n                        return;\n                    }\n\n                    if (\n                        element === groupperElement ||\n                        (groupper.getProps().delegated &&\n                            element === groupper.getFirst(false))\n                    ) {\n                        next = this._tabster.focusable.findNext({\n                            container: groupperElement,\n                            currentElement: element,\n                        });\n                    }\n                } else if (e.keyCode === Keys.Esc) {\n                    if (ctx.ignoreKeydown.Escape) {\n                        return;\n                    }\n\n                    if (groupperElement && groupperElement.contains(element)) {\n                        if (element !== groupperElement) {\n                            next = groupper.getFirst(true);\n                        } else {\n                            const parentElement = groupperElement.parentElement;\n                            const parentCtx = parentElement\n                                ? RootAPI.getTabsterContext(\n                                      this._tabster,\n                                      parentElement\n                                  )\n                                : undefined;\n\n                            groupper = parentCtx?.groupper;\n                            next = groupper?.getFirst(true);\n                        }\n                    }\n\n                    if (groupper) {\n                        groupper.makeTabbable(false);\n                    }\n                }\n\n                if (next) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n\n                    nativeFocus(next);\n                }\n            }\n        }\n    };\n}\n\nfunction _setInformativeStyle(\n    weakElement: Types.WeakHTMLElement,\n    remove: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-groupper\");\n            } else {\n                element.style.setProperty(\"--tabster-groupper\", \"unlimited\");\n            }\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { augmentAttribute } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nlet _lastInternalId = 0;\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    internalId?: string,\n    userId?: string,\n    isActive?: boolean,\n    isFocused?: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-modalizer\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-modalizer\",\n                    internalId +\n                        \",\" +\n                        userId +\n                        \",\" +\n                        (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        \",\" +\n                        (isFocused ? \"focused\" : \"not-focused\")\n                );\n            }\n        }\n    }\n}\n\nexport class Modalizer\n    extends TabsterPart<Types.ModalizerProps>\n    implements Types.Modalizer\n{\n    readonly internalId: string;\n    userId: string;\n\n    private _isActive: boolean | undefined;\n    private _isFocused = false;\n    /**\n     * Parent of modalizer Root, can be used for DOM cleanup if the modalizerRoot is no longer present\n     */\n    private _modalizerParent: WeakHTMLElement | null;\n    private _onDispose: (modalizer: Modalizer) => void;\n    private _moveOutWithDefault: (backwards: boolean) => void;\n    private _onActiveChange: (active: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (modalizer: Modalizer) => void,\n        moveOutWithDefault: (backwards: boolean) => void,\n        onActiveChange: (active: boolean) => void,\n        props: Types.ModalizerProps\n    ) {\n        super(tabster, element, props);\n\n        this.internalId = \"ml\" + ++_lastInternalId;\n        this.userId = props.id;\n        this._onDispose = onDispose;\n        this._moveOutWithDefault = moveOutWithDefault;\n        this._onActiveChange = onActiveChange;\n        if (!tabster.controlTab) {\n            element.addEventListener(\"keydown\", this._onKeyDown);\n        }\n\n        const parentElement = element.parentElement;\n        if (parentElement) {\n            this._modalizerParent = new WeakHTMLElement(\n                tabster.getWindow,\n                parentElement\n            );\n        } else {\n            this._modalizerParent = null;\n        }\n\n        this._setAccessibilityProps();\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.internalId,\n                this.userId,\n                this._isActive,\n                this._isFocused\n            );\n        }\n    }\n\n    private _onKeyDown = (e: KeyboardEvent) => {\n        const keyCode = e.keyCode;\n        const isPrev = e.shiftKey;\n        if (keyCode !== Keys.Tab) {\n            return;\n        }\n\n        const focusedElement = this._tabster.focusedElement.getFocusedElement();\n        const modalizerElement = this.getElement();\n        let findFn: \"findPrev\" | \"findNext\" | \"findFirst\" | \"findLast\" = isPrev\n            ? \"findPrev\"\n            : \"findNext\";\n        let next: HTMLElement | null | undefined;\n        if (focusedElement && modalizerElement?.contains(focusedElement)) {\n            next = this._tabster.focusable[findFn]({\n                container: this.getElement(),\n                currentElement: focusedElement,\n            });\n        }\n\n        // circular focus trap for modalizer\n        if (!next && this._props.isTrapped) {\n            findFn = isPrev ? \"findLast\" : \"findFirst\";\n            next = this._tabster.focusable[findFn]({\n                container: this.getElement(),\n            });\n        }\n\n        if (next) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            nativeFocus(next);\n        } else if (!this._props.isOthersAccessible) {\n            this._moveOutWithDefault(isPrev);\n        }\n    };\n\n    setProps(props: Types.ModalizerProps): void {\n        if (props.id) {\n            this.userId = props.id;\n        }\n\n        this._props = { ...props };\n\n        this._setAccessibilityProps();\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n        this._remove();\n    }\n\n    setActive(active: boolean): void {\n        if (active === this._isActive) {\n            return;\n        }\n\n        this._isActive = active;\n        this._onActiveChange(active);\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.internalId,\n                this.userId,\n                this._isActive,\n                this._isFocused\n            );\n        }\n\n        let targetDocument =\n            this._element.get()?.ownerDocument ||\n            this._modalizerParent?.get()?.ownerDocument;\n        // Document can't be determined frm the modalizer root or its parent, fallback to window\n        if (!targetDocument) {\n            targetDocument = this._tabster.getWindow().document;\n        }\n        const root = targetDocument.body;\n\n        // Sets or restores aria-hidden value based on `active` flag\n        const ariaHiddenWalker = createElementTreeWalker(\n            targetDocument,\n            root,\n            (el: HTMLElement) => {\n                // if other content should be accessible no need to do walk the tree\n                if (this._props.isOthersAccessible) {\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                const modalizerRoot = this._element.get();\n                const modalizerParent = this._modalizerParent?.get();\n                const isModalizerElement = modalizerRoot === el;\n                const containsModalizerRoot = !!el.contains(\n                    modalizerRoot || null\n                );\n                const containsModalizerParent = !!el.contains(\n                    modalizerParent || null\n                );\n\n                if (isModalizerElement) {\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                if (containsModalizerRoot || containsModalizerParent) {\n                    return NodeFilter.FILTER_SKIP;\n                }\n\n                // Add `aria-hidden` when modalizer is active\n                // Restore `aria-hidden` when modalizer is inactive\n                augmentAttribute(\n                    this._tabster,\n                    el,\n                    \"aria-hidden\",\n                    active ? \"true\" : undefined\n                );\n\n                const modalizerRootOnPage =\n                    modalizerRoot === modalizerRoot?.ownerDocument.body\n                        ? false\n                        : modalizerRoot?.ownerDocument.body.contains(\n                              modalizerRoot\n                          );\n\n                const modalizerParentOnPage =\n                    modalizerParent === modalizerParent?.ownerDocument.body\n                        ? false\n                        : modalizerParent?.ownerDocument.body.contains(\n                              modalizerParent\n                          );\n\n                // if the modalizer root or its parent is not on the page, all nodes need to be visited\n                if (!modalizerParentOnPage && !modalizerRootOnPage) {\n                    return NodeFilter.FILTER_SKIP;\n                }\n\n                return NodeFilter.FILTER_REJECT;\n            }\n        );\n\n        if (ariaHiddenWalker) {\n            while (ariaHiddenWalker.nextNode()) {\n                /** Iterate to update the tree */\n            }\n        }\n    }\n\n    isActive(): boolean {\n        return !!this._isActive;\n    }\n\n    contains(element: HTMLElement) {\n        return !!this.getElement()?.contains(element);\n    }\n\n    onBeforeFocusOut(): boolean {\n        const element = this.getElement();\n\n        return element\n            ? !triggerEvent<Types.ModalizerEventDetails>(\n                  element,\n                  Types.ModalizerEventName,\n                  { eventName: \"beforefocusout\" }\n              )\n            : false;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n\n    private _setAccessibilityProps(): void {\n        if (__DEV__) {\n            const element = this._element.get();\n            if (\n                element &&\n                !element.getAttribute(\"aria-label\") &&\n                !element.getAttribute(\"aria-labelledby\")\n            ) {\n                console.warn(\n                    `Modalizer ${this.id} must have either aria-label or aria-labelledby`\n                );\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateModalizerProps(props: Types.ModalizerProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Manages the dummy inputs for the Modalizer API\n */\nclass ModalizerAPIDummyManager extends DummyInputManager {\n    private _modalizerAPI: ModalizerAPI;\n    private _tabster: Types.TabsterCore;\n\n    constructor(\n        modalizerAPI: ModalizerAPI,\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Modalizer);\n\n        this._modalizerAPI = modalizerAPI;\n        this._tabster = tabster;\n        this.setTabbable(false);\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const activeModalizer = this._modalizerAPI.activeModalizer;\n        if (!activeModalizer) {\n            return;\n        }\n\n        if (dummyInput.shouldMoveOut) {\n            return;\n        }\n\n        const findFn = dummyInput.isFirst ? \"findFirst\" : \"findLast\";\n        const next = this._tabster.focusable[findFn]({\n            container: activeModalizer.getElement(),\n        });\n        if (next) {\n            this._tabster.focusedElement.focus(next);\n        }\n    };\n}\n\nexport class ModalizerAPI implements Types.ModalizerAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _initTimer: number | undefined;\n    private _dummyManager?: ModalizerAPIDummyManager;\n    /** The currently active modalizer */\n    activeModalizer: Types.Modalizer | undefined;\n    private _focusOutTimer: number | undefined;\n    private _restoreModalizerFocusTimer: number | undefined;\n    /**\n     * Modalizers managed by this API, stored by id\n     */\n    private _modalizers: Record<string, Types.Modalizer>;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._initTimer = this._win().setTimeout(this._init, 0);\n        this._modalizers = {};\n        if (!tabster.controlTab) {\n            const documentBody = this._win().document.body;\n            this._dummyManager = new ModalizerAPIDummyManager(\n                this,\n                tabster,\n                new WeakHTMLElement(this._win, documentBody)\n            );\n        }\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n        this._dummyManager?.dispose();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        win.clearTimeout(this._restoreModalizerFocusTimer);\n        win.clearTimeout(this._focusOutTimer);\n\n        // Dispose all modalizers managed by the API\n        Object.keys(this._modalizers).forEach((modalizerId) => {\n            if (this._modalizers[modalizerId]) {\n                this._modalizers[modalizerId].dispose();\n                delete this._modalizers[modalizerId];\n            }\n        });\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        delete this.activeModalizer;\n    }\n\n    createModalizer(\n        element: HTMLElement,\n        props: Types.ModalizerProps\n    ): Types.Modalizer {\n        if (__DEV__) {\n            validateModalizerProps(props);\n        }\n\n        const modalizer = new Modalizer(\n            this._tabster,\n            element,\n            this._onModalizerDispose,\n            this._dummyManager?.moveOutWithDefaultAction ?? (() => null),\n            this._dummyManager?.setTabbable ?? (() => null),\n            props\n        );\n\n        this._modalizers[props.id] = modalizer;\n\n        // Adding a modalizer which is already focused, activate it\n        if (\n            element.contains(\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            const prevModalizer = this.activeModalizer;\n            if (prevModalizer) {\n                prevModalizer.setActive(false);\n            }\n            this.activeModalizer = modalizer;\n            this.activeModalizer.setActive(true);\n        }\n\n        return modalizer;\n    }\n\n    private _onModalizerDispose = (modalizer: Modalizer) => {\n        modalizer.setActive(false);\n\n        if (this.activeModalizer === modalizer) {\n            this.activeModalizer = undefined;\n        }\n\n        delete this._modalizers[modalizer.userId];\n    };\n\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean {\n        const ctx = RootAPI.getTabsterContext(\n            this._tabster,\n            elementFromModalizer\n        );\n\n        if (ctx && ctx.modalizer) {\n            this.activeModalizer = ctx.modalizer;\n            this.activeModalizer.setActive(true);\n\n            const props = this.activeModalizer.getProps();\n            const modalizerRoot = this.activeModalizer.getElement();\n\n            if (modalizerRoot) {\n                if (noFocusFirst === undefined) {\n                    noFocusFirst = props.isNoFocusFirst;\n                }\n\n                if (\n                    !noFocusFirst &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() &&\n                    this._tabster.focusedElement.focusFirst({\n                        container: modalizerRoot,\n                    })\n                ) {\n                    return true;\n                }\n\n                if (noFocusDefault === undefined) {\n                    noFocusDefault = props.isNoFocusDefault;\n                }\n\n                if (\n                    !noFocusDefault &&\n                    this._tabster.focusedElement.focusDefault(modalizerRoot)\n                ) {\n                    return true;\n                }\n\n                this._tabster.focusedElement.resetFocus(modalizerRoot);\n            }\n        } else if (__DEV__) {\n            console.error(\"Element is not in Modalizer.\", elementFromModalizer);\n        }\n\n        return false;\n    }\n\n    updateModalizer(modalizer: Types.Modalizer, removed?: boolean): void {\n        if (removed) {\n            if (modalizer.isActive()) {\n                modalizer.setActive(false);\n            }\n\n            delete this._modalizers[modalizer.userId];\n\n            if (this.activeModalizer === modalizer) {\n                this.activeModalizer = undefined;\n            }\n        }\n    }\n\n    /**\n     * Subscribes to the focus state and handles modalizer related focus events\n     * @param e - Element that is focused\n     * @param details - Additional data about the focus event\n     */\n    private _onFocus = (\n        focusedElement: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void => {\n        const ctx =\n            focusedElement &&\n            RootAPI.getTabsterContext(this._tabster, focusedElement);\n        // Modalizer behaviour is opt in, only apply to elements that have a tabster context\n        if (!ctx || !focusedElement) {\n            return;\n        }\n\n        if (this._focusOutTimer) {\n            this._win().clearTimeout(this._focusOutTimer);\n            this._focusOutTimer = undefined;\n        }\n\n        const modalizer = ctx?.modalizer;\n        if (modalizer === this.activeModalizer) {\n            return;\n        }\n\n        // Developers calling `element.focus()` should change/deactivate active modalizer\n        if (\n            details.isFocusedProgrammatically &&\n            !this.activeModalizer?.contains(focusedElement)\n        ) {\n            this.activeModalizer?.setActive(false);\n            this.activeModalizer = undefined;\n\n            if (modalizer) {\n                this.activeModalizer = modalizer;\n                this.activeModalizer.setActive(true);\n            }\n        } else if (!this.activeModalizer?.getProps().isOthersAccessible) {\n            // Focused outside of the active modalizer, try pull focus back to current modalizer\n            const win = this._win();\n            win.clearTimeout(this._restoreModalizerFocusTimer);\n            // TODO some rendering frameworks (i.e. React) might async rerender the DOM so we need to wait for a duration\n            // Figure out a better way of doing this rather than a 100ms timeout\n            this._restoreModalizerFocusTimer = win.setTimeout(\n                () => this._restoreModalizerFocus(focusedElement),\n                100\n            );\n        }\n    };\n\n    /**\n     * Called when an element is focused outside of an active modalizer.\n     * Attempts to pull focus back into the active modalizer\n     * @param outsideElement - An element being focused outside of the modalizer\n     */\n    private _restoreModalizerFocus(\n        outsideElement: HTMLElement | undefined\n    ): void {\n        if (!outsideElement?.ownerDocument || !this.activeModalizer) {\n            return;\n        }\n\n        let toFocus = this._tabster.focusable.findFirst({\n            container: this.activeModalizer.getElement(),\n        });\n        if (toFocus) {\n            if (\n                outsideElement.compareDocumentPosition(toFocus) &\n                document.DOCUMENT_POSITION_PRECEDING\n            ) {\n                toFocus = this._tabster.focusable.findLast({\n                    container: outsideElement.ownerDocument.body,\n                });\n\n                if (!toFocus) {\n                    // This only might mean that findFirst/findLast are buggy and inconsistent.\n                    throw new Error(\"Something went wrong.\");\n                }\n            }\n\n            this._tabster.focusedElement.focus(toFocus);\n        } else {\n            // Current Modalizer doesn't seem to have focusable elements.\n            // Blurring the currently focused element which is outside of the current Modalizer.\n            outsideElement.blur();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    getPromise,\n    HTMLElementWithDummyContainer,\n    isElementVerticallyVisibleInContainer,\n    matchesSelector,\n    scrollIntoView,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nconst _inputSelector = [\"input\", \"textarea\", \"*[contenteditable]\"].join(\", \");\n\nclass MoverDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _getMemorized: () => WeakHTMLElement | undefined;\n\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        getMemorized: () => WeakHTMLElement | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Mover);\n\n        this._tabster = tabster;\n        this._getMemorized = getMemorized;\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const container = this._element.get();\n        const input = dummyInput.input;\n\n        if (container && !dummyInput.shouldMoveOut && input) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            let toFocus: HTMLElement | null | undefined;\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    undefined,\n                    input,\n                    !dummyInput.isFirst\n                )?.element;\n            }\n\n            const memorized = this._getMemorized()?.get();\n            if (memorized) {\n                toFocus = memorized;\n            }\n\n            if (toFocus) {\n                nativeFocus(toFocus);\n            }\n        }\n    };\n}\n\n// TypeScript enums produce depressing JavaScript code, so, we're just using\n// a few old style constants here.\nconst _moverUpdateAdd = 1;\nconst _moverUpdateAttr = 2;\nconst _moverUpdateRemove = 3;\n\ninterface MoverUpdateQueueItem {\n    element: HTMLElement;\n    type:\n        | typeof _moverUpdateAdd\n        | typeof _moverUpdateAttr\n        | typeof _moverUpdateRemove;\n}\n\nexport class Mover\n    extends TabsterPart<Types.MoverProps>\n    implements Types.Mover\n{\n    private _unobserve: (() => void) | undefined;\n    private _intersectionObserver: IntersectionObserver | undefined;\n    private _setCurrentTimer: number | undefined;\n    private _current: WeakHTMLElement | undefined;\n    private _prevCurrent: WeakHTMLElement | undefined;\n    private _visible: Record<string, Types.Visibility> = {};\n    private _fullyVisible: string | undefined;\n    private _win: Types.GetWindow;\n    private _onDispose: (mover: Mover) => void;\n    private _allElements: WeakMap<HTMLElement, Mover> | undefined;\n    private _updateQueue: MoverUpdateQueueItem[] | undefined;\n    private _updateTimer: number | undefined;\n\n    dummyManager: MoverDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (mover: Mover) => void,\n        props: Types.MoverProps\n    ) {\n        super(tabster, element, props);\n\n        this._win = tabster.getWindow;\n\n        if (this._props.trackState || this._props.visibilityAware) {\n            this._intersectionObserver = new IntersectionObserver(\n                this._onIntersection,\n                { threshold: [0, 0.25, 0.5, 0.75, 1] }\n            );\n            this._observeState();\n        }\n\n        this._onDispose = onDispose;\n        const getMemorized = () =>\n            props.memorizeCurrent ? this._current : undefined;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new MoverDummyManager(\n                this._element,\n                tabster,\n                getMemorized\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        if (this._intersectionObserver) {\n            this._intersectionObserver.disconnect();\n            delete this._intersectionObserver;\n        }\n\n        delete this._current;\n        delete this._fullyVisible;\n        delete this._allElements;\n        delete this._updateQueue;\n\n        if (this._unobserve) {\n            this._unobserve();\n            delete this._unobserve;\n        }\n\n        const win = this._win();\n\n        if (this._setCurrentTimer) {\n            win.clearTimeout(this._setCurrentTimer);\n            delete this._setCurrentTimer;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this.dummyManager?.dispose();\n    }\n\n    setCurrent(element: HTMLElement | undefined): void {\n        if (element) {\n            this._current = new WeakHTMLElement(this._win, element);\n        } else {\n            this._current = undefined;\n        }\n\n        if (\n            (this._props.trackState || this._props.visibilityAware) &&\n            !this._setCurrentTimer\n        ) {\n            this._setCurrentTimer = this._win().setTimeout(() => {\n                delete this._setCurrentTimer;\n\n                const changed: (WeakHTMLElement | undefined)[] = [];\n\n                if (this._current !== this._prevCurrent) {\n                    changed.push(this._current);\n                    changed.push(this._prevCurrent);\n                    this._prevCurrent = this._current;\n                }\n\n                for (const weak of changed) {\n                    const el = weak?.get();\n\n                    if (el && this._allElements?.get(el) === this) {\n                        const props = this._props;\n\n                        if (\n                            el &&\n                            (props.visibilityAware !== undefined ||\n                                props.trackState)\n                        ) {\n                            const state = this.getState(el);\n\n                            if (state) {\n                                triggerEvent(el, Types.MoverEventName, state);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    getCurrent(): HTMLElement | null {\n        return this._current?.get() || null;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        isBackward?: boolean\n    ): Types.NextTabbable | null {\n        const container = this.getElement();\n        const currentIsDummy =\n            container &&\n            (\n                currentElement as HTMLElementWithDummyContainer\n            )?.__tabsterDummyContainer?.get() === container;\n\n        if (!container) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        const focusable = tabster.focusable;\n        let next: HTMLElement | null | undefined = null;\n        let uncontrolled: HTMLElement | undefined;\n        const onUncontrolled = (el: HTMLElement) => {\n            uncontrolled = el;\n        };\n\n        if (this._props.tabbable || currentIsDummy) {\n            next = isBackward\n                ? focusable.findPrev({\n                      currentElement,\n                      container,\n                      onUncontrolled,\n                  })\n                : focusable.findNext({\n                      currentElement,\n                      container,\n                      onUncontrolled,\n                  });\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            lastMoverOrGroupper: next || uncontrolled ? undefined : this,\n        };\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        if (!FocusedElementState.isTabbing) {\n            return state.currentCtx?.isExcludedFromMover\n                ? NodeFilter.FILTER_REJECT\n                : undefined;\n        }\n\n        const { memorizeCurrent, visibilityAware } = this._props;\n        const moverElement = this.getElement();\n\n        if (\n            moverElement &&\n            (memorizeCurrent || visibilityAware) &&\n            (!moverElement.contains(state.from) ||\n                (\n                    state.from as HTMLElementWithDummyContainer\n                ).__tabsterDummyContainer?.get() === moverElement)\n        ) {\n            if (memorizeCurrent) {\n                const current = this._current?.get();\n\n                if (current && state.acceptCondition(current)) {\n                    state.found = true;\n                    state.foundElement = current;\n                    state.lastToIgnore = moverElement;\n                    return NodeFilter.FILTER_ACCEPT;\n                }\n            }\n\n            if (visibilityAware) {\n                const found = this._tabster.focusable.findElement({\n                    container: moverElement,\n                    ignoreUncontrolled: true,\n                    isBackward: state.isBackward,\n                    acceptCondition: (el) => {\n                        const id = getElementUId(this._win, el);\n                        const visibility = this._visible[id];\n\n                        return (\n                            moverElement !== el &&\n                            !!this._allElements?.get(el) &&\n                            state.acceptCondition(el) &&\n                            (visibility === Types.Visibilities.Visible ||\n                                (visibility ===\n                                    Types.Visibilities.PartiallyVisible &&\n                                    (visibilityAware ===\n                                        Types.Visibilities.PartiallyVisible ||\n                                        !this._fullyVisible)))\n                        );\n                    },\n                });\n\n                if (found) {\n                    state.found = true;\n                    state.foundElement = found;\n                    state.lastToIgnore = moverElement;\n                    return NodeFilter.FILTER_ACCEPT;\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    private _onIntersection = (entries: IntersectionObserverEntry[]): void => {\n        for (const entry of entries) {\n            const el = entry.target as HTMLElement;\n            const id = getElementUId(this._win, el);\n\n            let newVisibility: Types.Visibility | undefined;\n            let fullyVisible = this._fullyVisible;\n\n            if (entry.intersectionRatio >= 0.25) {\n                newVisibility =\n                    entry.intersectionRatio >= 0.75\n                        ? Types.Visibilities.Visible\n                        : Types.Visibilities.PartiallyVisible;\n\n                if (newVisibility === Types.Visibilities.Visible) {\n                    fullyVisible = id;\n                }\n            }\n\n            if (this._visible[id] !== newVisibility) {\n                if (newVisibility === undefined) {\n                    delete this._visible[id];\n\n                    if (fullyVisible === id) {\n                        delete this._fullyVisible;\n                    }\n                } else {\n                    this._visible[id] = newVisibility;\n                    this._fullyVisible = fullyVisible;\n                }\n\n                const state = this.getState(el);\n\n                if (state) {\n                    triggerEvent(el, Types.MoverEventName, state);\n                }\n            }\n        }\n    };\n\n    private _observeState(): void {\n        const element = this.getElement();\n\n        if (\n            this._unobserve ||\n            !element ||\n            typeof MutationObserver === \"undefined\"\n        ) {\n            return;\n        }\n\n        const win = this._win();\n        const allElements = (this._allElements = new WeakMap());\n        const tabsterFocusable = this._tabster.focusable;\n        let updateQueue: MoverUpdateQueueItem[] = (this._updateQueue = []);\n\n        const observer = new MutationObserver((mutations: MutationRecord[]) => {\n            for (const mutation of mutations) {\n                const target = mutation.target;\n                const removed = mutation.removedNodes;\n                const added = mutation.addedNodes;\n\n                if (mutation.type === \"attributes\") {\n                    if (mutation.attributeName === \"tabindex\") {\n                        updateQueue.push({\n                            element: target as HTMLElement,\n                            type: _moverUpdateAttr,\n                        });\n                    }\n                } else {\n                    for (let i = 0; i < removed.length; i++) {\n                        updateQueue.push({\n                            element: removed[i] as HTMLElement as HTMLElement,\n                            type: _moverUpdateRemove,\n                        });\n                    }\n\n                    for (let i = 0; i < added.length; i++) {\n                        updateQueue.push({\n                            element: added[i] as HTMLElement,\n                            type: _moverUpdateAdd,\n                        });\n                    }\n                }\n            }\n\n            requestUpdate();\n        });\n\n        const setElement = (element: HTMLElement, remove?: boolean): void => {\n            const current = allElements.get(element);\n\n            if (current && remove) {\n                this._intersectionObserver?.unobserve(element);\n                allElements.delete(element);\n            }\n\n            if (!current && !remove) {\n                allElements.set(element, this);\n                this._intersectionObserver?.observe(element);\n            }\n        };\n\n        const updateElement = (element: HTMLElement): void => {\n            const isFocusable = tabsterFocusable.isFocusable(element);\n            const current = allElements.get(element);\n\n            if (current) {\n                if (!isFocusable) {\n                    setElement(element, true);\n                }\n            } else {\n                if (isFocusable) {\n                    setElement(element);\n                }\n            }\n        };\n\n        const addNewElements = (element: HTMLElement): void => {\n            const { mover } = getMoverGroupper(element);\n\n            if (mover && mover !== this) {\n                if (\n                    mover.getElement() === element &&\n                    tabsterFocusable.isFocusable(element)\n                ) {\n                    setElement(element);\n                } else {\n                    return;\n                }\n            }\n\n            const walker = createElementTreeWalker(\n                win.document,\n                element,\n                (node: Node): number => {\n                    const { mover, groupper } = getMoverGroupper(\n                        node as HTMLElement\n                    );\n\n                    if (mover && mover !== this) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    const groupperFirstFocusable = groupper?.getFirst(true);\n\n                    if (\n                        groupper &&\n                        groupper.getElement() !== node &&\n                        groupperFirstFocusable &&\n                        groupperFirstFocusable !== node\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    if (tabsterFocusable.isFocusable(node as HTMLElement)) {\n                        setElement(node as HTMLElement);\n                    }\n\n                    return NodeFilter.FILTER_SKIP;\n                }\n            );\n\n            if (walker) {\n                walker.currentNode = element;\n\n                while (walker.nextNode()) {\n                    /* Iterating for the sake of calling processNode() callback. */\n                }\n            }\n        };\n\n        const removeWalk = (element: HTMLElement): void => {\n            const current = allElements.get(element);\n\n            if (current) {\n                setElement(element, true);\n            }\n\n            for (\n                let el = element.firstElementChild;\n                el;\n                el = el.nextElementSibling\n            ) {\n                removeWalk(el as HTMLElement);\n            }\n        };\n\n        const requestUpdate = () => {\n            if (!this._updateTimer && updateQueue.length) {\n                this._updateTimer = win.setTimeout(() => {\n                    delete this._updateTimer;\n\n                    for (const { element, type } of updateQueue) {\n                        switch (type) {\n                            case _moverUpdateAttr:\n                                updateElement(element);\n                                break;\n                            case _moverUpdateAdd:\n                                addNewElements(element);\n                                break;\n                            case _moverUpdateRemove:\n                                removeWalk(element);\n                                break;\n                        }\n                    }\n\n                    updateQueue = this._updateQueue = [];\n                }, 0);\n            }\n        };\n\n        const getMoverGroupper = (\n            element: HTMLElement\n        ): { mover?: Mover; groupper?: Types.Groupper } => {\n            const ret: {\n                mover?: Mover;\n                groupper?: Types.Groupper;\n            } = {};\n\n            for (\n                let el: HTMLElement | null = element;\n                el;\n                el = el.parentElement\n            ) {\n                const toe = getTabsterOnElement(this._tabster, el);\n\n                if (toe) {\n                    if (toe.groupper && !ret.groupper) {\n                        ret.groupper = toe.groupper;\n                    }\n\n                    if (toe.mover) {\n                        ret.mover = toe.mover as Mover;\n                        break;\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        updateQueue.push({ element, type: _moverUpdateAdd });\n        requestUpdate();\n\n        observer.observe(element, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\"tabindex\"],\n        });\n\n        this._unobserve = () => {\n            observer.disconnect();\n        };\n    }\n\n    getState(element: HTMLElement): Types.MoverElementState | undefined {\n        const id = getElementUId(this._win, element);\n\n        if (id in this._visible) {\n            const visibility =\n                this._visible[id] || Types.Visibilities.Invisible;\n            const isCurrent = this._current\n                ? this._current.get() === element\n                : undefined;\n\n            return {\n                isCurrent,\n                visibility,\n            };\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateMoverProps(props: Types.MoverProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Calculates distance between two rectangles.\n *\n * @param ax1 first rectangle left\n * @param ay1 first rectangle top\n * @param ax2 first rectangle right\n * @param ay2 first rectangle bottom\n * @param bx1 second rectangle left\n * @param by1 second rectangle top\n * @param bx2 second rectangle right\n * @param by2 second rectangle bottom\n * @returns number, shortest distance between the rectangles.\n */\nfunction getDistance(\n    ax1: number,\n    ay1: number,\n    ax2: number,\n    ay2: number,\n    bx1: number,\n    by1: number,\n    bx2: number,\n    by2: number\n): number {\n    const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;\n    const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;\n\n    return xDistance === 0\n        ? yDistance\n        : yDistance === 0\n        ? xDistance\n        : Math.sqrt(xDistance * xDistance + yDistance * yDistance);\n}\n\nexport class MoverAPI implements Types.MoverAPI {\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _movers: Record<string, Mover>;\n    private _ignoredInputTimer: number | undefined;\n    private _ignoredInputResolve: ((value: boolean) => void) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._initTimer = getWindow().setTimeout(this._init, 0);\n        this._movers = {};\n\n        tabster.focusedElement.subscribe(this._onFocus);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        const win = this._win();\n\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            delete this._initTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        if (this._ignoredInputTimer) {\n            win.clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        Object.keys(this._movers).forEach((moverId) => {\n            if (this._movers[moverId]) {\n                this._movers[moverId].dispose();\n                delete this._movers[moverId];\n            }\n        });\n    }\n\n    createMover(element: HTMLElement, props: Types.MoverProps): Types.Mover {\n        if (__DEV__) {\n            validateMoverProps(props);\n        }\n\n        const newMover = new Mover(\n            this._tabster,\n            element,\n            this._onMoverDispose,\n            props\n        );\n        this._movers[newMover.id] = newMover;\n        return newMover;\n    }\n\n    private _onMoverDispose = (mover: Mover) => {\n        delete this._movers[mover.id];\n    };\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        for (\n            let el: HTMLElement | null | undefined = e;\n            el;\n            el = el.parentElement\n        ) {\n            const mover = getTabsterOnElement(this._tabster, el)?.mover;\n\n            if (mover) {\n                mover.setCurrent(e);\n                break;\n            }\n        }\n    };\n\n    private _onKeyDown = async (e: KeyboardEvent): Promise<void> => {\n        if (this._ignoredInputTimer) {\n            this._win().clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        let keyCode = e.keyCode;\n\n        switch (keyCode) {\n            case Keys.Down:\n            case Keys.Right:\n            case Keys.Up:\n            case Keys.Left:\n            case Keys.PageDown:\n            case Keys.PageUp:\n            case Keys.Home:\n            case Keys.End:\n                break;\n            default:\n                return;\n        }\n\n        const tabster = this._tabster;\n        const focused = tabster.focusedElement.getFocusedElement();\n\n        if (!focused || (await this._isIgnoredInput(focused, keyCode))) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(tabster, focused, {\n            checkRtl: true,\n        });\n\n        if (!ctx || !ctx.mover || ctx.isExcludedFromMover) {\n            return;\n        }\n\n        if (ctx.isGroupperFirst) {\n            if (ctx.groupper && ctx.groupper.isActive(true)) {\n                return;\n            }\n        }\n\n        const mover = ctx.mover;\n        const container = mover.getElement();\n\n        if (!container) {\n            return;\n        }\n\n        const focusable = tabster.focusable;\n        const moverProps = mover.getProps();\n        const direction = moverProps.direction || Types.MoverDirections.Both;\n        const isBoth = direction === Types.MoverDirections.Both;\n        const isVertical =\n            isBoth || direction === Types.MoverDirections.Vertical;\n        const isHorizontal =\n            isBoth || direction === Types.MoverDirections.Horizontal;\n        const isGrid = direction === Types.MoverDirections.Grid;\n        const isCyclic = moverProps.cyclic;\n\n        let next: HTMLElement | null | undefined;\n\n        let focusedElementRect: DOMRect;\n        let focusedElementX1 = 0;\n        let focusedElementX2 = 0;\n\n        if (isGrid) {\n            focusedElementRect = focused.getBoundingClientRect();\n            focusedElementX1 = Math.ceil(focusedElementRect.left);\n            focusedElementX2 = Math.floor(focusedElementRect.right);\n        }\n\n        if (\n            moverProps.disableHomeEndKeys &&\n            (keyCode === Keys.Home || keyCode === Keys.End)\n        ) {\n            return;\n        }\n\n        if (ctx.isRtl) {\n            if (keyCode === Keys.Right) {\n                keyCode = Keys.Left;\n            } else if (keyCode === Keys.Left) {\n                keyCode = Keys.Right;\n            }\n        }\n\n        if (\n            (keyCode === Keys.Down && isVertical) ||\n            (keyCode === Keys.Right && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findNext({ currentElement: focused, container });\n\n            if (next && isGrid) {\n                const nextElementX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n\n                if (focusedElementX2 > nextElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findFirst({ container });\n            }\n        } else if (\n            (keyCode === Keys.Up && isVertical) ||\n            (keyCode === Keys.Left && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findPrev({ currentElement: focused, container });\n\n            if (next && isGrid) {\n                const nextElementX2 = Math.floor(\n                    next.getBoundingClientRect().right\n                );\n\n                if (nextElementX2 > focusedElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findLast({ container });\n            }\n        } else if (keyCode === Keys.Home) {\n            next = focusable.findFirst({ container });\n        } else if (keyCode === Keys.End) {\n            next = focusable.findLast({ container });\n        } else if (keyCode === Keys.PageUp) {\n            let prevElement = focusable.findPrev({\n                currentElement: focused,\n                container,\n            });\n            let pageUpElement: HTMLElement | null = null;\n\n            while (prevElement) {\n                pageUpElement = prevElement;\n\n                prevElement = isElementVerticallyVisibleInContainer(\n                    this._win,\n                    prevElement\n                )\n                    ? focusable.findPrev({\n                          currentElement: prevElement,\n                          container,\n                      })\n                    : null;\n            }\n\n            next = pageUpElement;\n\n            if (next) {\n                scrollIntoView(this._win, next, false);\n            }\n        } else if (keyCode === Keys.PageDown) {\n            let nextElement = focusable.findNext({\n                currentElement: focused,\n                container,\n            });\n            let pageDownElement: HTMLElement | null = null;\n\n            while (nextElement) {\n                pageDownElement = nextElement;\n\n                nextElement = isElementVerticallyVisibleInContainer(\n                    this._win,\n                    nextElement\n                )\n                    ? focusable.findNext({\n                          currentElement: nextElement,\n                          container,\n                      })\n                    : null;\n            }\n\n            next = pageDownElement;\n\n            if (next) {\n                scrollIntoView(this._win, next, true);\n            }\n        } else if (isGrid) {\n            const isBackward = keyCode === Keys.Up;\n            const ax1 = focusedElementX1;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay1 = Math.ceil(focusedElementRect!.top);\n            const ax2 = focusedElementX2;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay2 = Math.floor(focusedElementRect!.bottom);\n            let targetElement: HTMLElement | undefined;\n            let lastDistance: number | undefined;\n            let lastIntersection = 0;\n\n            focusable.findAll({\n                container,\n                currentElement: focused,\n                isBackward,\n                onElement: (el) => {\n                    // Find element which has maximal intersection with the focused element horizontally,\n                    // or the closest one.\n                    const rect = el.getBoundingClientRect();\n\n                    const bx1 = Math.ceil(rect.left);\n                    const by1 = Math.ceil(rect.top);\n                    const bx2 = Math.floor(rect.right);\n                    const by2 = Math.floor(rect.bottom);\n\n                    if (\n                        (isBackward && ay1 < by2) ||\n                        (!isBackward && ay2 > by1)\n                    ) {\n                        // Only consider elements which are below/above curretly focused.\n                        return true;\n                    }\n\n                    const xIntersectionWidth =\n                        Math.ceil(Math.min(ax2, bx2)) -\n                        Math.floor(Math.max(ax1, bx1));\n                    const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));\n\n                    if (\n                        xIntersectionWidth > 0 &&\n                        minWidth >= xIntersectionWidth\n                    ) {\n                        // Element intersects with the focused element on X axis.\n                        const intersection = xIntersectionWidth / minWidth;\n\n                        if (intersection > lastIntersection) {\n                            targetElement = el;\n                            lastIntersection = intersection;\n                        }\n                    } else if (lastIntersection === 0) {\n                        // If we didn't have intersection, try just the closest one.\n                        const distance = getDistance(\n                            ax1,\n                            ay1,\n                            ax2,\n                            ay2,\n                            bx1,\n                            by1,\n                            bx2,\n                            by2\n                        );\n\n                        if (\n                            lastDistance === undefined ||\n                            distance < lastDistance\n                        ) {\n                            lastDistance = distance;\n                            targetElement = el;\n                        }\n                    } else if (lastIntersection > 0) {\n                        // Element doesn't intersect, but we had intersection already, stop search.\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            next = targetElement;\n        }\n\n        if (next) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            nativeFocus(next);\n        }\n    };\n\n    private async _isIgnoredInput(\n        element: HTMLElement,\n        keyCode: number\n    ): Promise<boolean> {\n        if (element.getAttribute(\"aria-expanded\") === \"true\") {\n            return true;\n        }\n\n        if (matchesSelector(element, _inputSelector)) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n            let textLength = 0;\n            let asyncRet: Promise<boolean> | undefined;\n\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\n                const type = (element as HTMLInputElement).type;\n                const value = (element as HTMLInputElement).value;\n\n                textLength = (value || \"\").length;\n\n                if (type === \"email\" || type === \"number\") {\n                    // For these types Chromium doesn't provide selectionStart and selectionEnd.\n                    // Hence the ugly workaround to find if the caret position is changed with\n                    // the keypress.\n                    // TODO: Have a look at range, week, time, time, date, datetime-local.\n                    if (textLength) {\n                        const selection =\n                            element.ownerDocument.defaultView?.getSelection();\n\n                        if (selection) {\n                            const initialLength = selection.toString().length;\n                            const isBackward =\n                                keyCode === Keys.Left || keyCode === Keys.Up;\n\n                            selection.modify(\n                                \"extend\",\n                                isBackward ? \"backward\" : \"forward\",\n                                \"character\"\n                            );\n\n                            if (initialLength !== selection.toString().length) {\n                                // The caret is moved, so, we're not on the edge of the value.\n                                // Restore original selection.\n                                selection.modify(\n                                    \"extend\",\n                                    isBackward ? \"forward\" : \"backward\",\n                                    \"character\"\n                                );\n\n                                return true;\n                            } else {\n                                textLength = 0;\n                            }\n                        }\n                    }\n                } else {\n                    const selStart = (element as HTMLInputElement)\n                        .selectionStart;\n\n                    if (selStart === null) {\n                        // Do not ignore not text editable inputs like checkboxes and radios (but ignore hidden).\n                        return type === \"hidden\";\n                    }\n\n                    selectionStart = selStart || 0;\n                    selectionEnd =\n                        (element as HTMLInputElement).selectionEnd || 0;\n                }\n            } else if (element.contentEditable === \"true\") {\n                asyncRet = new (getPromise(this._win))((resolve) => {\n                    this._ignoredInputResolve = (value: boolean) => {\n                        delete this._ignoredInputResolve;\n                        resolve(value);\n                    };\n\n                    const win = this._win();\n\n                    if (this._ignoredInputTimer) {\n                        win.clearTimeout(this._ignoredInputTimer);\n                    }\n\n                    const {\n                        anchorNode: prevAnchorNode,\n                        focusNode: prevFocusNode,\n                        anchorOffset: prevAnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    } = win.getSelection() || {};\n\n                    // Get selection gives incorrect value if we call it syncronously onKeyDown.\n                    this._ignoredInputTimer = win.setTimeout(() => {\n                        delete this._ignoredInputTimer;\n\n                        const {\n                            anchorNode,\n                            focusNode,\n                            anchorOffset,\n                            focusOffset,\n                        } = win.getSelection() || {};\n\n                        if (\n                            anchorNode !== prevAnchorNode ||\n                            focusNode !== prevFocusNode ||\n                            anchorOffset !== prevAnchorOffset ||\n                            focusOffset !== prevFocusOffset\n                        ) {\n                            this._ignoredInputResolve?.(false);\n                            return;\n                        }\n\n                        selectionStart = anchorOffset || 0;\n                        selectionEnd = focusOffset || 0;\n                        textLength = element.textContent?.length || 0;\n\n                        if (anchorNode && focusNode) {\n                            if (\n                                element.contains(anchorNode) &&\n                                element.contains(focusNode)\n                            ) {\n                                if (anchorNode !== element) {\n                                    let anchorFound = false;\n\n                                    const addOffsets = (\n                                        node: ChildNode\n                                    ): boolean => {\n                                        if (node === anchorNode) {\n                                            anchorFound = true;\n                                        } else if (node === focusNode) {\n                                            return true;\n                                        }\n\n                                        const nodeText = node.textContent;\n\n                                        if (nodeText && !node.firstChild) {\n                                            const len = nodeText.length;\n\n                                            if (anchorFound) {\n                                                if (focusNode !== anchorNode) {\n                                                    selectionEnd += len;\n                                                }\n                                            } else {\n                                                selectionStart += len;\n                                                selectionEnd += len;\n                                            }\n                                        }\n\n                                        let stop = false;\n\n                                        for (\n                                            let e = node.firstChild;\n                                            e && !stop;\n                                            e = e.nextSibling\n                                        ) {\n                                            stop = addOffsets(e);\n                                        }\n\n                                        return stop;\n                                    };\n\n                                    addOffsets(element);\n                                }\n                            }\n                        }\n\n                        this._ignoredInputResolve?.(true);\n                    }, 0);\n                });\n            }\n\n            if (asyncRet && !(await asyncRet)) {\n                return true;\n            }\n\n            if (selectionStart !== selectionEnd) {\n                return true;\n            }\n\n            if (\n                selectionStart > 0 &&\n                (keyCode === Keys.Left ||\n                    keyCode === Keys.Up ||\n                    keyCode === Keys.Home)\n            ) {\n                return true;\n            }\n\n            if (\n                selectionStart < textLength &&\n                (keyCode === Keys.Right ||\n                    keyCode === Keys.Down ||\n                    keyCode === Keys.End)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getInstanceContext,\n    HTMLElementWithUID,\n    InstanceContext,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nexport function observeMutations(\n    doc: HTMLDocument,\n    tabster: Types.TabsterCore,\n    updateTabsterByAttribute: (\n        tabster: Types.TabsterCore,\n        element: HTMLElementWithUID,\n        dispose?: boolean\n    ) => void,\n    syncState: boolean\n): () => void {\n    if (typeof MutationObserver === \"undefined\") {\n        return () => {\n            /* Noop */\n        };\n    }\n\n    const getWindow = tabster.getWindow;\n\n    let elementByUId: InstanceContext[\"elementByUId\"] | undefined;\n\n    const onMutation = (mutations: MutationRecord[]) => {\n        for (const mutation of mutations) {\n            const target = mutation.target;\n            const removed = mutation.removedNodes;\n            const added = mutation.addedNodes;\n\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === Types.TabsterAttributeName) {\n                    updateTabsterByAttribute(tabster, target as HTMLElement);\n                }\n            } else {\n                for (let i = 0; i < removed.length; i++) {\n                    updateTabsterElements(removed[i], true);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    updateTabsterElements(added[i]);\n                }\n            }\n        }\n    };\n\n    function updateTabsterElements(node: Node, removed?: boolean): void {\n        if (!elementByUId) {\n            elementByUId = getInstanceContext(getWindow).elementByUId;\n        }\n\n        processNode(node as HTMLElement, removed);\n\n        const walker = createElementTreeWalker(\n            doc,\n            node,\n            (element: Node): number => {\n                return processNode(element as HTMLElement, removed);\n            }\n        );\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n\n    function processNode(element: HTMLElement, removed?: boolean): number {\n        if (!element.getAttribute) {\n            // It might actually be a text node.\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        const uid = (element as HTMLElementWithUID).__tabsterElementUID;\n\n        if (uid && elementByUId) {\n            if (removed) {\n                delete elementByUId[uid];\n            } else {\n                elementByUId[uid] ??= new WeakHTMLElement(getWindow, element);\n            }\n        }\n\n        if (\n            getTabsterOnElement(tabster, element) ||\n            element.hasAttribute(Types.TabsterAttributeName)\n        ) {\n            updateTabsterByAttribute(tabster, element, removed);\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    }\n\n    const observer = new MutationObserver(onMutation);\n\n    if (syncState) {\n        updateTabsterElements(getWindow().document.body);\n    }\n\n    observer.observe(doc, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        attributeFilter: [Types.TabsterAttributeName],\n    });\n\n    return () => {\n        observer.disconnect();\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"../Instance\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nconst _conditionCheckTimeout = 100;\n\ninterface ObservedElementInfo {\n    element: WeakHTMLElement;\n    prevNames?: string[];\n}\n\ninterface ObservedWaiting {\n    timer?: number;\n    conditionTimer?: number;\n    request?: Types.ObservedElementAsyncRequest<HTMLElement | null>;\n    resolve?: (value: HTMLElement | null) => void;\n    reject?: () => void;\n}\n\nexport class ObservedElementAPI\n    extends Subscribable<HTMLElement, Types.ObservedElementDetails>\n    implements Types.ObservedElementAPI\n{\n    private _win: Types.GetWindow;\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _waiting: Record<string, ObservedWaiting> = {};\n    private _lastRequestFocusId = 0;\n    private _observedById: { [uid: string]: ObservedElementInfo } = {};\n    private _observedByName: {\n        [name: string]: { [uid: string]: ObservedElementInfo };\n    } = {};\n    private _currentRequest:\n        | Types.ObservedElementAsyncRequest<HTMLElement | null>\n        | undefined;\n    private _currentRequestTimestamp = 0;\n\n    constructor(tabster: Types.TabsterCore) {\n        super();\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._initTimer = this._win().setTimeout(this._init, 0);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        for (const key of Object.keys(this._waiting)) {\n            this._rejectWaiting(key);\n        }\n\n        this._observedById = {};\n        this._observedByName = {};\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (e) {\n            const current = this._currentRequest;\n\n            if (current) {\n                const delta = Date.now() - this._currentRequestTimestamp;\n                const settleTime = 300;\n\n                if (delta >= settleTime) {\n                    // Giving some time for the focus to settle before\n                    // automatically cancelling the current request on focus change.\n                    delete this._currentRequest;\n                    current.cancel();\n                }\n            }\n        }\n    };\n\n    private _rejectWaiting(key: string, shouldResolve?: boolean): void {\n        const w = this._waiting[key];\n\n        if (w) {\n            const win = this._win();\n\n            if (w.timer) {\n                win.clearTimeout(w.timer);\n            }\n\n            if (w.conditionTimer) {\n                win.clearTimeout(w.conditionTimer);\n            }\n\n            if (!shouldResolve && w.reject) {\n                w.reject();\n            } else if (shouldResolve && w.resolve) {\n                w.resolve(null);\n            }\n\n            delete this._waiting[key];\n        }\n    }\n\n    private _isObservedNamesUpdated(cur: string[], prev?: string[]) {\n        if (!prev || cur.length !== prev.length) {\n            return true;\n        }\n        for (let i = 0; i < cur.length; ++i) {\n            if (cur[i] !== prev[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns existing element by observed name\n     *\n     * @param observedName An observed name\n     * @param accessibility Optionally, return only if the element is accessible or focusable\n     * @returns HTMLElement | null\n     */\n    getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): HTMLElement | null {\n        const o = this._observedByName[observedName];\n\n        if (o) {\n            for (const uid of Object.keys(o)) {\n                let el = o[uid].element.get() || null;\n                if (el) {\n                    if (\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Accessible &&\n                            !this._tabster.focusable.isAccessible(el)) ||\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Focusable &&\n                            !this._tabster.focusable.isFocusable(el, true))\n                    ) {\n                        el = null;\n                    }\n                } else {\n                    delete o[uid];\n                    delete this._observedById[uid];\n                }\n\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Waits for the element to appear in the DOM and returns it.\n     *\n     * @param observedName An observed name\n     * @param timeout Wait no longer than this timeout\n     * @param accessibility Optionally, wait for the element to also become accessible or focusable before returning it\n     * @returns Promise<HTMLElement | null>\n     */\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Types.ObservedElementAsyncRequest<HTMLElement | null> {\n        const el = this.getElement(observedName, accessibility);\n\n        if (el) {\n            return {\n                result: getPromise(this._win).resolve(el),\n                cancel: () => {\n                    /**/\n                },\n            };\n        }\n\n        let prefix: string;\n\n        if (accessibility === Types.ObservedElementAccesibilities.Accessible) {\n            prefix = \"a\";\n        } else if (\n            accessibility === Types.ObservedElementAccesibilities.Focusable\n        ) {\n            prefix = \"f\";\n        } else {\n            prefix = \"_\";\n        }\n\n        const key = prefix + observedName;\n        let w = this._waiting[key];\n\n        if (w && w.request) {\n            return w.request;\n        }\n\n        w = this._waiting[key] = {\n            timer: this._win().setTimeout(() => {\n                if (w.conditionTimer) {\n                    this._win().clearTimeout(w.conditionTimer);\n                }\n\n                delete this._waiting[key];\n\n                if (w.resolve) {\n                    w.resolve(null);\n                }\n            }, timeout),\n        };\n\n        const promise = new (getPromise(this._win))<HTMLElement | null>(\n            (resolve, reject) => {\n                w.resolve = resolve;\n                w.reject = reject;\n            }\n        );\n\n        w.request = {\n            result: promise,\n            cancel: () => {\n                this._rejectWaiting(key, true);\n            },\n        };\n\n        if (accessibility && this.getElement(observedName)) {\n            // If the observed element is alread in DOM, but not accessible yet,\n            // we need to run the wait logic.\n            this._waitConditional(observedName);\n        }\n\n        return w.request;\n    }\n\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): Types.ObservedElementAsyncRequest<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        const currentRequestFocus = this._currentRequest;\n\n        if (currentRequestFocus) {\n            currentRequestFocus.cancel();\n        }\n\n        const request = this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        );\n\n        this._currentRequest = request;\n        this._currentRequestTimestamp = Date.now();\n\n        request.result.finally(() => {\n            if (this._currentRequest === request) {\n                delete this._currentRequest;\n            }\n        });\n\n        return {\n            result: request.result.then((element) =>\n                this._lastRequestFocusId === requestId && element\n                    ? this._tabster.focusedElement.focus(element, true)\n                    : false\n            ),\n            cancel: () => {\n                request.cancel();\n            },\n        };\n    }\n\n    onObservedElementUpdate = (element: HTMLElement): void => {\n        const observed = getTabsterOnElement(this._tabster, element)?.observed;\n        const uid = getElementUId(this._win, element);\n        let info: ObservedElementInfo | undefined = this._observedById[uid];\n\n        if (observed && documentContains(element.ownerDocument, element)) {\n            if (!info) {\n                info = this._observedById[uid] = {\n                    element: new WeakHTMLElement(this._win, element),\n                };\n            }\n\n            observed.names.sort();\n            const observedNames = observed.names;\n            const prevNames = info.prevNames; // prevNames are already sorted\n\n            if (this._isObservedNamesUpdated(observedNames, prevNames)) {\n                if (prevNames) {\n                    prevNames.forEach((prevName) => {\n                        const obn = this._observedByName[prevName];\n\n                        if (obn && obn[uid]) {\n                            if (Object.keys(obn).length > 1) {\n                                delete obn[uid];\n                            } else {\n                                delete this._observedByName[prevName];\n                            }\n                        }\n                    });\n                }\n\n                info.prevNames = observedNames;\n            }\n\n            observedNames.forEach((observedName) => {\n                let obn = this._observedByName[observedName];\n\n                if (!obn) {\n                    obn = this._observedByName[observedName] = {};\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                obn[uid] = info!;\n\n                this._waitConditional(observedName);\n            });\n        } else if (info) {\n            const prevNames = info.prevNames;\n\n            if (prevNames) {\n                prevNames.forEach((prevName) => {\n                    const obn = this._observedByName[prevName];\n\n                    if (obn && obn[uid]) {\n                        if (Object.keys(obn).length > 1) {\n                            delete obn[uid];\n                        } else {\n                            delete this._observedByName[prevName];\n                        }\n                    }\n                });\n            }\n\n            delete this._observedById[uid];\n        }\n    };\n\n    private _waitConditional(observedName: string): void {\n        const waitingElementKey = \"_\" + observedName;\n        const waitingAccessibleElementKey = \"a\" + observedName;\n        const waitingFocusableElementKey = \"f\" + observedName;\n        const waitingElement = this._waiting[waitingElementKey];\n        const waitingAccessibleElement =\n            this._waiting[waitingAccessibleElementKey];\n        const waitingFocusableElement =\n            this._waiting[waitingFocusableElementKey];\n        const win = this._win();\n\n        const resolve = (\n            element: HTMLElement,\n            key: string,\n            waiting: ObservedWaiting,\n            accessibility: Types.ObservedElementAccesibility\n        ) => {\n            const observed = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.observed;\n\n            if (!observed || !observed.names.includes(observedName)) {\n                return;\n            }\n\n            if (waiting.timer) {\n                win.clearTimeout(waiting.timer);\n            }\n\n            delete this._waiting[key];\n\n            if (waiting.resolve) {\n                waiting.resolve(element);\n            }\n\n            this.trigger(element, {\n                names: [observedName],\n                details: observed.details,\n                accessibility,\n            });\n        };\n\n        if (waitingElement) {\n            const element = this.getElement(observedName);\n\n            if (element && documentContains(element.ownerDocument, element)) {\n                resolve(\n                    element,\n                    waitingElementKey,\n                    waitingElement,\n                    Types.ObservedElementAccesibilities.Any\n                );\n            }\n        }\n\n        if (\n            waitingAccessibleElement &&\n            !waitingAccessibleElement.conditionTimer\n        ) {\n            const resolveAccessible = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isAccessible(element)\n                ) {\n                    resolve(\n                        element,\n                        waitingAccessibleElementKey,\n                        waitingAccessibleElement,\n                        Types.ObservedElementAccesibilities.Accessible\n                    );\n                } else {\n                    waitingAccessibleElement.conditionTimer = win.setTimeout(\n                        resolveAccessible,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveAccessible();\n        }\n\n        if (\n            waitingFocusableElement &&\n            !waitingFocusableElement.conditionTimer\n        ) {\n            const resolveFocusable = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isFocusable(element, true)\n                ) {\n                    resolve(\n                        element,\n                        waitingFocusableElementKey,\n                        waitingFocusableElement,\n                        Types.ObservedElementAccesibilities.Focusable\n                    );\n                } else {\n                    waitingFocusableElement.conditionTimer = win.setTimeout(\n                        resolveFocusable,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveFocusable();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { getBoundingRect } from \"./Utils\";\n\ninterface WindowWithOutlineStyle extends Window {\n    __tabsterOutline?: {\n        style?: HTMLStyleElement;\n        elements?: Types.OutlineElements;\n    };\n}\n\nconst defaultProps: Types.OutlineProps = {\n    areaClass: \"tabster-focus-outline-area\",\n    outlineClass: \"tabster-focus-outline\",\n    outlineColor: \"#ff4500\",\n    outlineWidth: 2,\n    zIndex: 2147483647,\n};\n\nlet _props: Types.OutlineProps = defaultProps;\n\nclass OutlinePosition {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n\n    public equalsTo(other: OutlinePosition): boolean {\n        return (\n            this.left === other.left &&\n            this.top === other.top &&\n            this.right === other.right &&\n            this.bottom === other.bottom\n        );\n    }\n\n    public clone(): OutlinePosition {\n        return new OutlinePosition(\n            this.left,\n            this.top,\n            this.right,\n            this.bottom\n        );\n    }\n}\n\nexport class OutlineAPI implements Types.OutlineAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _initTimer: number | undefined;\n    private _updateTimer: number | undefined;\n    private _outlinedElement: HTMLElement | undefined;\n    private _curPos: OutlinePosition | undefined;\n    private _isVisible = false;\n    private _curOutlineElements: Types.OutlineElements | undefined;\n    private _allOutlineElements: Types.OutlineElements[] = [];\n    private _fullScreenElement: HTMLElement | undefined;\n    private _fullScreenEventName: string | undefined;\n    private _fullScreenElementName: string | undefined;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._initTimer = this._win().setTimeout(this._init, 0);\n\n        if (typeof document !== \"undefined\") {\n            if (\"onfullscreenchange\" in document) {\n                this._fullScreenEventName = \"fullscreenchange\";\n                this._fullScreenElementName = \"fullscreenElement\";\n            } else if (\"onwebkitfullscreenchange\" in document) {\n                this._fullScreenEventName = \"webkitfullscreenchange\";\n                this._fullScreenElementName = \"webkitFullscreenElement\";\n            } else if (\"onmozfullscreenchange\" in document) {\n                this._fullScreenEventName = \"mozfullscreenchange\";\n                this._fullScreenElementName = \"mozFullScreenElement\";\n            } else if (\"onmsfullscreenchange\" in document) {\n                this._fullScreenEventName = \"msfullscreenchange\";\n                this._fullScreenElementName = \"msFullscreenElement\";\n            }\n        }\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        this._tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        const win = this._win();\n\n        win.addEventListener(\"scroll\", this._onScroll, true); // Capture!\n\n        if (this._fullScreenEventName) {\n            win.document.addEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n    };\n\n    setup(props?: Partial<Types.OutlineProps>): void {\n        _props = { ..._props, ...props };\n\n        const win = this._win() as WindowWithOutlineStyle;\n\n        if (!win.__tabsterOutline) {\n            win.__tabsterOutline = {};\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(win.document, _props);\n        }\n\n        if (!props || !props.areaClass) {\n            win.document.body.classList.add(defaultProps.areaClass);\n        } else {\n            win.document.body.classList.remove(defaultProps.areaClass);\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.removeEventListener(\"scroll\", this._onScroll, true);\n\n        if (this._fullScreenEventName) {\n            win.document.removeEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n\n        this._allOutlineElements.forEach((outlineElements) =>\n            this._removeDOM(outlineElements.container)\n        );\n        this._allOutlineElements = [];\n\n        delete this._outlinedElement;\n        delete this._curPos;\n        delete this._curOutlineElements;\n        delete this._fullScreenElement;\n    }\n\n    private _onFullScreenChanged = (e: Event): void => {\n        if (!this._fullScreenElementName || !e.target) {\n            return;\n        }\n\n        const target = (e.target as Document).body || (e.target as HTMLElement);\n        const outlineElements = this._getDOM(target);\n\n        if (target.ownerDocument && outlineElements) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsElement: HTMLElement | null = (target.ownerDocument as any)[\n                this._fullScreenElementName\n            ];\n\n            if (fsElement) {\n                fsElement.appendChild(outlineElements.container);\n                this._fullScreenElement = fsElement;\n            } else {\n                target.ownerDocument.body.appendChild(\n                    outlineElements.container\n                );\n                this._fullScreenElement = undefined;\n            }\n        }\n    };\n\n    private _onKeyboardNavigationStateChanged = (): void => {\n        this._onFocus(this._tabster.focusedElement.getFocusedElement());\n    };\n\n    private _shouldShowCustomOutline(element: HTMLElement): boolean {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n\n        if (\n            tabsterOnElement &&\n            tabsterOnElement.outline &&\n            tabsterOnElement.outline.isIgnored\n        ) {\n            return false;\n        }\n\n        for (let i: HTMLElement | null = element; i; i = i.parentElement) {\n            if (i.classList && i.classList.contains(_props.areaClass)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (!this._updateElement(e) && this._isVisible) {\n            this._setVisibility(false);\n        }\n    };\n\n    private _updateElement(e: HTMLElement | undefined): boolean {\n        this._outlinedElement = undefined;\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._curPos = undefined;\n\n        if (!this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            return false;\n        }\n\n        if (e) {\n            // TODO: It's hard (and not necessary) to come up with every possible\n            // condition when there should be no outline, it's better to add an\n            // API to customize the ignores.\n            if (e.tagName === \"INPUT\") {\n                const inputType = (e as HTMLInputElement).type;\n                const outlinedInputTypes = {\n                    button: true,\n                    checkbox: true,\n                    file: true,\n                    image: true,\n                    radio: true,\n                    range: true,\n                    reset: true,\n                    submit: true,\n                };\n\n                if (!(inputType in outlinedInputTypes)) {\n                    return false;\n                }\n            } else if (\n                e.tagName === \"TEXTAREA\" ||\n                e.contentEditable === \"true\" ||\n                e.tagName === \"IFRAME\"\n            ) {\n                return false;\n            }\n\n            if (!this._shouldShowCustomOutline(e)) {\n                return false;\n            }\n\n            if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n                this._outlinedElement = e;\n                this._updateOutline();\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _onScroll = (e: UIEvent): void => {\n        if (\n            !this._outlinedElement ||\n            !OutlineAPI._isParentChild(\n                e.target as HTMLElement,\n                this._outlinedElement\n            )\n        ) {\n            return;\n        }\n\n        this._curPos = undefined;\n\n        this._setOutlinePosition();\n    };\n\n    private _updateOutline(): void {\n        this._setOutlinePosition();\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        this._updateTimer = this._win().setTimeout(() => {\n            this._updateTimer = undefined;\n            this._updateOutline();\n        }, 30);\n    }\n\n    private _setVisibility(visible: boolean): void {\n        this._isVisible = visible;\n\n        if (this._curOutlineElements) {\n            if (visible) {\n                this._curOutlineElements.container.classList.add(\n                    `${_props.outlineClass}_visible`\n                );\n            } else {\n                this._curOutlineElements.container.classList.remove(\n                    `${_props.outlineClass}_visible`\n                );\n                this._curPos = undefined;\n            }\n        }\n    }\n\n    private _setOutlinePosition(): void {\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        let boundingRect = getBoundingRect(this._win, this._outlinedElement);\n\n        const position = new OutlinePosition(\n            boundingRect.left,\n            boundingRect.top,\n            boundingRect.right,\n            boundingRect.bottom\n        );\n\n        if (this._curPos && position.equalsTo(this._curPos)) {\n            return;\n        }\n\n        const outlineElements = this._getDOM(this._outlinedElement);\n        const win =\n            this._outlinedElement.ownerDocument &&\n            this._outlinedElement.ownerDocument.defaultView;\n\n        if (!outlineElements || !win) {\n            return;\n        }\n\n        if (this._curOutlineElements !== outlineElements) {\n            this._setVisibility(false);\n            this._curOutlineElements = outlineElements;\n        }\n\n        this._curPos = position;\n\n        const p = position.clone();\n        let hasAbsolutePositionedParent = false;\n        let hasFixedPositionedParent = false;\n\n        const container = outlineElements.container;\n        const scrollingElement =\n            container &&\n            container.ownerDocument &&\n            (container.ownerDocument.scrollingElement as HTMLElement);\n\n        if (!scrollingElement) {\n            return;\n        }\n\n        for (\n            let parent = this._outlinedElement.parentElement;\n            parent;\n            parent = parent.parentElement\n        ) {\n            // The element might be partially visible within its scrollable parent,\n            // reduce the bounding rect if this is the case.\n\n            if (parent === this._fullScreenElement) {\n                break;\n            }\n\n            boundingRect = getBoundingRect(this._win, parent);\n\n            const win =\n                parent.ownerDocument && parent.ownerDocument.defaultView;\n\n            if (!win) {\n                return;\n            }\n\n            const computedStyle = win.getComputedStyle(parent);\n            const position = computedStyle.position;\n\n            if (position === \"absolute\") {\n                hasAbsolutePositionedParent = true;\n            } else if (position === \"fixed\" || position === \"sticky\") {\n                hasFixedPositionedParent = true;\n            }\n\n            if (computedStyle.overflow === \"visible\") {\n                continue;\n            }\n\n            if (\n                (!hasAbsolutePositionedParent && !hasFixedPositionedParent) ||\n                computedStyle.overflow === \"hidden\"\n            ) {\n                if (boundingRect.left > p.left) {\n                    p.left = boundingRect.left;\n                }\n                if (boundingRect.top > p.top) {\n                    p.top = boundingRect.top;\n                }\n                if (boundingRect.right < p.right) {\n                    p.right = boundingRect.right;\n                }\n                if (boundingRect.bottom < p.bottom) {\n                    p.bottom = boundingRect.bottom;\n                }\n            }\n        }\n\n        const allRect = getBoundingRect(this._win, scrollingElement);\n        const allWidth = allRect.left + allRect.right;\n        const allHeight = allRect.top + allRect.bottom;\n        const ow = _props.outlineWidth;\n\n        p.left = p.left > ow ? p.left - ow : 0;\n        p.top = p.top > ow ? p.top - ow : 0;\n        p.right = p.right < allWidth - ow ? p.right + ow : allWidth;\n        p.bottom = p.bottom < allHeight - ow ? p.bottom + ow : allHeight;\n\n        const width = p.right - p.left;\n        const height = p.bottom - p.top;\n\n        if (width > ow * 2 && height > ow * 2) {\n            const leftBorderNode = outlineElements.left;\n            const topBorderNode = outlineElements.top;\n            const rightBorderNode = outlineElements.right;\n            const bottomBorderNode = outlineElements.bottom;\n            const sx =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageXOffset;\n            const sy =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageYOffset;\n\n            container.style.position = hasFixedPositionedParent\n                ? \"fixed\"\n                : \"absolute\";\n\n            container.style.background = _props.outlineColor;\n\n            leftBorderNode.style.width =\n                rightBorderNode.style.width =\n                topBorderNode.style.height =\n                bottomBorderNode.style.height =\n                    _props.outlineWidth + \"px\";\n\n            leftBorderNode.style.left =\n                topBorderNode.style.left =\n                bottomBorderNode.style.left =\n                    p.left + sx + \"px\";\n            rightBorderNode.style.left = p.left + sx + width - ow + \"px\";\n\n            leftBorderNode.style.top =\n                rightBorderNode.style.top =\n                topBorderNode.style.top =\n                    p.top + sy + \"px\";\n            bottomBorderNode.style.top = p.top + sy + height - ow + \"px\";\n\n            leftBorderNode.style.height = rightBorderNode.style.height =\n                height + \"px\";\n\n            topBorderNode.style.width = bottomBorderNode.style.width =\n                width + \"px\";\n\n            this._setVisibility(true);\n        } else {\n            this._setVisibility(false);\n        }\n    }\n\n    private _getDOM(\n        contextElement: HTMLElement\n    ): Types.OutlineElements | undefined {\n        const doc = contextElement.ownerDocument;\n        const win = (doc && doc.defaultView) as WindowWithOutlineStyle;\n\n        if (!doc || !win || !win.__tabsterOutline) {\n            return undefined;\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(doc, _props);\n        }\n\n        if (!win.__tabsterOutline.elements) {\n            const outlineElements: Types.OutlineElements = {\n                container: doc.createElement(\"div\"),\n                left: doc.createElement(\"div\"),\n                top: doc.createElement(\"div\"),\n                right: doc.createElement(\"div\"),\n                bottom: doc.createElement(\"div\"),\n            };\n\n            outlineElements.container.className = _props.outlineClass;\n            outlineElements.left.className = `${_props.outlineClass}__left`;\n            outlineElements.top.className = `${_props.outlineClass}__top`;\n            outlineElements.right.className = `${_props.outlineClass}__right`;\n            outlineElements.bottom.className = `${_props.outlineClass}__bottom`;\n\n            outlineElements.container.appendChild(outlineElements.left);\n            outlineElements.container.appendChild(outlineElements.top);\n            outlineElements.container.appendChild(outlineElements.right);\n            outlineElements.container.appendChild(outlineElements.bottom);\n\n            doc.body.appendChild(outlineElements.container);\n\n            win.__tabsterOutline.elements = outlineElements;\n\n            // TODO: Make a garbage collector to remove the references\n            // to the outlines which are nowhere in the DOM anymore.\n            this._allOutlineElements.push(outlineElements);\n        }\n\n        return win.__tabsterOutline.elements;\n    }\n\n    private _removeDOM(contextElement: HTMLElement): void {\n        const win = (contextElement.ownerDocument &&\n            contextElement.ownerDocument.defaultView) as WindowWithOutlineStyle;\n        const outline = win && win.__tabsterOutline;\n\n        if (!outline) {\n            return;\n        }\n\n        if (outline.style && outline.style.parentNode) {\n            outline.style.parentNode.removeChild(outline.style);\n\n            delete outline.style;\n        }\n\n        const outlineElements = outline && outline.elements;\n\n        if (outlineElements) {\n            if (outlineElements.container.parentNode) {\n                outlineElements.container.parentNode.removeChild(\n                    outlineElements.container\n                );\n            }\n\n            delete outline.elements;\n        }\n    }\n\n    private static _isParentChild(\n        parent: HTMLElement,\n        child: HTMLElement\n    ): boolean {\n        return (\n            child === parent ||\n            // tslint:disable-next-line:no-bitwise\n            !!(\n                parent.compareDocumentPosition(child) &\n                document.DOCUMENT_POSITION_CONTAINED_BY\n            )\n        );\n    }\n}\n\nfunction appendStyles(\n    document: HTMLDocument,\n    props: Types.OutlineProps\n): HTMLStyleElement {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.appendChild(document.createTextNode(getOutlineStyles(props)));\n    document.head.appendChild(style);\n    return style;\n}\n\nfunction getOutlineStyles(props: Types.OutlineProps): string {\n    return `\n.${props.areaClass} *, .${props.areaClass} *:focus {\noutline: none !important;\n}\n\n.${props.outlineClass} {\ndisplay: none;\nposition: absolute;\nwidth: 0;\nheight: 0;\nleft: 0;\ntop: 0;\nz-index: ${props.zIndex};\n}\n\n.${props.outlineClass}.${props.outlineClass}_visible {\ndisplay: block;\n}\n\n.${props.outlineClass}__left,\n.${props.outlineClass}__top,\n.${props.outlineClass}__right,\n.${props.outlineClass}__bottom {\nposition: absolute;\nbackground: inherit;\n}`;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\n/**\n * Allows default or user focus behaviour on the DOM subtree\n * i.e. Tabster will not control focus events within an uncontrolled area\n */\nexport class UncontrolledAPI implements Types.UncontrolledAPI {\n    constructor() {\n        /**/\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CrossOriginAPI } from \"./CrossOrigin\";\nimport { DeloserAPI } from \"./Deloser\";\nimport { FocusableAPI } from \"./Focusable\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { GroupperAPI } from \"./Groupper\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { ModalizerAPI } from \"./Modalizer\";\nimport { MoverAPI } from \"./Mover\";\nimport { observeMutations } from \"./MutationEvent\";\nimport { ObservedElementAPI } from \"./State/ObservedElement\";\nimport { OutlineAPI } from \"./Outline\";\nimport { RootAPI, WindowWithTabsterInstance } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { UncontrolledAPI } from \"./Uncontrolled\";\nimport {\n    cleanupFakeWeakRefs,\n    clearElementCache,\n    createElementTreeWalker,\n    createWeakMap,\n    disposeInstanceContext,\n    startFakeWeakRefsCleanup,\n    stopFakeWeakRefsCleanupAndClearStorage,\n} from \"./Utils\";\n\nexport { Types };\n\nclass Tabster implements Types.Tabster {\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    core: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this.keyboardNavigation = tabster.keyboardNavigation;\n        this.focusedElement = tabster.focusedElement;\n        this.focusable = tabster.focusable;\n        this.root = tabster.root;\n        this.uncontrolled = tabster.uncontrolled;\n        this.core = tabster;\n    }\n}\n\n/**\n * Extends Window to include an internal Tabster instance.\n */\nclass TabsterCore implements Types.TabsterCore {\n    private _storage: WeakMap<HTMLElement, Types.TabsterElementStorage>;\n    private _unobserve: (() => void) | undefined;\n    private _win: WindowWithTabsterInstance | undefined;\n    private _forgetMemorizedTimer: number | undefined;\n    private _forgetMemorizedElements: HTMLElement[] = [];\n    private _wrappers: Set<Tabster> = new Set<Tabster>();\n\n    _version: string = __VERSION__;\n    _noop = false;\n    controlTab: boolean;\n    rootDummyInputs: boolean;\n\n    // Core APIs\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    internal: Types.InternalAPI;\n\n    // Extended APIs\n    groupper?: Types.GroupperAPI;\n    mover?: Types.MoverAPI;\n    outline?: Types.OutlineAPI;\n    deloser?: Types.DeloserAPI;\n    modalizer?: Types.ModalizerAPI;\n    observedElement?: Types.ObservedElementAPI;\n    crossOrigin?: Types.CrossOriginAPI;\n\n    constructor(win: Window, props?: Types.TabsterCoreProps) {\n        this._storage = createWeakMap(win);\n        this._win = win;\n\n        const getWindow = this.getWindow;\n\n        this.keyboardNavigation = new KeyboardNavigationState(getWindow);\n        this.focusedElement = new FocusedElementState(this, getWindow);\n        this.focusable = new FocusableAPI(this, getWindow);\n        this.root = new RootAPI(this, props?.autoRoot);\n        this.uncontrolled = new UncontrolledAPI();\n        this.controlTab = props?.controlTab ?? true;\n        this.rootDummyInputs = !!props?.rootDummyInputs;\n\n        this.internal = {\n            stopObserver: (): void => {\n                if (this._unobserve) {\n                    this._unobserve();\n                    delete this._unobserve;\n                }\n            },\n\n            resumeObserver: (syncState: boolean): void => {\n                if (!this._unobserve) {\n                    const doc = getWindow().document;\n                    this._unobserve = observeMutations(\n                        doc,\n                        this,\n                        updateTabsterByAttribute,\n                        syncState\n                    );\n                }\n            },\n        };\n\n        this.internal.resumeObserver(false);\n\n        startFakeWeakRefsCleanup(getWindow);\n    }\n\n    createTabster(noRefCount?: boolean): Types.Tabster {\n        const wrapper = new Tabster(this);\n\n        if (!noRefCount) {\n            this._wrappers.add(wrapper);\n        }\n\n        return wrapper;\n    }\n\n    disposeTabster(wrapper: Types.Tabster, allInstances?: boolean) {\n        if (allInstances) {\n            this._wrappers.clear();\n        } else {\n            this._wrappers.delete(wrapper);\n        }\n\n        if (this._wrappers.size === 0) {\n            this.dispose();\n        }\n    }\n\n    dispose(): void {\n        this.internal.stopObserver();\n\n        const win = this._win;\n\n        this._forgetMemorizedElements = [];\n\n        if (win && this._forgetMemorizedTimer) {\n            win.clearTimeout(this._forgetMemorizedTimer);\n            delete this._forgetMemorizedTimer;\n        }\n\n        this.outline?.dispose();\n        this.crossOrigin?.dispose();\n        this.deloser?.dispose();\n        this.groupper?.dispose();\n        this.mover?.dispose();\n        this.modalizer?.dispose();\n        this.observedElement?.dispose();\n\n        this.keyboardNavigation.dispose();\n        this.focusable.dispose();\n        this.focusedElement.dispose();\n        this.root.dispose();\n\n        stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);\n        clearElementCache(this.getWindow);\n\n        this._storage = new WeakMap();\n        this._wrappers.clear();\n\n        if (win) {\n            disposeInstanceContext(win);\n            delete win.__tabsterInstance;\n            delete this._win;\n        }\n    }\n\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): Types.TabsterElementStorageEntry | undefined {\n        const storage = this._storage;\n        let entry = storage.get(element);\n\n        if (entry) {\n            if (addremove === false && Object.keys(entry).length === 0) {\n                storage.delete(element);\n            }\n        } else if (addremove === true) {\n            entry = {};\n            storage.set(element, entry);\n        }\n\n        return entry;\n    }\n\n    getWindow = () => {\n        if (!this._win) {\n            throw new Error(\"Using disposed Tabster.\");\n        }\n\n        return this._win;\n    };\n\n    forceCleanup(): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._forgetMemorizedElements.push(this._win.document.body);\n\n        if (this._forgetMemorizedTimer) {\n            return;\n        }\n\n        this._forgetMemorizedTimer = this._win.setTimeout(() => {\n            delete this._forgetMemorizedTimer;\n\n            for (\n                let el: HTMLElement | undefined =\n                    this._forgetMemorizedElements.shift();\n                el;\n                el = this._forgetMemorizedElements.shift()\n            ) {\n                clearElementCache(this.getWindow, el);\n                FocusedElementState.forgetMemorized(this.focusedElement, el);\n            }\n        }, 0);\n\n        cleanupFakeWeakRefs(this.getWindow, true);\n    }\n}\n\nexport function forceCleanup(tabster: Types.Tabster): void {\n    // The only legit case for calling this method is when you've completely removed\n    // the application DOM and not going to add the new one for a while.\n    const tabsterCore = tabster.core;\n    tabsterCore.forceCleanup();\n}\n\n/**\n * Creates an instance of Tabster, returns the current window instance if it already exists.\n */\nexport function createTabster(\n    win: Window,\n    props?: Types.TabsterCoreProps\n): Types.Tabster {\n    let tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    if (tabster) {\n        return tabster.createTabster();\n    }\n\n    tabster = new TabsterCore(win, props);\n    (win as WindowWithTabsterInstance).__tabsterInstance = tabster;\n    return tabster.createTabster();\n}\n\n/**\n * Returns an instance of Tabster if it was created before or null.\n */\nexport function getTabster(win: Window): Types.Tabster | null {\n    const tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    return tabster ? tabster.createTabster(true) : null;\n}\n\n/**\n * Creates a new groupper instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getGroupper(tabster: Types.Tabster): Types.GroupperAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.groupper) {\n        tabsterCore.groupper = new GroupperAPI(\n            tabsterCore,\n            tabsterCore.getWindow\n        );\n    }\n\n    return tabsterCore.groupper;\n}\n\n/**\n * Creates a new mover instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getMover(tabster: Types.Tabster): Types.MoverAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.mover) {\n        tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);\n    }\n\n    return tabsterCore.mover;\n}\n\nexport function getOutline(tabster: Types.Tabster): Types.OutlineAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.outline) {\n        tabsterCore.outline = new OutlineAPI(tabsterCore);\n    }\n\n    return tabsterCore.outline;\n}\n\n/**\n * Creates a new new deloser instance or returns an existing one\n * @param tabster Tabster instance\n * @param props Deloser props\n */\nexport function getDeloser(\n    tabster: Types.Tabster,\n    props?: { autoDeloser: Types.DeloserProps }\n): Types.DeloserAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.deloser) {\n        tabsterCore.deloser = new DeloserAPI(tabsterCore, props);\n    }\n\n    return tabsterCore.deloser;\n}\n\n/**\n * Creates a new modalizer instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getModalizer(tabster: Types.Tabster): Types.ModalizerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.modalizer) {\n        tabsterCore.modalizer = new ModalizerAPI(tabsterCore);\n    }\n\n    return tabsterCore.modalizer;\n}\n\nexport function getObservedElement(\n    tabster: Types.Tabster\n): Types.ObservedElementAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.observedElement) {\n        tabsterCore.observedElement = new ObservedElementAPI(tabsterCore);\n    }\n\n    return tabsterCore.observedElement;\n}\n\nexport function getCrossOrigin(tabster: Types.Tabster): Types.CrossOriginAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.crossOrigin) {\n        getDeloser(tabster);\n        getModalizer(tabster);\n        getMover(tabster);\n        getGroupper(tabster);\n        getOutline(tabster);\n        getObservedElement(tabster);\n        tabsterCore.crossOrigin = new CrossOriginAPI(tabsterCore);\n    }\n\n    return tabsterCore.crossOrigin;\n}\n\nexport function getInternal(tabster: Types.Tabster): Types.InternalAPI {\n    const tabsterCore = tabster.core;\n    return tabsterCore.internal;\n}\n\nexport function disposeTabster(\n    tabster: Types.Tabster,\n    allInstances?: boolean\n): void {\n    tabster.core.disposeTabster(tabster, allInstances);\n}\n\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps\n): Types.TabsterDOMAttribute;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain: true\n): string;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain?: true\n): Types.TabsterDOMAttribute | string {\n    const attr = JSON.stringify(props);\n\n    if (plain === true) {\n        return attr;\n    }\n\n    return {\n        [Types.TabsterAttributeName]: attr,\n    };\n}\n\n/**\n * Sets or updates Tabster attribute of the element.\n * @param element an element to set data-tabster attribute on.\n * @param newProps new Tabster props to set.\n * @param update if true, newProps will be merged with the existing props.\n *  When true and the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function setTabsterAttribute(\n    element: HTMLElement,\n    newProps: Types.TabsterAttributeProps,\n    update?: boolean\n): void {\n    let props: Types.TabsterAttributeProps | undefined;\n\n    if (update) {\n        const attr = element.getAttribute(Types.TabsterAttributeName);\n\n        if (attr) {\n            try {\n                props = JSON.parse(attr);\n            } catch (e) {\n                /**/\n            }\n        }\n    }\n\n    if (!update || !props) {\n        props = {};\n    }\n\n    for (const key of Object.keys(\n        newProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const value = newProps[key];\n\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            props[key] = value as any;\n        } else {\n            delete props[key];\n        }\n    }\n\n    if (Object.keys(props).length > 0) {\n        element.setAttribute(\n            Types.TabsterAttributeName,\n            getTabsterAttribute(props, true)\n        );\n    } else {\n        element.removeAttribute(Types.TabsterAttributeName);\n    }\n}\n\n/**\n * Returns an instance of Tabster if it already exists on the window .\n * @param win window instance that could contain an Tabster instance.\n */\nexport function getCurrentTabster(win: Window): Types.TabsterCore | undefined {\n    return (win as WindowWithTabsterInstance).__tabsterInstance;\n}\n\n/**\n * Allows to make Tabster non operational. Intended for performance debugging (and other\n * kinds of debugging), you can switch Tabster off without changing the application code\n * that consumes it.\n * @param tabster a reference created by createTabster().\n * @param noop true if you want to make Tabster noop, false if you want to turn it back.\n */\nexport function makeNoOp(tabster: Types.Tabster, noop: boolean): void {\n    const core = tabster.core;\n\n    if (core._noop !== noop) {\n        core._noop = noop;\n\n        const processNode = (element: HTMLElement): number => {\n            if (!element.getAttribute) {\n                return NodeFilter.FILTER_SKIP;\n            }\n\n            if (\n                getTabsterOnElement(core, element) ||\n                element.hasAttribute(Types.TabsterAttributeName)\n            ) {\n                updateTabsterByAttribute(core, element);\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        };\n\n        const doc = core.getWindow().document;\n        const body = doc.body;\n\n        processNode(body);\n\n        const walker = createElementTreeWalker(doc, body, processNode);\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n}\n\nexport function isNoOp(tabster: Types.TabsterCore): boolean {\n    return (tabster as TabsterCore)._noop;\n}\n"],"names":["TabsterAttributeName","TabsterDummyInputAttributeName","DeloserEventName","ModalizerEventName","MoverEventName","ObservedElementAccesibilities","Any","Accessible","Focusable","RestoreFocusOrders","History","DeloserDefault","RootDefault","DeloserFirst","RootFirst","Visibilities","Invisible","PartiallyVisible","Visible","MoverDirections","Both","Vertical","Horizontal","Grid","GroupperTabbabilities","Unlimited","Limited","LimitedTrapFocus","getTabsterOnElement","tabster","element","storageEntry","updateTabsterByAttribute","dispose","newAttrValue","_noop","undefined","getAttribute","Types","entry","newAttr","attr","string","newValue","JSON","parse","Error","object","e","__DEV__","console","error","tabsterOnElement","oldTabsterProps","newTabsterProps","key","Object","keys","root","onRoot","modalizer","updateModalizer","part","observedElement","onObservedElementUpdate","deloser","setProps","createDeloser","createRoot","createModalizer","focusable","groupper","createGroupper","mover","createMover","observed","uncontrolled","outline","length","augmentAttribute","name","value","aug","origVal","removeAttribute","setAttribute","createEventTarget","getWindow","global","EventTarget","document","createElement","Subscribable","constructor","_callbacks","_val","subscribe","callback","index","indexOf","push","unsubscribe","splice","setVal","val","details","_callCallbacks","getVal","trigger","forEach","KeyboardNavigationState","isNavigatingWithKeyboard","_keyborg","createKeyborg","_onChange","disposeKeyborg","instance","_isBrokenIE11","_DOMRect","DOMRect","x","y","width","height","left","top","right","bottom","_uidCounter","createTreeWalker","NodeFilter","SHOW_ELEMENT","getInstanceContext","win","ctx","__tabsterInstanceContext","elementByUId","basics","Promise","WeakRef","containerBoundingRectCache","lastContainerBoundingRectCacheId","fakeWeakRefs","fakeWeakRefsStarted","disposeInstanceContext","containerBoundingRectCacheTimer","clearTimeout","fakeWeakRefsTimer","createWeakMap","WeakMap","FakeWeakRef","target","_target","deref","cleanup","fwr","forceRemove","documentContains","ownerDocument","WeakHTMLElement","data","context","ref","_ref","_data","get","getData","cleanupFakeWeakRefs","filter","startFakeWeakRefsCleanup","getWeakRef","setTimeout","stopFakeWeakRefsCleanupAndClearStorage","createElementTreeWalker","doc","acceptNode","nodeType","Node","ELEMENT_NODE","getBoundingRect","cacheId","__tabsterCacheId","cached","rect","scrollingElement","documentElement","clientWidth","clientHeight","r","getBoundingClientRect","Math","max","min","window","cId","isElementVerticallyVisibleInContainer","container","getScrollableContainer","containerRect","elementRect","scrollIntoView","alignToTop","scrollTop","el","parentElement","scrollWidth","scrollHeight","makeFocusIgnored","__shouldIgnoreFocus","shouldIgnoreFocus","getUId","wnd","rnd","Uint32Array","crypto","getRandomValues","msCrypto","i","random","srnd","toString","Date","now","join","getElementUId","uid","__tabsterElementUID","getWindowUId","__tabsterCrossOriginWindowUID","clearElementCache","parent","wel","contains","body","matchesSelector","selector","matches","msMatchesSelector","webkitMatchesSelector","call","getPromise","_lastTabsterPartId","TabsterPart","props","_tabster","_element","_props","id","getElement","getProps","DummyInput","isOutside","input","onFocusIn","relatedTarget","DummyInputManager","getLastPhantomFrom","_isBackward","shouldMoveOut","onFocusOut","tabIndex","style","position","opacity","zIndex","setProperty","isFirst","_isPhantom","isPhantom","addEventListener","_focusIn","_focusOut","__tabsterDummyContainer","_disposeTimer","_clearDisposeTimeout","removeEventListener","removeChild","setTopLeft","isIn","current","previous","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DummyInputManagerPriorities","Root","Modalizer","Mover","Groupper","priority","outsideByDefault","_instance","DummyInputManagerCore","moveOutWithDefaultAction","backwards","_setHandlers","_onFocusIn","_onFocusOut","getHandler","setTabbable","tabbable","ret","_lastPhantomFrom","moveWithPhantomDummy","moveOutside","isBackward","dummy","insertBefore","nextElementSibling","beforeBefore","previousElementSibling","nativeFocus","manager","dummyInput","_onFocus","first","_firstDummy","last","_lastDummy","focus","w","_wrappers","wrapper","_getCurrent","_getWindow","_scrollTimer","_reallyAddTransformOffsets","__tabsterDummy","_isOutside","_addDummyInputs","tagName","process","env","_observeMutations","force","wrappers","_unobserve","_transformElements","_addTransformOffsets","_addTimer","sort","a","b","dif","dil","elementParent","nextSibling","lastElementChild","appendChild","firstElementChild","observer","MutationObserver","actualElement","observe","childList","disconnect","from","transformElements","newTransformElements","transformElementsMap","newTransformElementsMap","scrollLeft","set","transform","getComputedStyle","getLastChild","lastChild","getAdjacentElement","prev","cur","adjacent","triggerEvent","event","createEvent","initEvent","dispatchEvent","defaultPrevented","_setInformativeStyle","weakElement","remove","removeProperty","RootDummyManager","setFocused","_setFocused","keyboardNavigation","hasFocused","focusedElement","focusFirst","focusLast","blur","_onDummyInputFocus","onDispose","fromAdjacent","_setFocusedTimer","_isFocused","eventTarget","_setTabbableTimer","RootAPI","getTabsterContext","rootDummyInputs","_dummyManager","_onDispose","controlTab","_add","_remove","dummyManager","autoRoot","_initTimer","_roots","_win","_init","_autoRoot","_autoRootInstance","rootId","rootById","newRoot","_onRootDispose","getRootByUId","__tabsterInstance","options","checkRtl","isExcludedFromMover","isGroupperFirst","isRtl","curElement","ignoreKeydown","dir","toLowerCase","excludeFromMover","curGroupper","curMover","assign","rootAPI","removed","_containerHistoryLength","DeloserItemBase","DeloserItem","_deloser","belongsTo","unshift","focusAvailable","available","findAvailable","resetFocus","resolve","DeloserHistoryByRootBase","rootUId","getLength","_history","removeDeloser","c","hasDeloser","some","d","DeloserHistoryByRoot","unshiftToDeloser","item","skip","resetQueue","DeloserHistory","DeloserAPI","getDeloser","historyByRoot","make","isActive","createInstance","hbr","h","snapshotIndex","buildElementSelector","withClass","withIndex","escapeRegExp","escapeReplaceValue","replace","className","split","cls","trim","buildSelector","isBody","Deloser","_isActive","_snapshotIndex","focusDefault","preserveExisting","we","setActive","active","getActions","clearHistory","setSnapshot","pop","isVisible","restoreFocusOrder","rootElement","findDefault","_findFirst","availableInHistory","_findInHistory","availableDefault","availableFirst","customFocusLostHandler","slice","isFocusable","noSelectorCheck","els","querySelectorAll","findFirst","_restoreFocusTimer","_scheduleRestoreFocus","_activate","_deactivate","autoDeloser","_autoDeloser","_autoDeloserInstance","_curDeloser","_onDeloserDispose","getFocusedElement","pause","_isPaused","resume","restore","curDeloser","_inDeloser","_isRestoringFocus","restoreFocus","lastFocused","getLastFocusedElement","offsetParent","deloserAPI","autoDeloserProps","getHistory","forceRestoreFocus","_transactionTimeout","_pingTimeout","_targetIdUp","CrossOriginTransactionTypes","Bootstrap","FocusElement","State","GetElement","RestoreFocusInDeloser","Ping","CrossOriginDeloserItem","trasactions","_transactions","deloserUId","reset","beginTransaction","RestoreFocusInDeloserTransaction","then","CrossOriginDeloserHistoryByRoot","transactions","CrossOriginTransaction","getOwner","knownTargets","timeout","sentTo","targetId","sendUp","owner","ownerId","beginData","_knownTargets","_sentTo","_promise","reject","_resolve","_reject","getTargets","send","begin","selfResponse","targets","transaction","type","isResponse","timestamp","sentto","_isSelfResponding","endData","_sentCount","end","_send","_inProgress","_isDone","onResponse","inProgressId","BootstrapTransaction","shouldForward","makeResponse","FocusElementTransaction","shouldSelfRespond","GetElementTransaction","findElement","forwardResult","CrossOriginStates","Focused","Blurred","Observed","DeadWindow","KeyboardNavigation","Outline","StateTransaction","state","isSelfResponse","_makeFocusedResponse","_makeBlurredResponse","_makeObservedResponse","_makeDeadWindowResponse","_makeKeyboardNavigationResponse","_makeOutlineResponse","CrossOriginElement","ownerUId","observedName","observedDetails","focusOwner","focusOwnerTimestamp","history","historyItem","CrossOriginFocusedElementState","crossOrigin","isFocusedProgrammatically","CrossOriginObservedElementState","names","deadUId","removeTarget","ignoreKeyboardNavigationStateUpdate","origOutlineSetup","getElementById","getElementData","getDeloserUID","dataOut","accessibility","isWaitElementResolved","isForwardResolved","isResolved","waitElement","result","forwardRet","deloserByUId","PingTransaction","CrossOriginTransactions","_ownerUId","transactionId","knownTarget","t","Transaction","_getTransactionClass","forwardTransaction","_owner","response","_dead","source","postMessage","stringify","_onMessage","setup","isSetUp","setSendUp","_onPageHide","_ping","_isDefaultSendUp","_onBrowserMessage","_pingTimer","_deadPromise","timer","withReject","_beginTransaction","catch","finally","deadWindows","all","map","focused","noFocusedProgrammaticallyFlag","noAccessibleCheck","_focus","focusById","elementId","focusByObservedName","elementData","requestFocus","requestId","_lastRequestFocusId","CrossOriginAPI","_onKeyboardNavigationStateChanged","_onObserved","_ctx","_outlineSetup","_blurTimer","deloserElement","_focusableSelector","FocusableAPI","_getBody","includeProgrammaticallyFocusable","noVisibleCheck","isAccessible","defaultView","computedStyle","visibility","_isHidden","ignoreDisabled","ignoreAriaDisabled","_isDisabled","hasAttribute","attrVal","findLast","findNext","findPrev","acceptCondition","isDefault","findAll","_findElements","found","currentElement","ignoreUncontrolled","ignoreAccessibiliy","onUncontrolled","onElement","elements","acceptElementState","cachedGrouppers","walker","node","_acceptElement","prepareForNextElement","shouldContinueIfNotFound","foundElement","fromCtx","currentNode","FILTER_ACCEPT","previousNode","nextNode","nextUncontrolled","FILTER_SKIP","FILTER_REJECT","lastToIgnore","currentCtx","fromMover","groupperElement","fromMoverElement","moverElement","acceptElement","Keys","Tab","Enter","Esc","Space","PageUp","PageDown","End","Home","Left","Up","Right","Down","FocusedElementState","KEYBORG_FOCUSIN","_onKeyDown","_setFocusedElement","keyCode","ctrlKey","contentEditable","shiftKey","next","findNextTabbable","lastMoverOrGroupper","nextElement","moveFrom","nextElementCtx","onBeforeFocusOut","preventDefault","isTrapped","findFn","stopImmediatePropagation","_lastResetElement","_nextVal","_lastVal","forgetMemorized","_focusFirstOrLast","tabsterFocusable","toFocus","prevTabIndex","prevAriaHidden","_setOrRemoveAttribute","lastResetElement","nextVal","_validateFocusedElement","actualContainer","isTabbingTimer","_isTabbingTimer","isTabbing","callFindNext","what","lastMoverOrGroupperElement","adjacentElement","adjacentCtx","adjacentFrom","GroupperDummyManager","tabbability","makeTabbable","_first","groupperFirstFocusable","getFirst","_shouldTabInside","isTabbable","noIfFirstIsFocused","isParentActive","g","orContainer","setFirst","GroupperAPI","_onMouseDown","_grouppers","_updateCurrent","delegated","Escape","parentCtx","_current","groupperId","newGroupper","_onGroupperDispose","forgetCurrentGrouppers","includeTarget","checkTarget","newIds","isTarget","_lastInternalId","internalId","userId","isFocused","moveOutWithDefault","onActiveChange","isPrev","modalizerElement","isOthersAccessible","_moveOutWithDefault","_onActiveChange","_modalizerParent","_setAccessibilityProps","targetDocument","ariaHiddenWalker","modalizerRoot","modalizerParent","isModalizerElement","containsModalizerRoot","containsModalizerParent","modalizerRootOnPage","modalizerParentOnPage","eventName","warn","ModalizerAPIDummyManager","modalizerAPI","activeModalizer","_modalizerAPI","_onFocusDummyInput","ModalizerAPI","_modalizers","_focusOutTimer","_restoreModalizerFocusTimer","_restoreModalizerFocus","documentBody","modalizerId","_onModalizerDispose","prevModalizer","elementFromModalizer","noFocusFirst","noFocusDefault","isNoFocusFirst","isNoFocusDefault","outsideElement","DOCUMENT_POSITION_PRECEDING","_inputSelector","MoverDummyManager","getMemorized","memorized","_getMemorized","_moverUpdateAdd","_moverUpdateAttr","_moverUpdateRemove","entries","newVisibility","fullyVisible","_fullyVisible","intersectionRatio","_visible","getState","trackState","visibilityAware","_intersectionObserver","IntersectionObserver","_onIntersection","threshold","_observeState","memorizeCurrent","_allElements","_updateQueue","_setCurrentTimer","_updateTimer","setCurrent","changed","_prevCurrent","weak","getCurrent","currentIsDummy","allElements","updateQueue","mutations","mutation","removedNodes","added","addedNodes","attributeName","requestUpdate","setElement","unobserve","delete","updateElement","addNewElements","getMoverGroupper","removeWalk","toe","subtree","attributes","attributeFilter","isCurrent","getDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","xDistance","yDistance","sqrt","MoverAPI","_movers","_ignoredInputTimer","_ignoredInputResolve","_isIgnoredInput","moverProps","direction","isBoth","isVertical","isHorizontal","isGrid","isCyclic","cyclic","focusedElementRect","focusedElementX1","focusedElementX2","ceil","floor","disableHomeEndKeys","nextElementX1","nextElementX2","prevElement","pageUpElement","pageDownElement","targetElement","lastDistance","lastIntersection","xIntersectionWidth","minWidth","intersection","distance","moverId","newMover","_onMoverDispose","selectionStart","selectionEnd","textLength","asyncRet","selection","getSelection","initialLength","modify","selStart","anchorNode","prevAnchorNode","focusNode","prevFocusNode","anchorOffset","prevAnchorOffset","focusOffset","prevFocusOffset","textContent","anchorFound","addOffsets","nodeText","firstChild","len","stop","observeMutations","syncState","onMutation","updateTabsterElements","processNode","_conditionCheckTimeout","ObservedElementAPI","_currentRequest","delta","_currentRequestTimestamp","settleTime","cancel","info","_observedById","observedNames","prevNames","_isObservedNamesUpdated","prevName","obn","_observedByName","_waitConditional","_waiting","_rejectWaiting","shouldResolve","conditionTimer","o","prefix","request","promise","currentRequestFocus","waitingElementKey","waitingAccessibleElementKey","waitingFocusableElementKey","waitingElement","waitingAccessibleElement","waitingFocusableElement","waiting","includes","resolveAccessible","resolveFocusable","defaultProps","areaClass","outlineClass","outlineColor","outlineWidth","OutlinePosition","equalsTo","other","clone","OutlineAPI","_onScroll","_fullScreenEventName","_onFullScreenChanged","_fullScreenElementName","outlineElements","_getDOM","fsElement","_fullScreenElement","_updateElement","_isVisible","_setVisibility","_outlinedElement","_isParentChild","_curPos","_setOutlinePosition","__tabsterOutline","appendStyles","classList","add","_allOutlineElements","_removeDOM","_curOutlineElements","_shouldShowCustomOutline","isIgnored","inputType","outlinedInputTypes","button","checkbox","file","image","radio","range","submit","_updateOutline","visible","boundingRect","p","hasAbsolutePositionedParent","hasFixedPositionedParent","overflow","allRect","allWidth","allHeight","ow","leftBorderNode","topBorderNode","rightBorderNode","bottomBorderNode","sx","pageXOffset","sy","pageYOffset","background","contextElement","parentNode","child","DOCUMENT_POSITION_CONTAINED_BY","createTextNode","getOutlineStyles","head","UncontrolledAPI","Tabster","core","TabsterCore","Set","__VERSION__","_storage","internal","stopObserver","resumeObserver","createTabster","noRefCount","disposeTabster","allInstances","clear","size","_forgetMemorizedElements","_forgetMemorizedTimer","addremove","storage","forceCleanup","shift","tabsterCore","getCurrentTabster","getTabster","getGroupper","getMover","getOutline","getModalizer","getObservedElement","getCrossOrigin","getInternal","getTabsterAttribute","plain","setTabsterAttribute","newProps","update","makeNoOp","noop","isNoOp"],"mappings":"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"}